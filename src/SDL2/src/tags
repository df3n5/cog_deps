!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	video/windows/SDL_windowsvideo.h	/^        LOGFONTA A;$/;"	m	union:tagINPUTCONTEXT2::__anon56
AALINE	render/software/SDL_draw.h	543;"	d
AALINE	render/software/SDL_draw.h	546;"	d
ABGR8888_FROM_RGBA	video/SDL_blit.h	244;"	d
ABORT	stdlib/SDL_malloc.c	552;"	d	file:
ABORT	stdlib/SDL_malloc.c	56;"	d	file:
ABORT_ON_ASSERT_FAILURE	stdlib/SDL_malloc.c	555;"	d	file:
ABS	joystick/SDL_gamecontroller.c	34;"	d	file:
ABS	render/software/SDL_draw.h	292;"	d
ACQUIRE_LOCK	stdlib/SDL_malloc.c	1471;"	d	file:
ACQUIRE_LOCK	stdlib/SDL_malloc.c	1509;"	d	file:
ACQUIRE_MAGIC_INIT_LOCK	stdlib/SDL_malloc.c	1532;"	d	file:
ACQUIRE_MAGIC_INIT_LOCK	stdlib/SDL_malloc.c	1535;"	d	file:
ACQUIRE_MORECORE_LOCK	stdlib/SDL_malloc.c	1524;"	d	file:
ACQUIRE_MORECORE_LOCK	stdlib/SDL_malloc.c	1527;"	d	file:
ACTION_CANCEL	video/android/SDL_androidtouch.c	38;"	d	file:
ACTION_DOWN	video/android/SDL_androidtouch.c	35;"	d	file:
ACTION_MOVE	video/android/SDL_androidtouch.c	37;"	d	file:
ACTION_OUTSIDE	video/android/SDL_androidtouch.c	39;"	d	file:
ACTION_POINTER_1_DOWN	video/android/SDL_androidtouch.c	41;"	d	file:
ACTION_POINTER_1_UP	video/android/SDL_androidtouch.c	42;"	d	file:
ACTION_UP	video/android/SDL_androidtouch.c	36;"	d	file:
ADD_COUNTS	video/SDL_RLEaccel.c	1309;"	d	file:
ADD_COUNTS	video/SDL_RLEaccel.c	1367;"	d	file:
ADD_OPAQUE_COUNTS	video/SDL_RLEaccel.c	1114;"	d	file:
ADD_OPAQUE_COUNTS	video/SDL_RLEaccel.c	1206;"	d	file:
ADD_TRANSL_COUNTS	video/SDL_RLEaccel.c	1126;"	d	file:
ADD_TRANSL_COUNTS	video/SDL_RLEaccel.c	1207;"	d	file:
ADJUST_VOLUME	audio/SDL_mixer.c	85;"	d	file:
ADJUST_VOLUME_U8	audio/SDL_mixer.c	86;"	d	file:
ALPHA_BLEND_RGB	video/SDL_blit.h	444;"	d
ALPHA_BLEND_RGBA	video/SDL_blit.h	453;"	d
ALPHA_BLIT16_50	video/SDL_RLEaccel.c	271;"	d	file:
ALPHA_BLIT16_555	video/SDL_RLEaccel.c	158;"	d	file:
ALPHA_BLIT16_555_50	video/SDL_RLEaccel.c	303;"	d	file:
ALPHA_BLIT16_565	video/SDL_RLEaccel.c	141;"	d	file:
ALPHA_BLIT16_565_50	video/SDL_RLEaccel.c	300;"	d	file:
ALPHA_BLIT32_888	video/SDL_RLEaccel.c	117;"	d	file:
ALPHA_BLIT32_888_50	video/SDL_RLEaccel.c	243;"	d	file:
ALPHA_BLIT_ANY	video/SDL_RLEaccel.c	178;"	d	file:
ALSA_CloseDevice	audio/alsa/SDL_alsa_audio.c	/^ALSA_CloseDevice(_THIS)$/;"	f	file:
ALSA_Deinitialize	audio/alsa/SDL_alsa_audio.c	/^ALSA_Deinitialize(void)$/;"	f	file:
ALSA_GetDeviceBuf	audio/alsa/SDL_alsa_audio.c	/^ALSA_GetDeviceBuf(_THIS)$/;"	f	file:
ALSA_Init	audio/alsa/SDL_alsa_audio.c	/^ALSA_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
ALSA_OpenDevice	audio/alsa/SDL_alsa_audio.c	/^ALSA_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
ALSA_PlayDevice	audio/alsa/SDL_alsa_audio.c	/^ALSA_PlayDevice(_THIS)$/;"	f	file:
ALSA_WaitDevice	audio/alsa/SDL_alsa_audio.c	/^ALSA_WaitDevice(_THIS)$/;"	f	file:
ALSA_bootstrap	audio/alsa/SDL_alsa_audio.c	/^AudioBootStrap ALSA_bootstrap = {$/;"	v
ALSA_finalize_hardware	audio/alsa/SDL_alsa_audio.c	/^ALSA_finalize_hardware(_THIS, snd_pcm_hw_params_t *hwparams, int override)$/;"	f	file:
ALSA_set_buffer_size	audio/alsa/SDL_alsa_audio.c	/^ALSA_set_buffer_size(_THIS, snd_pcm_hw_params_t *params, int override)$/;"	f	file:
ALSA_set_period_size	audio/alsa/SDL_alsa_audio.c	/^ALSA_set_period_size(_THIS, snd_pcm_hw_params_t *params, int override)$/;"	f	file:
ALSA_snd_pcm_close	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_close) (snd_pcm_t * pcm);$/;"	v	file:
ALSA_snd_pcm_drain	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_drain) (snd_pcm_t *);$/;"	v	file:
ALSA_snd_pcm_hw_params	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_hw_params) (snd_pcm_t *, snd_pcm_hw_params_t *);$/;"	v	file:
ALSA_snd_pcm_hw_params_any	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_hw_params_any) (snd_pcm_t *, snd_pcm_hw_params_t *);$/;"	v	file:
ALSA_snd_pcm_hw_params_copy	audio/alsa/SDL_alsa_audio.c	/^static void (*ALSA_snd_pcm_hw_params_copy)$/;"	v	file:
ALSA_snd_pcm_hw_params_get_buffer_size	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_hw_params_get_buffer_size)$/;"	v	file:
ALSA_snd_pcm_hw_params_get_channels	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_hw_params_get_channels)$/;"	v	file:
ALSA_snd_pcm_hw_params_get_period_size	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_hw_params_get_period_size)$/;"	v	file:
ALSA_snd_pcm_hw_params_get_periods	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_hw_params_get_periods)$/;"	v	file:
ALSA_snd_pcm_hw_params_set_access	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_hw_params_set_access)$/;"	v	file:
ALSA_snd_pcm_hw_params_set_buffer_size_near	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_hw_params_set_buffer_size_near)$/;"	v	file:
ALSA_snd_pcm_hw_params_set_channels	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_hw_params_set_channels)$/;"	v	file:
ALSA_snd_pcm_hw_params_set_format	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_hw_params_set_format)$/;"	v	file:
ALSA_snd_pcm_hw_params_set_period_size_near	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_hw_params_set_period_size_near)$/;"	v	file:
ALSA_snd_pcm_hw_params_set_periods_near	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_hw_params_set_periods_near)$/;"	v	file:
ALSA_snd_pcm_hw_params_set_rate_near	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_hw_params_set_rate_near)$/;"	v	file:
ALSA_snd_pcm_hw_params_sizeof	audio/alsa/SDL_alsa_audio.c	/^static size_t(*ALSA_snd_pcm_hw_params_sizeof) (void);$/;"	v	file:
ALSA_snd_pcm_nonblock	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_nonblock) (snd_pcm_t *, int);$/;"	v	file:
ALSA_snd_pcm_open	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_open)$/;"	v	file:
ALSA_snd_pcm_prepare	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_prepare) (snd_pcm_t *);$/;"	v	file:
ALSA_snd_pcm_recover	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_recover) (snd_pcm_t *, int, int);$/;"	v	file:
ALSA_snd_pcm_sw_params	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_sw_params) (snd_pcm_t *, snd_pcm_sw_params_t *);$/;"	v	file:
ALSA_snd_pcm_sw_params_current	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_sw_params_current) (snd_pcm_t *,$/;"	v	file:
ALSA_snd_pcm_sw_params_set_avail_min	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_sw_params_set_avail_min)$/;"	v	file:
ALSA_snd_pcm_sw_params_set_start_threshold	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_sw_params_set_start_threshold)$/;"	v	file:
ALSA_snd_pcm_sw_params_sizeof	audio/alsa/SDL_alsa_audio.c	/^static size_t(*ALSA_snd_pcm_sw_params_sizeof) (void);$/;"	v	file:
ALSA_snd_pcm_wait	audio/alsa/SDL_alsa_audio.c	/^static int (*ALSA_snd_pcm_wait)(snd_pcm_t *, int);$/;"	v	file:
ALSA_snd_pcm_writei	audio/alsa/SDL_alsa_audio.c	/^static snd_pcm_sframes_t(*ALSA_snd_pcm_writei)$/;"	v	file:
ALSA_snd_strerror	audio/alsa/SDL_alsa_audio.c	/^static const char *(*ALSA_snd_strerror) (int);$/;"	v	file:
ANDROIDAUD_bootstrap	audio/android/SDL_androidaudio.c	/^AudioBootStrap ANDROIDAUD_bootstrap = {$/;"	v
ANDROID_VID_DRIVER_NAME	video/android/SDL_androidvideo.c	41;"	d	file:
APM_BIOS_CALL	power/beos/SDL_syspower.c	38;"	d	file:
APM_DEVICE_ALL	power/beos/SDL_syspower.c	37;"	d	file:
APM_DEVICE_PATH	power/beos/SDL_syspower.c	34;"	d	file:
APM_FUNC_GET_POWER_STATUS	power/beos/SDL_syspower.c	36;"	d	file:
APM_FUNC_OFFSET	power/beos/SDL_syspower.c	35;"	d	file:
ARGB2101010_FROM_RGBA	video/SDL_blit.h	252;"	d
ARGB8888_FROM_RGBA	video/SDL_blit.h	236;"	d
ARTS_CloseDevice	audio/arts/SDL_artsaudio.c	/^ARTS_CloseDevice(_THIS)$/;"	f	file:
ARTS_Deinitialize	audio/arts/SDL_artsaudio.c	/^ARTS_Deinitialize(void)$/;"	f	file:
ARTS_GetDeviceBuf	audio/arts/SDL_artsaudio.c	/^ARTS_GetDeviceBuf(_THIS)$/;"	f	file:
ARTS_Init	audio/arts/SDL_artsaudio.c	/^ARTS_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
ARTS_OpenDevice	audio/arts/SDL_artsaudio.c	/^ARTS_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
ARTS_PlayDevice	audio/arts/SDL_artsaudio.c	/^ARTS_PlayDevice(_THIS)$/;"	f	file:
ARTS_Suspend	audio/arts/SDL_artsaudio.c	/^ARTS_Suspend(void)$/;"	f	file:
ARTS_WaitDevice	audio/arts/SDL_artsaudio.c	/^ARTS_WaitDevice(_THIS)$/;"	f	file:
ARTS_WaitDone	audio/arts/SDL_artsaudio.c	/^ARTS_WaitDone(_THIS)$/;"	f	file:
ARTS_bootstrap	audio/arts/SDL_artsaudio.c	/^AudioBootStrap ARTS_bootstrap = {$/;"	v
ASSEMBLE_RGB	video/SDL_blit.h	260;"	d
ASSEMBLE_RGBA	video/SDL_blit.h	401;"	d
AUDIO_GETBUFINFO	audio/sun/SDL_sunaudio.c	51;"	d	file:
AUDIO_USAGE	test/SDL_test_common.c	32;"	d	file:
AXIS	joystick/windows/SDL_dxjoystick_c.h	/^{ BUTTON, AXIS, HAT } Type;$/;"	e	enum:Type
AXIS_MAX	joystick/windows/SDL_dxjoystick.c	84;"	d	file:
AXIS_MAX	joystick/windows/SDL_mmjoystick.c	40;"	d	file:
AXIS_MIN	joystick/windows/SDL_dxjoystick.c	83;"	d	file:
AXIS_MIN	joystick/windows/SDL_mmjoystick.c	39;"	d	file:
Activate	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *Activate)(ITfThreadMgr *, TfClientId *);$/;"	m	struct:ITfThreadMgrVtbl
Activate	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *Activate)(ITfThreadMgrEx *, TfClientId *);$/;"	m	struct:ITfThreadMgrExVtbl
ActivateEx	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *ActivateEx)(ITfThreadMgrEx *, TfClientId *, DWORD);$/;"	m	struct:ITfThreadMgrExVtbl
AddDeviceHelper	joystick/darwin/SDL_sysjoystick.c	/^AddDeviceHelper( io_object_t ioHIDDeviceObject )$/;"	f
AddDialogButton	video/windows/SDL_windowsmessagebox.c	/^static SDL_bool AddDialogButton(WIN_DialogData *dialog, int x, int y, int w, int h, const char *text, int id, SDL_bool isDefault)$/;"	f	file:
AddDialogControl	video/windows/SDL_windowsmessagebox.c	/^static SDL_bool AddDialogControl(WIN_DialogData *dialog, WORD type, DWORD style, DWORD exStyle, int x, int y, int w, int h, int id, const char *caption)$/;"	f	file:
AddDialogData	video/windows/SDL_windowsmessagebox.c	/^static SDL_bool AddDialogData(WIN_DialogData *dialog, const void *data, size_t size)$/;"	f	file:
AddDialogStatic	video/windows/SDL_windowsmessagebox.c	/^static SDL_bool AddDialogStatic(WIN_DialogData *dialog, int x, int y, int w, int h, const char *text)$/;"	f	file:
AddDialogString	video/windows/SDL_windowsmessagebox.c	/^static SDL_bool AddDialogString(WIN_DialogData *dialog, const char *string)$/;"	f	file:
AddRef	joystick/windows/SDL_dxjoystick.c	/^    ULONG (WINAPI *AddRef)(IWbemLocator *This);$/;"	m	struct:IWbemLocatorVtbl	file:
AddRef	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *AddRef)(ITfCandidateListUIElement *);$/;"	m	struct:ITfCandidateListUIElementVtbl
AddRef	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *AddRef)(ITfDocumentMgr *);$/;"	m	struct:ITfDocumentMgrVtbl
AddRef	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *AddRef)(ITfInputProcessorProfileActivationSink *);$/;"	m	struct:ITfInputProcessorProfileActivationSinkVtbl
AddRef	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *AddRef)(ITfReadingInformationUIElement *);$/;"	m	struct:ITfReadingInformationUIElementVtbl
AddRef	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *AddRef)(ITfSource *);$/;"	m	struct:ITfSourceVtbl
AddRef	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *AddRef)(ITfThreadMgr *);$/;"	m	struct:ITfThreadMgrVtbl
AddRef	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *AddRef)(ITfThreadMgrEx *);$/;"	m	struct:ITfThreadMgrExVtbl
AddRef	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *AddRef)(ITfUIElement *);$/;"	m	struct:ITfUIElementVtbl
AddRef	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *AddRef)(ITfUIElementMgr *);$/;"	m	struct:ITfUIElementMgrVtbl
AddRef	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *AddRef)(ITfUIElementSink *);$/;"	m	struct:ITfUIElementSinkVtbl
AdviseSink	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *AdviseSink)(ITfSource *, REFIID, IUnknown *, DWORD *);$/;"	m	struct:ITfSourceVtbl
AlignDialogData	video/windows/SDL_windowsmessagebox.c	/^static SDL_bool AlignDialogData(WIN_DialogData *dialog, size_t size)$/;"	f	file:
Aloss	video/SDL_RLEaccel.c	/^    Uint8 Aloss;$/;"	m	struct:__anon36	file:
Amask	video/SDL_RLEaccel.c	/^    Uint32 Amask;$/;"	m	struct:__anon36	file:
AndroidAUD_CloseDevice	audio/android/SDL_androidaudio.c	/^AndroidAUD_CloseDevice(_THIS)$/;"	f	file:
AndroidAUD_GetDeviceBuf	audio/android/SDL_androidaudio.c	/^AndroidAUD_GetDeviceBuf(_THIS)$/;"	f	file:
AndroidAUD_Init	audio/android/SDL_androidaudio.c	/^AndroidAUD_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
AndroidAUD_OpenDevice	audio/android/SDL_androidaudio.c	/^AndroidAUD_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
AndroidAUD_PlayDevice	audio/android/SDL_androidaudio.c	/^AndroidAUD_PlayDevice(_THIS)$/;"	f	file:
Android_Available	video/android/SDL_androidvideo.c	/^Android_Available(void)$/;"	f	file:
Android_CreateDevice	video/android/SDL_androidvideo.c	/^Android_CreateDevice(int devindex)$/;"	f	file:
Android_CreateWindow	video/android/SDL_androidwindow.c	/^Android_CreateWindow(_THIS, SDL_Window * window)$/;"	f
Android_DeleteDevice	video/android/SDL_androidvideo.c	/^Android_DeleteDevice(SDL_VideoDevice * device)$/;"	f	file:
Android_DestroyWindow	video/android/SDL_androidwindow.c	/^Android_DestroyWindow(_THIS, SDL_Window * window)$/;"	f
Android_GLHandle	video/android/SDL_androidgl.c	/^static void* Android_GLHandle = NULL;$/;"	v	file:
Android_GL_CreateContext	video/android/SDL_androidgl.c	/^Android_GL_CreateContext(_THIS, SDL_Window * window)$/;"	f
Android_GL_DeleteContext	video/android/SDL_androidgl.c	/^Android_GL_DeleteContext(_THIS, SDL_GLContext context)$/;"	f
Android_GL_GetProcAddress	video/android/SDL_androidgl.c	/^Android_GL_GetProcAddress(_THIS, const char *proc)$/;"	f
Android_GL_GetSwapInterval	video/android/SDL_androidgl.c	/^Android_GL_GetSwapInterval(_THIS)$/;"	f
Android_GL_LoadLibrary	video/android/SDL_androidgl.c	/^Android_GL_LoadLibrary(_THIS, const char *path)$/;"	f
Android_GL_MakeCurrent	video/android/SDL_androidgl.c	/^Android_GL_MakeCurrent(_THIS, SDL_Window * window, SDL_GLContext context)$/;"	f
Android_GL_SetSwapInterval	video/android/SDL_androidgl.c	/^Android_GL_SetSwapInterval(_THIS, int interval)$/;"	f
Android_GL_SwapWindow	video/android/SDL_androidgl.c	/^Android_GL_SwapWindow(_THIS, SDL_Window * window)$/;"	f
Android_GL_UnloadLibrary	video/android/SDL_androidgl.c	/^Android_GL_UnloadLibrary(_THIS)$/;"	f
Android_GetClipboardText	video/android/SDL_androidclipboard.c	/^Android_GetClipboardText(_THIS)$/;"	f
Android_GetWindowCoordinates	video/android/SDL_androidtouch.c	/^static void Android_GetWindowCoordinates(float x, float y,$/;"	f	file:
Android_HasClipboardText	video/android/SDL_androidclipboard.c	/^SDL_bool Android_HasClipboardText(_THIS)$/;"	f
Android_HasScreenKeyboardSupport	video/android/SDL_androidkeyboard.c	/^Android_HasScreenKeyboardSupport(_THIS)$/;"	f
Android_InitKeyboard	video/android/SDL_androidkeyboard.c	/^void Android_InitKeyboard(void)$/;"	f
Android_IsScreenKeyboardShown	video/android/SDL_androidkeyboard.c	/^Android_IsScreenKeyboardShown(_THIS, SDL_Window * window)$/;"	f
Android_JNI_CloseAudioDevice	core/android/SDL_android.c	/^void Android_JNI_CloseAudioDevice()$/;"	f
Android_JNI_CreateContext	core/android/SDL_android.c	/^SDL_bool Android_JNI_CreateContext(int majorVersion, int minorVersion,$/;"	f
Android_JNI_DeleteContext	core/android/SDL_android.c	/^SDL_bool Android_JNI_DeleteContext(void)$/;"	f
Android_JNI_ExceptionOccurred	core/android/SDL_android.c	/^static bool Android_JNI_ExceptionOccurred(bool silent)$/;"	f	file:
Android_JNI_FileClose	core/android/SDL_android.c	/^int Android_JNI_FileClose(SDL_RWops* ctx)$/;"	f
Android_JNI_FileOpen	core/android/SDL_android.c	/^int Android_JNI_FileOpen(SDL_RWops* ctx,$/;"	f
Android_JNI_FileRead	core/android/SDL_android.c	/^size_t Android_JNI_FileRead(SDL_RWops* ctx, void* buffer,$/;"	f
Android_JNI_FileSeek	core/android/SDL_android.c	/^Sint64 Android_JNI_FileSeek(SDL_RWops* ctx, Sint64 offset, int whence)$/;"	f
Android_JNI_FileSize	core/android/SDL_android.c	/^Sint64 Android_JNI_FileSize(SDL_RWops* ctx)$/;"	f
Android_JNI_FileWrite	core/android/SDL_android.c	/^size_t Android_JNI_FileWrite(SDL_RWops* ctx, const void* buffer,$/;"	f
Android_JNI_GetAccelerometerValues	core/android/SDL_android.c	/^SDL_bool Android_JNI_GetAccelerometerValues(float values[3])$/;"	f
Android_JNI_GetAudioBuffer	core/android/SDL_android.c	/^void * Android_JNI_GetAudioBuffer()$/;"	f
Android_JNI_GetClipboardText	core/android/SDL_android.c	/^char* Android_JNI_GetClipboardText()$/;"	f
Android_JNI_GetEnv	core/android/SDL_android.c	/^JNIEnv* Android_JNI_GetEnv(void) {$/;"	f
Android_JNI_GetPowerInfo	core/android/SDL_android.c	/^int Android_JNI_GetPowerInfo(int* plugged, int* charged, int* battery, int* seconds, int* percent)$/;"	f
Android_JNI_GetSystemServiceObject	core/android/SDL_android.c	/^static jobject Android_JNI_GetSystemServiceObject(const char* name)$/;"	f	file:
Android_JNI_HasClipboardText	core/android/SDL_android.c	/^SDL_bool Android_JNI_HasClipboardText()$/;"	f
Android_JNI_HideTextInput	core/android/SDL_android.c	/^void Android_JNI_HideTextInput()$/;"	f
Android_JNI_OpenAudioDevice	core/android/SDL_android.c	/^int Android_JNI_OpenAudioDevice(int sampleRate, int is16Bit, int channelCount, int desiredBufferFrames)$/;"	f
Android_JNI_SendMessage	core/android/SDL_android.c	/^int Android_JNI_SendMessage(int command, int param)$/;"	f
Android_JNI_SetActivityTitle	core/android/SDL_android.c	/^void Android_JNI_SetActivityTitle(const char *title)$/;"	f
Android_JNI_SetClipboardText	core/android/SDL_android.c	/^int Android_JNI_SetClipboardText(const char* text)$/;"	f
Android_JNI_SetupThread	core/android/SDL_android.c	/^int Android_JNI_SetupThread(void) {$/;"	f
Android_JNI_ShowTextInput	core/android/SDL_android.c	/^void Android_JNI_ShowTextInput(SDL_Rect *inputRect)$/;"	f
Android_JNI_SwapWindow	core/android/SDL_android.c	/^void Android_JNI_SwapWindow()$/;"	f
Android_JNI_ThreadDestroyed	core/android/SDL_android.c	/^static void Android_JNI_ThreadDestroyed(void* value) {$/;"	f	file:
Android_JNI_WriteAudioBuffer	core/android/SDL_android.c	/^void Android_JNI_WriteAudioBuffer()$/;"	f
Android_Keycodes	video/android/SDL_androidkeyboard.c	/^static SDL_Scancode Android_Keycodes[] = {$/;"	v	file:
Android_OnKeyDown	video/android/SDL_androidkeyboard.c	/^Android_OnKeyDown(int keycode)$/;"	f
Android_OnKeyUp	video/android/SDL_androidkeyboard.c	/^Android_OnKeyUp(int keycode)$/;"	f
Android_OnTouch	video/android/SDL_androidtouch.c	/^void Android_OnTouch(int touch_device_id_in, int pointer_finger_id_in, int action, float x, float y, float p)$/;"	f
Android_PauseSem	video/android/SDL_androidvideo.c	/^SDL_sem *Android_PauseSem = NULL, *Android_ResumeSem = NULL;$/;"	v
Android_PumpEvents	video/android/SDL_androidevents.c	/^Android_PumpEvents(_THIS)$/;"	f
Android_ResumeSem	video/android/SDL_androidvideo.c	/^SDL_sem *Android_PauseSem = NULL, *Android_ResumeSem = NULL;$/;"	v
Android_ScreenFormat	video/android/SDL_androidvideo.c	/^Uint32 Android_ScreenFormat = SDL_PIXELFORMAT_UNKNOWN;$/;"	v
Android_ScreenHeight	video/android/SDL_androidvideo.c	/^int Android_ScreenHeight = 0;$/;"	v
Android_ScreenWidth	video/android/SDL_androidvideo.c	/^int Android_ScreenWidth = 0;$/;"	v
Android_SetClipboardText	video/android/SDL_androidclipboard.c	/^Android_SetClipboardText(_THIS, const char *text)$/;"	f
Android_SetScreenResolution	video/android/SDL_androidvideo.c	/^Android_SetScreenResolution(int width, int height, Uint32 format)$/;"	f
Android_SetTextInputRect	video/android/SDL_androidkeyboard.c	/^Android_SetTextInputRect(_THIS, SDL_Rect *rect)$/;"	f
Android_SetWindowTitle	video/android/SDL_androidwindow.c	/^Android_SetWindowTitle(_THIS, SDL_Window * window)$/;"	f
Android_StartTextInput	video/android/SDL_androidkeyboard.c	/^Android_StartTextInput(_THIS)$/;"	f
Android_StopTextInput	video/android/SDL_androidkeyboard.c	/^Android_StopTextInput(_THIS)$/;"	f
Android_VideoInit	video/android/SDL_androidvideo.c	/^Android_VideoInit(_THIS)$/;"	f
Android_VideoQuit	video/android/SDL_androidvideo.c	/^Android_VideoQuit(_THIS)$/;"	f
Android_Window	video/android/SDL_androidvideo.c	/^SDL_Window *Android_Window = NULL;$/;"	v
Android_bootstrap	video/android/SDL_androidvideo.c	/^VideoBootStrap Android_bootstrap = {$/;"	v
Ashift	video/SDL_RLEaccel.c	/^    Uint8 Ashift;$/;"	m	struct:__anon36	file:
AssociateFocus	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *AssociateFocus)(ITfThreadMgr *, HWND, ITfDocumentMgr *, ITfDocumentMgr **);$/;"	m	struct:ITfThreadMgrVtbl
AssociateFocus	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *AssociateFocus)(ITfThreadMgrEx *, ITfDocumentMgr *, ITfDocumentMgr **);$/;"	m	struct:ITfThreadMgrExVtbl
AudioBootStrap	audio/SDL_sysaudio.h	/^typedef struct AudioBootStrap$/;"	s
AudioBootStrap	audio/SDL_sysaudio.h	/^} AudioBootStrap;$/;"	t	typeref:struct:AudioBootStrap
AxisCorrect	joystick/linux/SDL_sysjoystick.c	/^AxisCorrect(SDL_Joystick * joystick, int which, int value)$/;"	f	file:
BAPP_HIDE	main/beos/SDL_BApp.h	/^    BAPP_HIDE,$/;"	e	enum:ToSDL
BAPP_KEY	main/beos/SDL_BApp.h	/^    BAPP_KEY,$/;"	e	enum:ToSDL
BAPP_KEYBOARD_FOCUS	main/beos/SDL_BApp.h	/^    BAPP_KEYBOARD_FOCUS,    \/* from WINDOW_ACTIVATED *\/$/;"	e	enum:ToSDL
BAPP_MAXIMIZE	main/beos/SDL_BApp.h	/^    BAPP_MAXIMIZE,          \/* from B_ZOOM *\/$/;"	e	enum:ToSDL
BAPP_MINIMIZE	main/beos/SDL_BApp.h	/^    BAPP_MINIMIZE,$/;"	e	enum:ToSDL
BAPP_MOUSE_BUTTON	main/beos/SDL_BApp.h	/^    BAPP_MOUSE_BUTTON,$/;"	e	enum:ToSDL
BAPP_MOUSE_FOCUS	main/beos/SDL_BApp.h	/^    BAPP_MOUSE_FOCUS,       \/* caused by MOUSE_MOVE *\/$/;"	e	enum:ToSDL
BAPP_MOUSE_MOVED	main/beos/SDL_BApp.h	/^    BAPP_MOUSE_MOVED,$/;"	e	enum:ToSDL
BAPP_MOUSE_WHEEL	main/beos/SDL_BApp.h	/^    BAPP_MOUSE_WHEEL,$/;"	e	enum:ToSDL
BAPP_REPAINT	main/beos/SDL_BApp.h	/^    BAPP_REPAINT,           \/* from _UPDATE_ *\/$/;"	e	enum:ToSDL
BAPP_RESTORE	main/beos/SDL_BApp.h	/^    BAPP_RESTORE,           \/* TODO: IMPLEMENT! *\/$/;"	e	enum:ToSDL
BAPP_SCREEN_CHANGED	main/beos/SDL_BApp.h	/^    BAPP_SCREEN_CHANGED$/;"	e	enum:ToSDL
BAPP_SHOW	main/beos/SDL_BApp.h	/^    BAPP_SHOW,$/;"	e	enum:ToSDL
BAPP_WINDOW_CLOSE_REQUESTED	main/beos/SDL_BApp.h	/^    BAPP_WINDOW_CLOSE_REQUESTED,$/;"	e	enum:ToSDL
BAPP_WINDOW_MOVED	main/beos/SDL_BApp.h	/^    BAPP_WINDOW_MOVED,$/;"	e	enum:ToSDL
BAPP_WINDOW_RESIZED	main/beos/SDL_BApp.h	/^    BAPP_WINDOW_RESIZED,$/;"	e	enum:ToSDL
BEOSAUDIO_CloseDevice	audio/baudio/SDL_beaudio.cc	/^BEOSAUDIO_CloseDevice(_THIS)$/;"	f	file:
BEOSAUDIO_Deinitialize	audio/baudio/SDL_beaudio.cc	/^BEOSAUDIO_Deinitialize(void)$/;"	f	file:
BEOSAUDIO_Init	audio/baudio/SDL_beaudio.cc	/^BEOSAUDIO_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
BEOSAUDIO_OpenDevice	audio/baudio/SDL_beaudio.cc	/^BEOSAUDIO_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
BEOSAUDIO_bootstrap	audio/baudio/SDL_beaudio.cc	/^AudioBootStrap BEOSAUDIO_bootstrap = {$/;"	v
BE_Available	video/bwindow/SDL_bvideo.cc	/^int BE_Available(void)$/;"	f
BE_BPPToSDLPxFormat	video/bwindow/SDL_bmodes.cc	/^int32 BE_BPPToSDLPxFormat(int32 bpp) {$/;"	f
BE_ColorSpaceToBitsPerPixel	video/bwindow/SDL_bmodes.cc	/^int32 BE_ColorSpaceToBitsPerPixel(uint32 colorspace)$/;"	f
BE_CreateDevice	video/bwindow/SDL_bvideo.cc	/^BE_CreateDevice(int devindex)$/;"	f	file:
BE_CreateWindow	video/bwindow/SDL_bwindow.cc	/^int BE_CreateWindow(_THIS, SDL_Window *window) {$/;"	f
BE_CreateWindowFramebuffer	video/bwindow/SDL_bframebuffer.cc	/^int BE_CreateWindowFramebuffer(_THIS, SDL_Window * window,$/;"	f
BE_CreateWindowFrom	video/bwindow/SDL_bwindow.cc	/^int BE_CreateWindowFrom(_THIS, SDL_Window * window, const void *data) {$/;"	f
BE_DeleteDevice	video/bwindow/SDL_bvideo.cc	/^void BE_DeleteDevice(SDL_VideoDevice * device)$/;"	f
BE_DestroyWindow	video/bwindow/SDL_bwindow.cc	/^void BE_DestroyWindow(_THIS, SDL_Window * window) {$/;"	f
BE_DestroyWindowFramebuffer	video/bwindow/SDL_bframebuffer.cc	/^void BE_DestroyWindowFramebuffer(_THIS, SDL_Window * window) {$/;"	f
BE_DrawThread	video/bwindow/SDL_bframebuffer.cc	/^int32 BE_DrawThread(void *data) {$/;"	f
BE_GL_CreateContext	video/bwindow/SDL_bopengl.cc	/^SDL_GLContext BE_GL_CreateContext(_THIS, SDL_Window * window) {$/;"	f
BE_GL_DeleteContext	video/bwindow/SDL_bopengl.cc	/^void BE_GL_DeleteContext(_THIS, SDL_GLContext context) {$/;"	f
BE_GL_GetProcAddress	video/bwindow/SDL_bopengl.cc	/^void *BE_GL_GetProcAddress(_THIS, const char *proc)$/;"	f
BE_GL_GetSwapInterval	video/bwindow/SDL_bopengl.cc	/^int BE_GL_GetSwapInterval(_THIS) {$/;"	f
BE_GL_LoadLibrary	video/bwindow/SDL_bopengl.cc	/^int BE_GL_LoadLibrary(_THIS, const char *path)$/;"	f
BE_GL_MakeCurrent	video/bwindow/SDL_bopengl.cc	/^int BE_GL_MakeCurrent(_THIS, SDL_Window * window, SDL_GLContext context) {$/;"	f
BE_GL_RebootContexts	video/bwindow/SDL_bopengl.cc	/^void BE_GL_RebootContexts(_THIS) {$/;"	f
BE_GL_SetSwapInterval	video/bwindow/SDL_bopengl.cc	/^int BE_GL_SetSwapInterval(_THIS, int interval) {$/;"	f
BE_GL_SwapWindow	video/bwindow/SDL_bopengl.cc	/^void BE_GL_SwapWindow(_THIS, SDL_Window * window) {$/;"	f
BE_GL_UnloadLibrary	video/bwindow/SDL_bopengl.cc	/^void BE_GL_UnloadLibrary(_THIS) {$/;"	f
BE_GetClipboardText	video/bwindow/SDL_bclipboard.cc	/^char *BE_GetClipboardText(_THIS) {$/;"	f
BE_GetDisplayBounds	video/bwindow/SDL_bmodes.cc	/^int BE_GetDisplayBounds(_THIS, SDL_VideoDisplay *display, SDL_Rect *rect) {$/;"	f
BE_GetDisplayModes	video/bwindow/SDL_bmodes.cc	/^void BE_GetDisplayModes(_THIS, SDL_VideoDisplay *display) {$/;"	f
BE_GetKeyState	video/bwindow/SDL_bkeyboard.cc	/^int8 BE_GetKeyState(int32 bkey) {$/;"	f
BE_GetScancodeFromBeKey	video/bwindow/SDL_bkeyboard.cc	/^SDL_Scancode BE_GetScancodeFromBeKey(int32 bkey) {$/;"	f
BE_GetWindowGammaRamp	video/bwindow/SDL_bwindow.cc	/^int BE_GetWindowGammaRamp(_THIS, SDL_Window * window, Uint16 * ramp) {$/;"	f
BE_GetWindowWMInfo	video/bwindow/SDL_bwindow.cc	/^SDL_bool BE_GetWindowWMInfo(_THIS, SDL_Window * window,$/;"	f
BE_HasClipboardText	video/bwindow/SDL_bclipboard.cc	/^SDL_bool BE_HasClipboardText(_THIS) {$/;"	f
BE_HideWindow	video/bwindow/SDL_bwindow.cc	/^void BE_HideWindow(_THIS, SDL_Window * window) {$/;"	f
BE_InitModes	video/bwindow/SDL_bmodes.cc	/^int BE_InitModes(_THIS) {$/;"	f
BE_InitOSKeymap	video/bwindow/SDL_bkeyboard.cc	/^void BE_InitOSKeymap() {$/;"	f
BE_MaximizeWindow	video/bwindow/SDL_bwindow.cc	/^void BE_MaximizeWindow(_THIS, SDL_Window * window) {$/;"	f
BE_MinimizeWindow	video/bwindow/SDL_bwindow.cc	/^void BE_MinimizeWindow(_THIS, SDL_Window * window) {$/;"	f
BE_PumpEvents	video/bwindow/SDL_bevents.cc	/^void BE_PumpEvents(_THIS) {$/;"	f
BE_QuitModes	video/bwindow/SDL_bmodes.cc	/^int BE_QuitModes(_THIS) {$/;"	f
BE_RaiseWindow	video/bwindow/SDL_bwindow.cc	/^void BE_RaiseWindow(_THIS, SDL_Window * window) {$/;"	f
BE_RestoreWindow	video/bwindow/SDL_bwindow.cc	/^void BE_RestoreWindow(_THIS, SDL_Window * window) {$/;"	f
BE_SetClipboardText	video/bwindow/SDL_bclipboard.cc	/^int BE_SetClipboardText(_THIS, const char *text) {$/;"	f
BE_SetDisplayMode	video/bwindow/SDL_bmodes.cc	/^int BE_SetDisplayMode(_THIS, SDL_VideoDisplay *display, SDL_DisplayMode *mode){$/;"	f
BE_SetKeyState	video/bwindow/SDL_bkeyboard.cc	/^void BE_SetKeyState(int32 bkey, int8 state) {$/;"	f
BE_SetTextInputRect	video/bwindow/SDL_bvideo.cc	43;"	d	file:
BE_SetWindowBordered	video/bwindow/SDL_bwindow.cc	/^void BE_SetWindowBordered(_THIS, SDL_Window * window, SDL_bool bordered) {$/;"	f
BE_SetWindowFullscreen	video/bwindow/SDL_bwindow.cc	/^void BE_SetWindowFullscreen(_THIS, SDL_Window * window,$/;"	f
BE_SetWindowGammaRamp	video/bwindow/SDL_bwindow.cc	/^int BE_SetWindowGammaRamp(_THIS, SDL_Window * window, const Uint16 * ramp) {$/;"	f
BE_SetWindowGrab	video/bwindow/SDL_bwindow.cc	/^void BE_SetWindowGrab(_THIS, SDL_Window * window, SDL_bool grabbed) {$/;"	f
BE_SetWindowIcon	video/bwindow/SDL_bwindow.cc	/^void BE_SetWindowIcon(_THIS, SDL_Window * window, SDL_Surface * icon) {$/;"	f
BE_SetWindowPosition	video/bwindow/SDL_bwindow.cc	/^void BE_SetWindowPosition(_THIS, SDL_Window * window) {$/;"	f
BE_SetWindowSize	video/bwindow/SDL_bwindow.cc	/^void BE_SetWindowSize(_THIS, SDL_Window * window) {$/;"	f
BE_SetWindowTitle	video/bwindow/SDL_bwindow.cc	/^void BE_SetWindowTitle(_THIS, SDL_Window * window) {$/;"	f
BE_ShowWindow	video/bwindow/SDL_bwindow.cc	/^void BE_ShowWindow(_THIS, SDL_Window * window) {$/;"	f
BE_StartTextInput	video/bwindow/SDL_bvideo.cc	41;"	d	file:
BE_StopTextInput	video/bwindow/SDL_bvideo.cc	42;"	d	file:
BE_UpdateOnce	video/bwindow/SDL_bframebuffer.cc	/^int32 BE_UpdateOnce(SDL_Window *window) {$/;"	f
BE_UpdateWindowFramebuffer	video/bwindow/SDL_bframebuffer.cc	/^int BE_UpdateWindowFramebuffer(_THIS, SDL_Window * window,$/;"	f
BE_VideoInit	video/bwindow/SDL_bvideo.cc	/^int BE_VideoInit(_THIS)$/;"	f
BE_VideoQuit	video/bwindow/SDL_bvideo.cc	/^void BE_VideoQuit(_THIS)$/;"	f
BGL_FLAGS	video/bwindow/SDL_bopengl.cc	38;"	d	file:
BGRA8888_FROM_RGBA	video/SDL_blit.h	248;"	d
BIG_ENDIAN	audio/paudio/SDL_paudio.c	47;"	d	file:
BI_BITFIELDS	video/SDL_bmp.c	46;"	d	file:
BI_RGB	video/SDL_bmp.c	43;"	d	file:
BI_RLE4	video/SDL_bmp.c	45;"	d	file:
BI_RLE8	video/SDL_bmp.c	44;"	d	file:
BLANK_CHEIGHT	events/blank_cursor.h	26;"	d
BLANK_CHOTX	events/blank_cursor.h	27;"	d
BLANK_CHOTY	events/blank_cursor.h	28;"	d
BLANK_CWIDTH	events/blank_cursor.h	25;"	d
BLEND16_50	video/SDL_RLEaccel.c	262;"	d	file:
BLEND16_50	video/SDL_blit_A.c	588;"	d	file:
BLEND2x16_50	video/SDL_blit_A.c	592;"	d	file:
BLINE	render/software/SDL_draw.h	374;"	d
BLIT_TRANSL_555	video/SDL_RLEaccel.c	589;"	d	file:
BLIT_TRANSL_565	video/SDL_RLEaccel.c	577;"	d	file:
BLIT_TRANSL_888	video/SDL_RLEaccel.c	559;"	d	file:
BROKEN_PAND	render/mmx.h	38;"	d
BSDAUDIO_CloseDevice	audio/bsd/SDL_bsdaudio.c	/^BSDAUDIO_CloseDevice(_THIS)$/;"	f	file:
BSDAUDIO_DetectDevices	audio/bsd/SDL_bsdaudio.c	/^BSDAUDIO_DetectDevices(int iscapture, SDL_AddAudioDevice addfn)$/;"	f	file:
BSDAUDIO_GetDeviceBuf	audio/bsd/SDL_bsdaudio.c	/^BSDAUDIO_GetDeviceBuf(_THIS)$/;"	f	file:
BSDAUDIO_Init	audio/bsd/SDL_bsdaudio.c	/^BSDAUDIO_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
BSDAUDIO_OpenDevice	audio/bsd/SDL_bsdaudio.c	/^BSDAUDIO_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
BSDAUDIO_PlayDevice	audio/bsd/SDL_bsdaudio.c	/^BSDAUDIO_PlayDevice(_THIS)$/;"	f	file:
BSDAUDIO_Status	audio/bsd/SDL_bsdaudio.c	/^BSDAUDIO_Status(_THIS)$/;"	f	file:
BSDAUDIO_WaitDevice	audio/bsd/SDL_bsdaudio.c	/^BSDAUDIO_WaitDevice(_THIS)$/;"	f	file:
BSDJOY_JOY	joystick/bsd/SDL_sysjoystick.c	/^        BSDJOY_JOY              \/* joy(4) *\/$/;"	e	enum:joystick_hwdata::__anon71	file:
BSDJOY_UHID	joystick/bsd/SDL_sysjoystick.c	/^        BSDJOY_UHID,            \/* uhid(4) *\/$/;"	e	enum:joystick_hwdata::__anon71	file:
BSD_AUDIO_bootstrap	audio/bsd/SDL_bsdaudio.c	/^AudioBootStrap BSD_AUDIO_bootstrap = {$/;"	v
BUTTON	joystick/windows/SDL_dxjoystick_c.h	/^{ BUTTON, AXIS, HAT } Type;$/;"	e	enum:Type
BVIDEO_H	video/bwindow/SDL_bvideo.h	23;"	d
BWINDOW_bootstrap	video/bwindow/SDL_bvideo.cc	/^VideoBootStrap BWINDOW_bootstrap = {$/;"	v
BWIN_FULLSCREEN	video/bwindow/SDL_BWin.h	/^    BWIN_FULLSCREEN$/;"	e	enum:WinCommands
BWIN_HIDE_WINDOW	video/bwindow/SDL_BWin.h	/^    BWIN_HIDE_WINDOW,$/;"	e	enum:WinCommands
BWIN_MAXIMIZE_WINDOW	video/bwindow/SDL_BWin.h	/^    BWIN_MAXIMIZE_WINDOW,$/;"	e	enum:WinCommands
BWIN_MINIMIZE_WINDOW	video/bwindow/SDL_BWin.h	/^    BWIN_MINIMIZE_WINDOW,$/;"	e	enum:WinCommands
BWIN_MOVE_WINDOW	video/bwindow/SDL_BWin.h	/^    BWIN_MOVE_WINDOW,$/;"	e	enum:WinCommands
BWIN_RESIZE_WINDOW	video/bwindow/SDL_BWin.h	/^    BWIN_RESIZE_WINDOW,$/;"	e	enum:WinCommands
BWIN_RESTORE_WINDOW	video/bwindow/SDL_BWin.h	/^    BWIN_RESTORE_WINDOW,$/;"	e	enum:WinCommands
BWIN_SET_BORDERED	video/bwindow/SDL_BWin.h	/^    BWIN_SET_BORDERED,$/;"	e	enum:WinCommands
BWIN_SET_TITLE	video/bwindow/SDL_BWin.h	/^    BWIN_SET_TITLE,$/;"	e	enum:WinCommands
BWIN_SHOW_WINDOW	video/bwindow/SDL_BWin.h	/^    BWIN_SHOW_WINDOW,$/;"	e	enum:WinCommands
BeginUIElement	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *BeginUIElement)(ITfUIElementMgr *, ITfUIElement *, BOOL *, DWORD *);$/;"	m	struct:ITfUIElementMgrVtbl
BeginUIElement	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *BeginUIElement)(ITfUIElementSink *, DWORD, BOOL *);$/;"	m	struct:ITfUIElementSinkVtbl
BlendLineFunc	render/software/SDL_blendline.c	/^typedef void (*BlendLineFunc) (SDL_Surface * dst,$/;"	t	file:
Blit16to16SurfaceAlpha128	video/SDL_blit_A.c	/^Blit16to16SurfaceAlpha128(SDL_BlitInfo * info, Uint16 mask)$/;"	f	file:
Blit1to1	video/SDL_blit_1.c	/^Blit1to1(SDL_BlitInfo * info)$/;"	f	file:
Blit1to1Key	video/SDL_blit_1.c	/^Blit1to1Key(SDL_BlitInfo * info)$/;"	f	file:
Blit1to2	video/SDL_blit_1.c	/^Blit1to2(SDL_BlitInfo * info)$/;"	f	file:
Blit1to2Key	video/SDL_blit_1.c	/^Blit1to2Key(SDL_BlitInfo * info)$/;"	f	file:
Blit1to3	video/SDL_blit_1.c	/^Blit1to3(SDL_BlitInfo * info)$/;"	f	file:
Blit1to3Key	video/SDL_blit_1.c	/^Blit1to3Key(SDL_BlitInfo * info)$/;"	f	file:
Blit1to4	video/SDL_blit_1.c	/^Blit1to4(SDL_BlitInfo * info)$/;"	f	file:
Blit1to4Key	video/SDL_blit_1.c	/^Blit1to4Key(SDL_BlitInfo * info)$/;"	f	file:
Blit1toNAlpha	video/SDL_blit_1.c	/^Blit1toNAlpha(SDL_BlitInfo * info)$/;"	f	file:
Blit1toNAlphaKey	video/SDL_blit_1.c	/^Blit1toNAlphaKey(SDL_BlitInfo * info)$/;"	f	file:
Blit2101010toN	video/SDL_blit_N.c	/^Blit2101010toN(SDL_BlitInfo * info)$/;"	f	file:
Blit2to2Key	video/SDL_blit_N.c	/^Blit2to2Key(SDL_BlitInfo * info)$/;"	f	file:
Blit32to32KeyAltivec	video/SDL_blit_N.c	/^Blit32to32KeyAltivec(SDL_BlitInfo * info)$/;"	f	file:
Blit4to4MaskAlpha	video/SDL_blit_N.c	/^Blit4to4MaskAlpha(SDL_BlitInfo * info)$/;"	f	file:
Blit555to555SurfaceAlpha	video/SDL_blit_A.c	/^Blit555to555SurfaceAlpha(SDL_BlitInfo * info)$/;"	f	file:
Blit555to555SurfaceAlphaMMX	video/SDL_blit_A.c	/^Blit555to555SurfaceAlphaMMX(SDL_BlitInfo * info)$/;"	f	file:
Blit565to565SurfaceAlpha	video/SDL_blit_A.c	/^Blit565to565SurfaceAlpha(SDL_BlitInfo * info)$/;"	f	file:
Blit565to565SurfaceAlphaMMX	video/SDL_blit_A.c	/^Blit565to565SurfaceAlphaMMX(SDL_BlitInfo * info)$/;"	f	file:
BlitARGBto555PixelAlpha	video/SDL_blit_A.c	/^BlitARGBto555PixelAlpha(SDL_BlitInfo * info)$/;"	f	file:
BlitARGBto565PixelAlpha	video/SDL_blit_A.c	/^BlitARGBto565PixelAlpha(SDL_BlitInfo * info)$/;"	f	file:
BlitBto1	video/SDL_blit_0.c	/^BlitBto1(SDL_BlitInfo * info)$/;"	f	file:
BlitBto1Key	video/SDL_blit_0.c	/^BlitBto1Key(SDL_BlitInfo * info)$/;"	f	file:
BlitBto2	video/SDL_blit_0.c	/^BlitBto2(SDL_BlitInfo * info)$/;"	f	file:
BlitBto2Key	video/SDL_blit_0.c	/^BlitBto2Key(SDL_BlitInfo * info)$/;"	f	file:
BlitBto3	video/SDL_blit_0.c	/^BlitBto3(SDL_BlitInfo * info)$/;"	f	file:
BlitBto3Key	video/SDL_blit_0.c	/^BlitBto3Key(SDL_BlitInfo * info)$/;"	f	file:
BlitBto4	video/SDL_blit_0.c	/^BlitBto4(SDL_BlitInfo * info)$/;"	f	file:
BlitBto4Key	video/SDL_blit_0.c	/^BlitBto4Key(SDL_BlitInfo * info)$/;"	f	file:
BlitBtoNAlpha	video/SDL_blit_0.c	/^BlitBtoNAlpha(SDL_BlitInfo * info)$/;"	f	file:
BlitBtoNAlphaKey	video/SDL_blit_0.c	/^BlitBtoNAlphaKey(SDL_BlitInfo * info)$/;"	f	file:
BlitNto1	video/SDL_blit_N.c	/^BlitNto1(SDL_BlitInfo * info)$/;"	f	file:
BlitNto1Key	video/SDL_blit_N.c	/^BlitNto1Key(SDL_BlitInfo * info)$/;"	f	file:
BlitNto1PixelAlpha	video/SDL_blit_A.c	/^BlitNto1PixelAlpha(SDL_BlitInfo * info)$/;"	f	file:
BlitNto1SurfaceAlpha	video/SDL_blit_A.c	/^BlitNto1SurfaceAlpha(SDL_BlitInfo * info)$/;"	f	file:
BlitNto1SurfaceAlphaKey	video/SDL_blit_A.c	/^BlitNto1SurfaceAlphaKey(SDL_BlitInfo * info)$/;"	f	file:
BlitNto2101010	video/SDL_blit_N.c	/^BlitNto2101010(SDL_BlitInfo * info)$/;"	f	file:
BlitNtoN	video/SDL_blit_N.c	/^BlitNtoN(SDL_BlitInfo * info)$/;"	f	file:
BlitNtoNCopyAlpha	video/SDL_blit_N.c	/^BlitNtoNCopyAlpha(SDL_BlitInfo * info)$/;"	f	file:
BlitNtoNKey	video/SDL_blit_N.c	/^BlitNtoNKey(SDL_BlitInfo * info)$/;"	f	file:
BlitNtoNKeyCopyAlpha	video/SDL_blit_N.c	/^BlitNtoNKeyCopyAlpha(SDL_BlitInfo * info)$/;"	f	file:
BlitNtoNPixelAlpha	video/SDL_blit_A.c	/^BlitNtoNPixelAlpha(SDL_BlitInfo * info)$/;"	f	file:
BlitNtoNSurfaceAlpha	video/SDL_blit_A.c	/^BlitNtoNSurfaceAlpha(SDL_BlitInfo * info)$/;"	f	file:
BlitNtoNSurfaceAlphaKey	video/SDL_blit_A.c	/^BlitNtoNSurfaceAlphaKey(SDL_BlitInfo * info)$/;"	f	file:
BlitRGBtoRGBPixelAlpha	video/SDL_blit_A.c	/^BlitRGBtoRGBPixelAlpha(SDL_BlitInfo * info)$/;"	f	file:
BlitRGBtoRGBPixelAlphaMMX	video/SDL_blit_A.c	/^BlitRGBtoRGBPixelAlphaMMX(SDL_BlitInfo * info)$/;"	f	file:
BlitRGBtoRGBPixelAlphaMMX3DNOW	video/SDL_blit_A.c	/^BlitRGBtoRGBPixelAlphaMMX3DNOW(SDL_BlitInfo * info)$/;"	f	file:
BlitRGBtoRGBSurfaceAlpha	video/SDL_blit_A.c	/^BlitRGBtoRGBSurfaceAlpha(SDL_BlitInfo * info)$/;"	f	file:
BlitRGBtoRGBSurfaceAlpha128	video/SDL_blit_A.c	/^BlitRGBtoRGBSurfaceAlpha128(SDL_BlitInfo * info)$/;"	f	file:
BlitRGBtoRGBSurfaceAlpha128MMX	video/SDL_blit_A.c	/^BlitRGBtoRGBSurfaceAlpha128MMX(SDL_BlitInfo * info)$/;"	f	file:
BlitRGBtoRGBSurfaceAlphaMMX	video/SDL_blit_A.c	/^BlitRGBtoRGBSurfaceAlphaMMX(SDL_BlitInfo * info)$/;"	f	file:
Blit_RGB101010_index8	video/SDL_blit_N.c	/^Blit_RGB101010_index8(SDL_BlitInfo * info)$/;"	f	file:
Blit_RGB555_32Altivec	video/SDL_blit_N.c	/^Blit_RGB555_32Altivec(SDL_BlitInfo * info)$/;"	f	file:
Blit_RGB565_32	video/SDL_blit_N.c	/^Blit_RGB565_32(SDL_BlitInfo * info, const Uint32 * map)$/;"	f	file:
Blit_RGB565_32Altivec	video/SDL_blit_N.c	/^Blit_RGB565_32Altivec(SDL_BlitInfo * info)$/;"	f	file:
Blit_RGB565_ABGR8888	video/SDL_blit_N.c	/^Blit_RGB565_ABGR8888(SDL_BlitInfo * info)$/;"	f	file:
Blit_RGB565_ARGB8888	video/SDL_blit_N.c	/^Blit_RGB565_ARGB8888(SDL_BlitInfo * info)$/;"	f	file:
Blit_RGB565_BGRA8888	video/SDL_blit_N.c	/^Blit_RGB565_BGRA8888(SDL_BlitInfo * info)$/;"	f	file:
Blit_RGB565_RGBA8888	video/SDL_blit_N.c	/^Blit_RGB565_RGBA8888(SDL_BlitInfo * info)$/;"	f	file:
Blit_RGB888_RGB555	video/SDL_blit_N.c	/^Blit_RGB888_RGB555(SDL_BlitInfo * info)$/;"	f	file:
Blit_RGB888_RGB565	video/SDL_blit_N.c	/^Blit_RGB888_RGB565(SDL_BlitInfo * info)$/;"	f	file:
Blit_RGB888_RGB565Altivec	video/SDL_blit_N.c	/^Blit_RGB888_RGB565Altivec(SDL_BlitInfo * info)$/;"	f	file:
Blit_RGB888_index8	video/SDL_blit_N.c	/^Blit_RGB888_index8(SDL_BlitInfo * info)$/;"	f	file:
Bloss	video/SDL_RLEaccel.c	/^    Uint8 Bloss;$/;"	m	struct:__anon36	file:
Bmask	video/SDL_RLEaccel.c	/^    Uint32 Bmask;$/;"	m	struct:__anon36	file:
Bshift	video/SDL_RLEaccel.c	/^    Uint8 Bshift;$/;"	m	struct:__anon36	file:
BufferExists	video/bwindow/SDL_BWin.h	/^    bool BufferExists() { return _buffer_created; }$/;"	f	class:SDL_BWin
BufferIsDirty	video/bwindow/SDL_BWin.h	/^    bool BufferIsDirty() { return _buffer_dirty; }$/;"	f	class:SDL_BWin
BuggyCards	audio/qsa/SDL_qsa_audio.c	/^struct BuggyCards$/;"	s	file:
ButtonChanged	joystick/windows/SDL_dxjoystick.c	/^int ButtonChanged( int ButtonsNow, int ButtonsPrev, int ButtonMask )$/;"	f
BytesPerPixel	video/SDL_RLEaccel.c	/^    Uint8 BytesPerPixel;$/;"	m	struct:__anon36	file:
C1	libm/k_cos.c	/^    C1 = 4.16666666666666019037e-02,    \/* 0x3FA55555, 0x5555554C *\/$/;"	v	file:
C2	libm/k_cos.c	/^    C2 = -1.38888888888741095749e-03,   \/* 0xBF56C16C, 0x16C15177 *\/$/;"	v	file:
C3	libm/k_cos.c	/^    C3 = 2.48015872894767294178e-05,    \/* 0x3EFA01A0, 0x19CB1590 *\/$/;"	v	file:
C4	libm/k_cos.c	/^    C4 = -2.75573143513906633035e-07,   \/* 0xBE927E4F, 0x809C52AD *\/$/;"	v	file:
C5	libm/k_cos.c	/^    C5 = 2.08757232129817482790e-09,    \/* 0x3E21EE9E, 0xBDB4B1C4 *\/$/;"	v	file:
C6	libm/k_cos.c	/^    C6 = -1.13596475577881948265e-11;   \/* 0xBDA8FAE9, 0xBE8838D4 *\/$/;"	v	file:
CALL_MMAP	stdlib/SDL_malloc.c	1352;"	d	file:
CALL_MMAP	stdlib/SDL_malloc.c	1368;"	d	file:
CALL_MMAP	stdlib/SDL_malloc.c	1376;"	d	file:
CALL_MMAP	stdlib/SDL_malloc.c	1423;"	d	file:
CALL_MORECORE	stdlib/SDL_malloc.c	1436;"	d	file:
CALL_MORECORE	stdlib/SDL_malloc.c	1438;"	d	file:
CALL_MREMAP	stdlib/SDL_malloc.c	1430;"	d	file:
CALL_MREMAP	stdlib/SDL_malloc.c	1432;"	d	file:
CALL_MUNMAP	stdlib/SDL_malloc.c	1353;"	d	file:
CALL_MUNMAP	stdlib/SDL_malloc.c	1361;"	d	file:
CALL_MUNMAP	stdlib/SDL_malloc.c	1424;"	d	file:
CANT_THREAD_EVENTS	events/SDL_sysevents.h	33;"	d
CASE	video/SDL_pixels.c	125;"	d	file:
CASE	video/SDL_pixels.c	89;"	d	file:
CCONVERT	haptic/darwin/SDL_syshaptic.c	654;"	d	file:
CDS_FULLSCREEN	video/windows/SDL_windowsmodes.c	29;"	d	file:
CHECK_DISPLAY_INDEX	video/SDL_video.c	100;"	d	file:
CHECK_FMT_STRING	audio/SDL_audio.c	525;"	d	file:
CHECK_FMT_STRING	audio/SDL_audio.c	544;"	d	file:
CHECK_RENDERER_MAGIC	render/SDL_render.c	34;"	d	file:
CHECK_RESULT	audio/coreaudio/SDL_coreaudio.c	32;"	d	file:
CHECK_TEXTURE_MAGIC	render/SDL_render.c	40;"	d	file:
CHECK_WINDOW_MAGIC	video/SDL_video.c	90;"	d	file:
CHOOSE_BLIT	video/SDL_RLEaccel.c	306;"	d	file:
CHS_HKL	video/windows/SDL_windowskeyboard.c	253;"	d	file:
CHS_IMEFILENAME1	video/windows/SDL_windowskeyboard.c	254;"	d	file:
CHS_IMEFILENAME2	video/windows/SDL_windowskeyboard.c	255;"	d	file:
CHT_HKL_DAYI	video/windows/SDL_windowskeyboard.c	236;"	d	file:
CHT_HKL_HK_CANTONESE	video/windows/SDL_windowskeyboard.c	240;"	d	file:
CHT_HKL_NEW_CHANG_JIE	video/windows/SDL_windowskeyboard.c	238;"	d	file:
CHT_HKL_NEW_PHONETIC	video/windows/SDL_windowskeyboard.c	237;"	d	file:
CHT_HKL_NEW_QUICK	video/windows/SDL_windowskeyboard.c	239;"	d	file:
CHT_IMEFILENAME1	video/windows/SDL_windowskeyboard.c	241;"	d	file:
CHT_IMEFILENAME2	video/windows/SDL_windowskeyboard.c	242;"	d	file:
CHT_IMEFILENAME3	video/windows/SDL_windowskeyboard.c	243;"	d	file:
CHUNK_ALIGN_MASK	stdlib/SDL_malloc.c	1326;"	d	file:
CHUNK_OVERHEAD	stdlib/SDL_malloc.c	1697;"	d	file:
CHUNK_OVERHEAD	stdlib/SDL_malloc.c	1699;"	d	file:
CINUSE_BIT	stdlib/SDL_malloc.c	1741;"	d	file:
CLAMP	haptic/linux/SDL_syshaptic.c	551;"	d	file:
CLEANUP_CLIPBOARD	core/android/SDL_android.c	1007;"	d	file:
CMFAIL	stdlib/SDL_malloc.c	1347;"	d	file:
COBJMACROS	joystick/windows/SDL_dxjoystick_c.h	39;"	d
COCOA_TOUCH_CANCELLED	video/cocoa/SDL_cocoawindow.h	/^    COCOA_TOUCH_CANCELLED$/;"	e	enum:__anon43
COCOA_TOUCH_DOWN	video/cocoa/SDL_cocoawindow.h	/^    COCOA_TOUCH_DOWN,$/;"	e	enum:__anon43
COCOA_TOUCH_MOVE	video/cocoa/SDL_cocoawindow.h	/^    COCOA_TOUCH_MOVE,$/;"	e	enum:__anon43
COCOA_TOUCH_UP	video/cocoa/SDL_cocoawindow.h	/^    COCOA_TOUCH_UP,$/;"	e	enum:__anon43
CODE_BOTTOM	video/SDL_rect.c	294;"	d	file:
CODE_LEFT	video/SDL_rect.c	296;"	d	file:
CODE_RIGHT	video/SDL_rect.c	297;"	d	file:
CODE_TOP	video/SDL_rect.c	295;"	d	file:
COL4444	render/psp/SDL_render_psp.c	122;"	d	file:
COL5551	render/psp/SDL_render_psp.c	121;"	d	file:
COL5650	render/psp/SDL_render_psp.c	120;"	d	file:
COL8888	render/psp/SDL_render_psp.c	123;"	d	file:
COLOR_EXPAND	video/directfb/SDL_DirectFB_WM.c	30;"	d	file:
CONVERT	haptic/darwin/SDL_syshaptic.c	656;"	d	file:
CONVERT	haptic/windows/SDL_syshaptic.c	840;"	d	file:
COPY_ALPHA	video/SDL_blit_N.c	/^    { NO_ALPHA = 1, SET_ALPHA = 2, COPY_ALPHA = 4 } alpha;$/;"	e	enum:blit_table::__anon35	file:
COREAUDIO_CloseDevice	audio/coreaudio/SDL_coreaudio.c	/^COREAUDIO_CloseDevice(_THIS)$/;"	f	file:
COREAUDIO_DetectDevices	audio/coreaudio/SDL_coreaudio.c	/^COREAUDIO_DetectDevices(int iscapture, SDL_AddAudioDevice addfn)$/;"	f	file:
COREAUDIO_Init	audio/coreaudio/SDL_coreaudio.c	/^COREAUDIO_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
COREAUDIO_OpenDevice	audio/coreaudio/SDL_coreaudio.c	/^COREAUDIO_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
COREAUDIO_bootstrap	audio/coreaudio/SDL_coreaudio.c	/^AudioBootStrap COREAUDIO_bootstrap = {$/;"	v
CORRUPTION_ERROR_ACTION	stdlib/SDL_malloc.c	2230;"	d	file:
CORRUPTION_ERROR_ACTION	stdlib/SDL_malloc.c	2236;"	d	file:
CPU_HAS_3DNOW	cpuinfo/SDL_cpuinfo.c	51;"	d	file:
CPU_HAS_ALTIVEC	cpuinfo/SDL_cpuinfo.c	49;"	d	file:
CPU_HAS_MMX	cpuinfo/SDL_cpuinfo.c	50;"	d	file:
CPU_HAS_RDTSC	cpuinfo/SDL_cpuinfo.c	48;"	d	file:
CPU_HAS_SSE	cpuinfo/SDL_cpuinfo.c	52;"	d	file:
CPU_HAS_SSE2	cpuinfo/SDL_cpuinfo.c	53;"	d	file:
CPU_HAS_SSE3	cpuinfo/SDL_cpuinfo.c	54;"	d	file:
CPU_HAS_SSE41	cpuinfo/SDL_cpuinfo.c	55;"	d	file:
CPU_HAS_SSE42	cpuinfo/SDL_cpuinfo.c	56;"	d	file:
CPU_getCPUIDFeatures	cpuinfo/SDL_cpuinfo.c	/^CPU_getCPUIDFeatures(void)$/;"	f	file:
CPU_have3DNow	cpuinfo/SDL_cpuinfo.c	/^CPU_have3DNow(void)$/;"	f	file:
CPU_haveAltiVec	cpuinfo/SDL_cpuinfo.c	/^CPU_haveAltiVec(void)$/;"	f	file:
CPU_haveCPUID	cpuinfo/SDL_cpuinfo.c	/^CPU_haveCPUID(void)$/;"	f	file:
CPU_haveMMX	cpuinfo/SDL_cpuinfo.c	/^CPU_haveMMX(void)$/;"	f	file:
CPU_haveRDTSC	cpuinfo/SDL_cpuinfo.c	/^CPU_haveRDTSC(void)$/;"	f	file:
CPU_haveSSE	cpuinfo/SDL_cpuinfo.c	/^CPU_haveSSE(void)$/;"	f	file:
CPU_haveSSE2	cpuinfo/SDL_cpuinfo.c	/^CPU_haveSSE2(void)$/;"	f	file:
CPU_haveSSE3	cpuinfo/SDL_cpuinfo.c	/^CPU_haveSSE3(void)$/;"	f	file:
CPU_haveSSE41	cpuinfo/SDL_cpuinfo.c	/^CPU_haveSSE41(void)$/;"	f	file:
CPU_haveSSE42	cpuinfo/SDL_cpuinfo.c	/^CPU_haveSSE42(void)$/;"	f	file:
CREATE_FLAGS	video/SDL_video.c	1153;"	d	file:
CalculateXRandRRefreshRate	video/x11/SDL_x11modes.c	/^CalculateXRandRRefreshRate(const XRRModeInfo *info)$/;"	f	file:
CalculateXVidModeRefreshRate	video/x11/SDL_x11modes.c	/^CalculateXVidModeRefreshRate(const XF86VidModeModeInfo * info)$/;"	f	file:
CanTrashWindowBuffer	video/bwindow/SDL_BWin.h	/^    bool CanTrashWindowBuffer() { return _trash_window_buffer; }$/;"	f	class:SDL_BWin
Capabilities	joystick/windows/SDL_dxjoystick_c.h	/^    DIDEVCAPS Capabilities;$/;"	m	struct:joystick_hwdata
CaptureSound	audio/winmm/SDL_winmm.c	/^CaptureSound(HWAVEIN hwi, UINT uMsg, DWORD_PTR dwInstance,$/;"	f	file:
CheckPulseAudioAvailable	audio/pulseaudio/SDL_pulseaudio.c	/^CheckPulseAudioAvailable()$/;"	f	file:
CheckSetDisplayMode	video/directfb/SDL_DirectFB_modes.c	/^CheckSetDisplayMode(_THIS, SDL_VideoDisplay * display, DFB_DisplayData * data, SDL_DisplayMode * mode)$/;"	f	file:
CheckUnderflow	audio/sun/SDL_sunaudio.c	/^CheckUnderflow(_THIS)$/;"	f
CheckVidMode	video/x11/SDL_x11modes.c	/^CheckVidMode(Display * display, int *major, int *minor)$/;"	f	file:
CheckXRandR	video/x11/SDL_x11modes.c	/^CheckXRandR(Display * display, int *major, int *minor)$/;"	f	file:
CheckXinerama	video/x11/SDL_x11modes.c	/^CheckXinerama(Display * display, int *major, int *minor)$/;"	f	file:
Chunk	audio/SDL_wave.h	/^typedef struct Chunk$/;"	s
Chunk	audio/SDL_wave.h	/^} Chunk;$/;"	t	typeref:struct:Chunk
ClearID	main/beos/SDL_BeApp.cc	/^void SDL_BApp::ClearID(SDL_BWin *bwin) {$/;"	f	class:SDL_BApp
ClientXY	video/directfb/SDL_DirectFB_events.c	/^ClientXY(DFB_WindowData * p, int *x, int *y)$/;"	f	file:
CloseDevice	audio/SDL_sysaudio.h	/^    void (*CloseDevice) (_THIS);$/;"	m	struct:SDL_AudioDriverImpl
CloseTouchInputHandle	video/windows/SDL_windowsvideo.h	/^    BOOL (WINAPI *CloseTouchInputHandle)( HTOUCHINPUT );$/;"	m	struct:SDL_VideoData
Color16DitherYUY2Mod1X	render/SDL_yuv_sw.c	/^Color16DitherYUY2Mod1X(int *colortab, Uint32 * rgb_2_pix,$/;"	f	file:
Color16DitherYUY2Mod2X	render/SDL_yuv_sw.c	/^Color16DitherYUY2Mod2X(int *colortab, Uint32 * rgb_2_pix,$/;"	f	file:
Color16DitherYV12Mod1X	render/SDL_yuv_sw.c	/^Color16DitherYV12Mod1X(int *colortab, Uint32 * rgb_2_pix,$/;"	f	file:
Color16DitherYV12Mod2X	render/SDL_yuv_sw.c	/^Color16DitherYV12Mod2X(int *colortab, Uint32 * rgb_2_pix,$/;"	f	file:
Color24DitherYUY2Mod1X	render/SDL_yuv_sw.c	/^Color24DitherYUY2Mod1X(int *colortab, Uint32 * rgb_2_pix,$/;"	f	file:
Color24DitherYUY2Mod2X	render/SDL_yuv_sw.c	/^Color24DitherYUY2Mod2X(int *colortab, Uint32 * rgb_2_pix,$/;"	f	file:
Color24DitherYV12Mod1X	render/SDL_yuv_sw.c	/^Color24DitherYV12Mod1X(int *colortab, Uint32 * rgb_2_pix,$/;"	f	file:
Color24DitherYV12Mod2X	render/SDL_yuv_sw.c	/^Color24DitherYV12Mod2X(int *colortab, Uint32 * rgb_2_pix,$/;"	f	file:
Color32DitherYUY2Mod1X	render/SDL_yuv_sw.c	/^Color32DitherYUY2Mod1X(int *colortab, Uint32 * rgb_2_pix,$/;"	f	file:
Color32DitherYUY2Mod2X	render/SDL_yuv_sw.c	/^Color32DitherYUY2Mod2X(int *colortab, Uint32 * rgb_2_pix,$/;"	f	file:
Color32DitherYV12Mod1X	render/SDL_yuv_sw.c	/^Color32DitherYV12Mod1X(int *colortab, Uint32 * rgb_2_pix,$/;"	f	file:
Color32DitherYV12Mod2X	render/SDL_yuv_sw.c	/^Color32DitherYV12Mod2X(int *colortab, Uint32 * rgb_2_pix,$/;"	f	file:
Color565DitherYV12MMX1X	render/SDL_yuv_mmx.c	/^void Color565DitherYV12MMX1X( int *colortab, Uint32 *rgb_2_pix,$/;"	f
ColorRGBDitherYV12MMX1X	render/SDL_yuv_mmx.c	/^void ColorRGBDitherYV12MMX1X( int *colortab, Uint32 *rgb_2_pix,$/;"	f
ColorType	video/x11/edid.h	/^} ColorType;$/;"	t	typeref:enum:__anon10
CombineRectRegions	video/windows/SDL_windowsshape.c	/^CombineRectRegions(SDL_ShapeTree* node,void* closure) {$/;"	f
CompileShader	render/opengl/SDL_shaders_gl.c	/^CompileShader(GL_ShaderContext *ctx, GLhandleARB shader, const char *defines, const char *source)$/;"	f	file:
CompileShaderProgram	render/opengl/SDL_shaders_gl.c	/^CompileShaderProgram(GL_ShaderContext *ctx, int index, GL_ShaderData *data)$/;"	f	file:
ComputeOutCode	video/SDL_rect.c	/^static int ComputeOutCode(const SDL_Rect * rect, int x, int y)$/;"	f	file:
ConfigJoystick	joystick/linux/SDL_sysjoystick.c	/^ConfigJoystick(SDL_Joystick * joystick, int fd)$/;"	f	file:
ConnectServer	joystick/windows/SDL_dxjoystick.c	/^    HRESULT (WINAPI *ConnectServer)(IWbemLocator *This,const BSTR strNetworkResource,const BSTR strUser,const BSTR strPassword,const BSTR strLocale,LONG lSecurityFlags,const BSTR strAuthority,IWbemContext *pCtx,IWbemServices **ppNamespace);$/;"	m	struct:IWbemLocatorVtbl	file:
Connected	video/bwindow/SDL_BWin.h	/^    bool Connected() { return _connected; }$/;"	f	class:SDL_BWin
ConnectionEnabled	video/bwindow/SDL_BWin.h	/^    bool ConnectionEnabled() { return !_connection_disabled; }$/;"	f	class:SDL_BWin
ControllerMapping_t	joystick/SDL_gamecontroller.c	/^} ControllerMapping_t;$/;"	t	typeref:struct:_ControllerMapping_t	file:
ConvertAltivec32to32_noprefetch	video/SDL_blit_N.c	/^ConvertAltivec32to32_noprefetch(SDL_BlitInfo * info)$/;"	f	file:
ConvertAltivec32to32_prefetch	video/SDL_blit_N.c	/^ConvertAltivec32to32_prefetch(SDL_BlitInfo * info)$/;"	f	file:
CorrectAlphaChannel	video/SDL_bmp.c	/^static void CorrectAlphaChannel(SDL_Surface *surface)$/;"	f	file:
CreateContext	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *CreateContext)(ITfDocumentMgr *, TfClientId, DWORD, IUnknown *, ITfContext **, TfEditCookie *);$/;"	m	struct:ITfDocumentMgrVtbl
CreateCursor	events/SDL_mouse_c.h	/^    SDL_Cursor *(*CreateCursor) (SDL_Surface * surface, int hot_x, int hot_y);$/;"	m	struct:__anon65
CreateDialogData	video/windows/SDL_windowsmessagebox.c	/^static WIN_DialogData *CreateDialogData(int w, int h, const char *caption)$/;"	f	file:
CreateDocumentMgr	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *CreateDocumentMgr)(ITfThreadMgr *);$/;"	m	struct:ITfThreadMgrVtbl
CreateDocumentMgr	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *CreateDocumentMgr)(ITfThreadMgrEx *, ITfDocumentMgr **);$/;"	m	struct:ITfThreadMgrExVtbl
CreateGLView	video/bwindow/SDL_BWin.h	/^    virtual BGLView *CreateGLView(Uint32 gl_flags) {$/;"	f	class:SDL_BWin
CreateRenderer	render/SDL_sysrender.h	/^    SDL_Renderer *(*CreateRenderer) (SDL_Window * window, Uint32 flags);$/;"	m	struct:SDL_RenderDriver
CreateSecondary	audio/directsound/SDL_directsound.c	/^CreateSecondary(_THIS, HWND focus)$/;"	f	file:
CreateShaper	video/SDL_sysvideo.h	/^    SDL_WindowShaper *(*CreateShaper)(SDL_Window * window);$/;"	m	struct:SDL_ShapeDriver
CreateSystemCursor	events/SDL_mouse_c.h	/^    SDL_Cursor *(*CreateSystemCursor) (SDL_SystemCursor id);$/;"	m	struct:__anon65
CreateTexture	render/SDL_sysrender.h	/^    int (*CreateTexture) (SDL_Renderer * renderer, SDL_Texture * texture);$/;"	m	struct:SDL_Renderer
CreateWindow	video/SDL_sysvideo.h	/^    int (*CreateWindow) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
CreateWindow	video/SDL_video.c	50;"	d	file:
CreateWindow	video/windows/SDL_windowsvideo.c	101;"	d	file:
CreateWindowFramebuffer	video/SDL_sysvideo.h	/^    int (*CreateWindowFramebuffer) (_THIS, SDL_Window * window, Uint32 * format, void ** pixels, int *pitch);$/;"	m	struct:SDL_VideoDevice
CreateWindowFrom	video/SDL_sysvideo.h	/^    int (*CreateWindowFrom) (_THIS, SDL_Window * window, const void *data);$/;"	m	struct:SDL_VideoDevice
D3DFMTToPixelFormat	render/direct3d/SDL_render_d3d.c	/^D3DFMTToPixelFormat(D3DFORMAT format)$/;"	f	file:
D3DXMATRIX	render/direct3d/SDL_render_d3d.c	/^typedef struct _D3DMATRIX D3DXMATRIX, *LPD3DXMATRIX;$/;"	t	typeref:struct:_D3DMATRIX	file:
D3DXVECTOR3	render/direct3d/SDL_render_d3d.c	/^typedef struct _D3DVECTOR D3DXVECTOR3, *LPD3DXVECTOR3;$/;"	t	typeref:struct:_D3DVECTOR	file:
D3D_ActivateRenderer	render/direct3d/SDL_render_d3d.c	/^D3D_ActivateRenderer(SDL_Renderer * renderer)$/;"	f	file:
D3D_CreateRenderer	render/direct3d/SDL_render_d3d.c	/^D3D_CreateRenderer(SDL_Window * window, Uint32 flags)$/;"	f
D3D_CreateTexture	render/direct3d/SDL_render_d3d.c	/^D3D_CreateTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
D3D_DEBUG_INFO	render/direct3d/SDL_render_d3d.c	35;"	d	file:
D3D_DestroyRenderer	render/direct3d/SDL_render_d3d.c	/^D3D_DestroyRenderer(SDL_Renderer * renderer)$/;"	f	file:
D3D_DestroyTexture	render/direct3d/SDL_render_d3d.c	/^D3D_DestroyTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
D3D_LockTexture	render/direct3d/SDL_render_d3d.c	/^D3D_LockTexture(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
D3D_RenderClear	render/direct3d/SDL_render_d3d.c	/^D3D_RenderClear(SDL_Renderer * renderer)$/;"	f	file:
D3D_RenderCopy	render/direct3d/SDL_render_d3d.c	/^D3D_RenderCopy(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
D3D_RenderCopyEx	render/direct3d/SDL_render_d3d.c	/^D3D_RenderCopyEx(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
D3D_RenderData	render/direct3d/SDL_render_d3d.c	/^} D3D_RenderData;$/;"	t	typeref:struct:__anon94	file:
D3D_RenderDrawLines	render/direct3d/SDL_render_d3d.c	/^D3D_RenderDrawLines(SDL_Renderer * renderer, const SDL_FPoint * points,$/;"	f	file:
D3D_RenderDrawPoints	render/direct3d/SDL_render_d3d.c	/^D3D_RenderDrawPoints(SDL_Renderer * renderer, const SDL_FPoint * points,$/;"	f	file:
D3D_RenderDriver	render/direct3d/SDL_render_d3d.c	/^SDL_RenderDriver D3D_RenderDriver = {$/;"	v
D3D_RenderFillRects	render/direct3d/SDL_render_d3d.c	/^D3D_RenderFillRects(SDL_Renderer * renderer, const SDL_FRect * rects,$/;"	f	file:
D3D_RenderPresent	render/direct3d/SDL_render_d3d.c	/^D3D_RenderPresent(SDL_Renderer * renderer)$/;"	f	file:
D3D_RenderReadPixels	render/direct3d/SDL_render_d3d.c	/^D3D_RenderReadPixels(SDL_Renderer * renderer, const SDL_Rect * rect,$/;"	f	file:
D3D_Reset	render/direct3d/SDL_render_d3d.c	/^D3D_Reset(SDL_Renderer * renderer)$/;"	f	file:
D3D_SetBlendMode	render/direct3d/SDL_render_d3d.c	/^D3D_SetBlendMode(D3D_RenderData * data, int blendMode)$/;"	f	file:
D3D_SetError	render/direct3d/SDL_render_d3d.c	/^D3D_SetError(const char *prefix, HRESULT result)$/;"	f	file:
D3D_SetRenderTarget	render/direct3d/SDL_render_d3d.c	/^D3D_SetRenderTarget(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
D3D_TextureData	render/direct3d/SDL_render_d3d.c	/^} D3D_TextureData;$/;"	t	typeref:struct:__anon95	file:
D3D_UnlockTexture	render/direct3d/SDL_render_d3d.c	/^D3D_UnlockTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
D3D_UpdateClipRect	render/direct3d/SDL_render_d3d.c	/^D3D_UpdateClipRect(SDL_Renderer * renderer)$/;"	f	file:
D3D_UpdateTexture	render/direct3d/SDL_render_d3d.c	/^D3D_UpdateTexture(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
D3D_UpdateTextureInternal	render/direct3d/SDL_render_d3d.c	/^D3D_UpdateTextureInternal(IDirect3DTexture9 *texture, Uint32 format, SDL_bool full_texture, int x, int y, int w, int h, const void *pixels, int pitch)$/;"	f	file:
D3D_UpdateTextureScaleMode	render/direct3d/SDL_render_d3d.c	/^D3D_UpdateTextureScaleMode(D3D_RenderData *data, D3D_TextureData *texturedata, unsigned index)$/;"	f	file:
D3D_UpdateViewport	render/direct3d/SDL_render_d3d.c	/^D3D_UpdateViewport(SDL_Renderer * renderer)$/;"	f	file:
D3D_WindowEvent	render/direct3d/SDL_render_d3d.c	/^D3D_WindowEvent(SDL_Renderer * renderer, const SDL_WindowEvent *event)$/;"	f	file:
DATA	audio/SDL_wave.h	33;"	d
DBUS_dbus_bus_get_private	video/x11/SDL_x11video.c	/^static DBusConnection *(*DBUS_dbus_bus_get_private)(DBusBusType, DBusError *) = NULL;$/;"	v	file:
DBUS_dbus_connection_close	video/x11/SDL_x11video.c	/^static void (*DBUS_dbus_connection_close)(DBusConnection *) = NULL;$/;"	v	file:
DBUS_dbus_connection_flush	video/x11/SDL_x11video.c	/^static void (*DBUS_dbus_connection_flush)(DBusConnection *) = NULL;$/;"	v	file:
DBUS_dbus_connection_send	video/x11/SDL_x11video.c	/^static dbus_bool_t (*DBUS_dbus_connection_send)(DBusConnection *, DBusMessage *, dbus_uint32_t *) = NULL;$/;"	v	file:
DBUS_dbus_connection_set_exit_on_disconnect	video/x11/SDL_x11video.c	/^static void (*DBUS_dbus_connection_set_exit_on_disconnect)(DBusConnection *, dbus_bool_t) = NULL;$/;"	v	file:
DBUS_dbus_connection_unref	video/x11/SDL_x11video.c	/^static void (*DBUS_dbus_connection_unref)(DBusConnection *) = NULL;$/;"	v	file:
DBUS_dbus_error_free	video/x11/SDL_x11video.c	/^static void (*DBUS_dbus_error_free)(DBusError *) = NULL;$/;"	v	file:
DBUS_dbus_error_init	video/x11/SDL_x11video.c	/^static void (*DBUS_dbus_error_init)(DBusError *) = NULL;$/;"	v	file:
DBUS_dbus_error_is_set	video/x11/SDL_x11video.c	/^static dbus_bool_t (*DBUS_dbus_error_is_set)(const DBusError *) = NULL;$/;"	v	file:
DBUS_dbus_message_new_method_call	video/x11/SDL_x11video.c	/^static DBusMessage *(*DBUS_dbus_message_new_method_call)(const char *, const char *, const char *, const char *) = NULL;$/;"	v	file:
DBUS_dbus_message_unref	video/x11/SDL_x11video.c	/^static void (*DBUS_dbus_message_unref)(DBusMessage *) = NULL;$/;"	v	file:
DEBUG_AUDIO	audio/paudio/SDL_paudio.c	42;"	d	file:
DEBUG_CONVERT	audio/SDL_audiotypecvt.c	28;"	d	file:
DEBUG_COREAUDIO	audio/coreaudio/SDL_coreaudio.c	28;"	d	file:
DEBUG_DYNAMIC_X11	video/x11/SDL_x11dyn.c	25;"	d	file:
DECLARE_ALIGNED	video/SDL_blit.h	113;"	d
DECLARE_ALIGNED	video/SDL_blit.h	115;"	d
DECLARE_ALIGNED	video/SDL_blit.h	117;"	d
DECLARE_INTERFACE_	render/direct3d/SDL_render_d3d.c	/^DECLARE_INTERFACE_(ID3DXMatrixStack, IUnknown)$/;"	f
DEFAULT_APPLICATION_PRIORITY	SDL_log.c	39;"	d	file:
DEFAULT_ASSERT_PRIORITY	SDL_log.c	38;"	d	file:
DEFAULT_CHEIGHT	events/default_cursor.h	26;"	d
DEFAULT_CHOTX	events/default_cursor.h	27;"	d
DEFAULT_CHOTY	events/default_cursor.h	28;"	d
DEFAULT_CPARAMS_FRAGS_MAX	audio/qsa/SDL_qsa_audio.c	49;"	d	file:
DEFAULT_CPARAMS_FRAGS_MIN	audio/qsa/SDL_qsa_audio.c	48;"	d	file:
DEFAULT_CPARAMS_FRAG_SIZE	audio/qsa/SDL_qsa_audio.c	47;"	d	file:
DEFAULT_CPARAMS_RATE	audio/qsa/SDL_qsa_audio.c	44;"	d	file:
DEFAULT_CPARAMS_VOICES	audio/qsa/SDL_qsa_audio.c	45;"	d	file:
DEFAULT_CWIDTH	events/default_cursor.h	25;"	d
DEFAULT_EGL	video/x11/SDL_x11opengles.c	29;"	d	file:
DEFAULT_GRANULARITY	stdlib/SDL_malloc.c	601;"	d	file:
DEFAULT_GRANULARITY	stdlib/SDL_malloc.c	603;"	d	file:
DEFAULT_INPUT_DEVNAME	audio/SDL_audio.c	38;"	d	file:
DEFAULT_MMAP_THRESHOLD	stdlib/SDL_malloc.c	615;"	d	file:
DEFAULT_MMAP_THRESHOLD	stdlib/SDL_malloc.c	617;"	d	file:
DEFAULT_OGL_ES	video/x11/SDL_x11opengles.c	32;"	d	file:
DEFAULT_OGL_ES2	video/x11/SDL_x11opengles.c	30;"	d	file:
DEFAULT_OGL_ES_PVR	video/x11/SDL_x11opengles.c	31;"	d	file:
DEFAULT_OPENGL	video/windows/SDL_windowsopengl.c	33;"	d	file:
DEFAULT_OPENGL	video/x11/SDL_x11opengl.c	36;"	d	file:
DEFAULT_OPENGL	video/x11/SDL_x11opengl.c	38;"	d	file:
DEFAULT_OPENGL	video/x11/SDL_x11opengl.c	40;"	d	file:
DEFAULT_OPENGL	video/x11/SDL_x11opengl.c	42;"	d	file:
DEFAULT_OUTPUT_DEVNAME	audio/SDL_audio.c	37;"	d	file:
DEFAULT_PRIORITY	SDL_log.c	37;"	d	file:
DEFAULT_TEST_PRIORITY	SDL_log.c	40;"	d	file:
DEFAULT_TRIM_THRESHOLD	stdlib/SDL_malloc.c	608;"	d	file:
DEFAULT_TRIM_THRESHOLD	stdlib/SDL_malloc.c	610;"	d	file:
DEFINE_COPY_ROW	video/SDL_stretch.c	151;"	d	file:
DEFINE_GUID	video/windows/SDL_windowskeyboard.c	215;"	d	file:
DEFINE_GUID	video/windows/SDL_windowskeyboard.c	216;"	d	file:
DEFINE_MMX_FILLRECT	video/SDL_fillrect.c	151;"	d	file:
DEFINE_SSE_FILLRECT	video/SDL_fillrect.c	58;"	d	file:
DETECT_DEV_IMPL	audio/winmm/SDL_winmm.c	39;"	d	file:
DFBENV_USE_LINUX_INPUT	video/directfb/SDL_DirectFB_video.h	75;"	d
DFBENV_USE_WM	video/directfb/SDL_DirectFB_video.h	76;"	d
DFBENV_USE_X11_CHECK	video/directfb/SDL_DirectFB_video.h	74;"	d
DFBENV_USE_YUV_DIRECT	video/directfb/SDL_DirectFB_video.h	73;"	d
DFBENV_USE_YUV_UNDERLAY	video/directfb/SDL_DirectFB_video.h	72;"	d
DFB_COMPILEDVERSION	video/directfb/SDL_DirectFB_render.c	38;"	d	file:
DFB_COMPILEDVERSION	video/directfb/SDL_DirectFB_video.h	39;"	d
DFB_CursorData	video/directfb/SDL_DirectFB_mouse.h	/^typedef struct _DFB_CursorData DFB_CursorData;$/;"	t	typeref:struct:_DFB_CursorData
DFB_DeviceData	video/directfb/SDL_DirectFB_video.h	/^typedef struct _DFB_DeviceData DFB_DeviceData;$/;"	t	typeref:struct:_DFB_DeviceData
DFB_DisplayData	video/directfb/SDL_DirectFB_modes.h	/^typedef struct _DFB_DisplayData DFB_DisplayData;$/;"	t	typeref:struct:_DFB_DisplayData
DFB_KeyboardData	video/directfb/SDL_DirectFB_video.h	/^typedef struct _DFB_KeyboardData DFB_KeyboardData;$/;"	t	typeref:struct:_DFB_KeyboardData
DFB_MAX_MODES	video/directfb/SDL_DirectFB_modes.c	28;"	d	file:
DFB_MAX_SCREENS	video/directfb/SDL_DirectFB_video.h	128;"	d
DFB_SYM	video/directfb/SDL_DirectFB_dyn.c	32;"	d	file:
DFB_SYM	video/directfb/SDL_DirectFB_dyn.c	40;"	d	file:
DFB_SYM	video/directfb/SDL_DirectFB_dyn.c	42;"	d	file:
DFB_SYM	video/directfb/SDL_DirectFB_dyn.c	44;"	d	file:
DFB_SYM	video/directfb/SDL_DirectFB_dyn.c	57;"	d	file:
DFB_SYM	video/directfb/SDL_DirectFB_dyn.c	59;"	d	file:
DFB_SYMS	video/directfb/SDL_DirectFB_dyn.h	25;"	d
DFB_Theme	video/directfb/SDL_DirectFB_WM.h	/^typedef struct _DFB_Theme DFB_Theme;$/;"	t	typeref:struct:_DFB_Theme
DFB_VERSIONNUM	video/directfb/SDL_DirectFB_render.c	35;"	d	file:
DFB_VERSIONNUM	video/directfb/SDL_DirectFB_video.h	36;"	d
DFB_VERSION_ATLEAST	video/directfb/SDL_DirectFB_render.c	41;"	d	file:
DFB_VERSION_ATLEAST	video/directfb/SDL_DirectFB_video.h	42;"	d
DFB_WindowData	video/directfb/SDL_DirectFB_window.h	/^typedef struct _DFB_WindowData DFB_WindowData;$/;"	t	typeref:struct:_DFB_WindowData
DIDFT_OPTIONAL	joystick/windows/SDL_dxjoystick.c	77;"	d	file:
DIGetTriggerButton	haptic/windows/SDL_syshaptic.c	/^DIGetTriggerButton(Uint16 button)$/;"	f	file:
DIRECTDRAW_VERSION	audio/directsound/directx.h	72;"	d
DIRECTFB_DEBUG	video/directfb/SDL_DirectFB_video.h	70;"	d
DIRECTINPUT_VERSION	audio/directsound/directx.h	74;"	d
DIRECTINPUT_VERSION	joystick/windows/SDL_dxjoystick_c.h	37;"	d
DIRECTSOUND_VERSION	audio/directsound/directx.h	73;"	d
DIRECT_MMAP	stdlib/SDL_malloc.c	1354;"	d	file:
DIRECT_MMAP	stdlib/SDL_malloc.c	1382;"	d	file:
DIRECT_MMAP	stdlib/SDL_malloc.c	1425;"	d	file:
DISEMBLE_RGB	video/SDL_blit.h	176;"	d
DISEMBLE_RGBA	video/SDL_blit.h	352;"	d
DISKAUD_CloseDevice	audio/disk/SDL_diskaudio.c	/^DISKAUD_CloseDevice(_THIS)$/;"	f	file:
DISKAUD_GetDeviceBuf	audio/disk/SDL_diskaudio.c	/^DISKAUD_GetDeviceBuf(_THIS)$/;"	f	file:
DISKAUD_GetOutputFilename	audio/disk/SDL_diskaudio.c	/^DISKAUD_GetOutputFilename(const char *devname)$/;"	f	file:
DISKAUD_Init	audio/disk/SDL_diskaudio.c	/^DISKAUD_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
DISKAUD_OpenDevice	audio/disk/SDL_diskaudio.c	/^DISKAUD_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
DISKAUD_PlayDevice	audio/disk/SDL_diskaudio.c	/^DISKAUD_PlayDevice(_THIS)$/;"	f	file:
DISKAUD_WaitDevice	audio/disk/SDL_diskaudio.c	/^DISKAUD_WaitDevice(_THIS)$/;"	f	file:
DISKAUD_bootstrap	audio/disk/SDL_diskaudio.c	/^AudioBootStrap DISKAUD_bootstrap = {$/;"	v
DISKDEFAULT_OUTFILE	audio/disk/SDL_diskaudio.c	40;"	d	file:
DISKDEFAULT_WRITEDELAY	audio/disk/SDL_diskaudio.c	42;"	d	file:
DISKENVR_OUTFILE	audio/disk/SDL_diskaudio.c	39;"	d	file:
DISKENVR_WRITEDELAY	audio/disk/SDL_diskaudio.c	41;"	d	file:
DISPLAY_PORT	video/x11/edid.h	/^    DISPLAY_PORT$/;"	e	enum:__anon9
DIVBY127	audio/SDL_audiotypecvt.c	52;"	d	file:
DIVBY2147483647	audio/SDL_audiotypecvt.c	54;"	d	file:
DIVBY32767	audio/SDL_audiotypecvt.c	53;"	d	file:
DI_DeviceObjectCallback	haptic/windows/SDL_syshaptic.c	/^DI_DeviceObjectCallback(LPCDIDEVICEOBJECTINSTANCE dev, LPVOID pvRef)$/;"	f	file:
DI_EffectCallback	haptic/windows/SDL_syshaptic.c	/^DI_EffectCallback(LPCDIEFFECTINFO pei, LPVOID pv)$/;"	f	file:
DI_GUIDIsSame	haptic/windows/SDL_syshaptic.c	/^DI_GUIDIsSame(const GUID * a, const GUID * b)$/;"	f	file:
DI_SetError	haptic/windows/SDL_syshaptic.c	/^DI_SetError(const char *str, HRESULT err)$/;"	f	file:
DLGITEMTEMPLATEEX	video/windows/SDL_windowsmessagebox.c	/^} DLGITEMTEMPLATEEX;$/;"	t	typeref:struct:__anon53	file:
DLGTEMPLATEEX	video/windows/SDL_windowsmessagebox.c	/^} DLGTEMPLATEEX;$/;"	t	typeref:struct:__anon52	file:
DLINE	render/software/SDL_draw.h	339;"	d
DOLLARNPOINTS	events/SDL_gesture.c	42;"	d	file:
DOLLARSIZE	events/SDL_gesture.c	43;"	d	file:
DRAWTHREAD	video/bwindow/SDL_bframebuffer.h	29;"	d
DRAW_FASTSETPIXEL	render/software/SDL_draw.h	31;"	d
DRAW_FASTSETPIXEL1	render/software/SDL_draw.h	34;"	d
DRAW_FASTSETPIXEL2	render/software/SDL_draw.h	35;"	d
DRAW_FASTSETPIXEL4	render/software/SDL_draw.h	36;"	d
DRAW_FASTSETPIXELXY	render/software/SDL_draw.h	38;"	d
DRAW_FASTSETPIXELXY1	render/software/SDL_draw.h	42;"	d
DRAW_FASTSETPIXELXY2	render/software/SDL_draw.h	43;"	d
DRAW_FASTSETPIXELXY4	render/software/SDL_draw.h	44;"	d
DRAW_MUL	render/software/SDL_draw.h	29;"	d
DRAW_SETPIXEL	render/software/SDL_draw.h	46;"	d
DRAW_SETPIXELXY	render/software/SDL_draw.h	82;"	d
DRAW_SETPIXELXY2_ADD_RGB	render/software/SDL_draw.h	244;"	d
DRAW_SETPIXELXY2_BLEND_RGB	render/software/SDL_draw.h	238;"	d
DRAW_SETPIXELXY2_MOD_RGB	render/software/SDL_draw.h	250;"	d
DRAW_SETPIXELXY2_RGB	render/software/SDL_draw.h	232;"	d
DRAW_SETPIXELXY4_ADD_RGB	render/software/SDL_draw.h	247;"	d
DRAW_SETPIXELXY4_ADD_RGBA	render/software/SDL_draw.h	282;"	d
DRAW_SETPIXELXY4_BLEND_RGB	render/software/SDL_draw.h	241;"	d
DRAW_SETPIXELXY4_BLEND_RGBA	render/software/SDL_draw.h	279;"	d
DRAW_SETPIXELXY4_MOD_RGB	render/software/SDL_draw.h	253;"	d
DRAW_SETPIXELXY4_MOD_RGBA	render/software/SDL_draw.h	285;"	d
DRAW_SETPIXELXY4_RGB	render/software/SDL_draw.h	235;"	d
DRAW_SETPIXELXY4_RGBA	render/software/SDL_draw.h	276;"	d
DRAW_SETPIXELXY_ADD_ARGB8888	render/software/SDL_draw.h	207;"	d
DRAW_SETPIXELXY_ADD_RGB555	render/software/SDL_draw.h	114;"	d
DRAW_SETPIXELXY_ADD_RGB565	render/software/SDL_draw.h	145;"	d
DRAW_SETPIXELXY_ADD_RGB888	render/software/SDL_draw.h	176;"	d
DRAW_SETPIXELXY_ARGB8888	render/software/SDL_draw.h	201;"	d
DRAW_SETPIXELXY_BLEND_ARGB8888	render/software/SDL_draw.h	204;"	d
DRAW_SETPIXELXY_BLEND_RGB555	render/software/SDL_draw.h	111;"	d
DRAW_SETPIXELXY_BLEND_RGB565	render/software/SDL_draw.h	142;"	d
DRAW_SETPIXELXY_BLEND_RGB888	render/software/SDL_draw.h	173;"	d
DRAW_SETPIXELXY_MOD_ARGB8888	render/software/SDL_draw.h	210;"	d
DRAW_SETPIXELXY_MOD_RGB555	render/software/SDL_draw.h	117;"	d
DRAW_SETPIXELXY_MOD_RGB565	render/software/SDL_draw.h	148;"	d
DRAW_SETPIXELXY_MOD_RGB888	render/software/SDL_draw.h	179;"	d
DRAW_SETPIXELXY_RGB555	render/software/SDL_draw.h	108;"	d
DRAW_SETPIXELXY_RGB565	render/software/SDL_draw.h	139;"	d
DRAW_SETPIXELXY_RGB888	render/software/SDL_draw.h	170;"	d
DRAW_SETPIXEL_ADD	render/software/SDL_draw.h	62;"	d
DRAW_SETPIXEL_ADD_ARGB8888	render/software/SDL_draw.h	193;"	d
DRAW_SETPIXEL_ADD_RGB	render/software/SDL_draw.h	224;"	d
DRAW_SETPIXEL_ADD_RGB555	render/software/SDL_draw.h	100;"	d
DRAW_SETPIXEL_ADD_RGB565	render/software/SDL_draw.h	131;"	d
DRAW_SETPIXEL_ADD_RGB888	render/software/SDL_draw.h	162;"	d
DRAW_SETPIXEL_ADD_RGBA	render/software/SDL_draw.h	268;"	d
DRAW_SETPIXEL_ARGB8888	render/software/SDL_draw.h	186;"	d
DRAW_SETPIXEL_BLEND	render/software/SDL_draw.h	52;"	d
DRAW_SETPIXEL_BLEND_ARGB8888	render/software/SDL_draw.h	189;"	d
DRAW_SETPIXEL_BLEND_RGB	render/software/SDL_draw.h	220;"	d
DRAW_SETPIXEL_BLEND_RGB555	render/software/SDL_draw.h	96;"	d
DRAW_SETPIXEL_BLEND_RGB565	render/software/SDL_draw.h	127;"	d
DRAW_SETPIXEL_BLEND_RGB888	render/software/SDL_draw.h	158;"	d
DRAW_SETPIXEL_BLEND_RGBA	render/software/SDL_draw.h	264;"	d
DRAW_SETPIXEL_MOD	render/software/SDL_draw.h	72;"	d
DRAW_SETPIXEL_MOD_ARGB8888	render/software/SDL_draw.h	197;"	d
DRAW_SETPIXEL_MOD_RGB	render/software/SDL_draw.h	228;"	d
DRAW_SETPIXEL_MOD_RGB555	render/software/SDL_draw.h	104;"	d
DRAW_SETPIXEL_MOD_RGB565	render/software/SDL_draw.h	135;"	d
DRAW_SETPIXEL_MOD_RGB888	render/software/SDL_draw.h	166;"	d
DRAW_SETPIXEL_MOD_RGBA	render/software/SDL_draw.h	272;"	d
DRAW_SETPIXEL_RGB	render/software/SDL_draw.h	217;"	d
DRAW_SETPIXEL_RGB555	render/software/SDL_draw.h	93;"	d
DRAW_SETPIXEL_RGB565	render/software/SDL_draw.h	124;"	d
DRAW_SETPIXEL_RGB888	render/software/SDL_draw.h	155;"	d
DRAW_SETPIXEL_RGBA	render/software/SDL_draw.h	261;"	d
DSOUNDLOAD	audio/directsound/SDL_directsound.c	72;"	d	file:
DSOUNDLOAD	audio/directsound/SDL_directsound.c	80;"	d	file:
DSOUND_CloseDevice	audio/directsound/SDL_directsound.c	/^DSOUND_CloseDevice(_THIS)$/;"	f	file:
DSOUND_Deinitialize	audio/directsound/SDL_directsound.c	/^DSOUND_Deinitialize(void)$/;"	f	file:
DSOUND_DetectDevices	audio/directsound/SDL_directsound.c	/^DSOUND_DetectDevices(int iscapture, SDL_AddAudioDevice addfn)$/;"	f	file:
DSOUND_GetDeviceBuf	audio/directsound/SDL_directsound.c	/^DSOUND_GetDeviceBuf(_THIS)$/;"	f	file:
DSOUND_Init	audio/directsound/SDL_directsound.c	/^DSOUND_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
DSOUND_Load	audio/directsound/SDL_directsound.c	/^DSOUND_Load(void)$/;"	f	file:
DSOUND_OpenDevice	audio/directsound/SDL_directsound.c	/^DSOUND_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
DSOUND_PlayDevice	audio/directsound/SDL_directsound.c	/^DSOUND_PlayDevice(_THIS)$/;"	f	file:
DSOUND_Unload	audio/directsound/SDL_directsound.c	/^DSOUND_Unload(void)$/;"	f	file:
DSOUND_WaitDevice	audio/directsound/SDL_directsound.c	/^DSOUND_WaitDevice(_THIS)$/;"	f	file:
DSOUND_WaitDone	audio/directsound/SDL_directsound.c	/^DSOUND_WaitDone(_THIS)$/;"	f	file:
DSOUND_bootstrap	audio/directsound/SDL_directsound.c	/^AudioBootStrap DSOUND_bootstrap = {$/;"	v
DSP_CloseDevice	audio/dsp/SDL_dspaudio.c	/^DSP_CloseDevice(_THIS)$/;"	f	file:
DSP_DetectDevices	audio/dsp/SDL_dspaudio.c	/^DSP_DetectDevices(int iscapture, SDL_AddAudioDevice addfn)$/;"	f	file:
DSP_GetDeviceBuf	audio/dsp/SDL_dspaudio.c	/^DSP_GetDeviceBuf(_THIS)$/;"	f	file:
DSP_Init	audio/dsp/SDL_dspaudio.c	/^DSP_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
DSP_OpenDevice	audio/dsp/SDL_dspaudio.c	/^DSP_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
DSP_PlayDevice	audio/dsp/SDL_dspaudio.c	/^DSP_PlayDevice(_THIS)$/;"	f	file:
DSP_bootstrap	audio/dsp/SDL_dspaudio.c	/^AudioBootStrap DSP_bootstrap = {$/;"	v
DST_CHAN_DEST	video/SDL_blit_N.c	93;"	d	file:
DST_CHAN_SRC	video/SDL_blit_N.c	92;"	d	file:
DST_CTRL	video/SDL_blit_N.c	96;"	d	file:
DSoundDLL	audio/directsound/SDL_directsound.c	/^static void* DSoundDLL = NULL;$/;"	v	file:
DUFFS_LOOP	video/SDL_blit.h	499;"	d
DUFFS_LOOP	video/SDL_blit.h	528;"	d
DUFFS_LOOP4	video/SDL_blit.h	487;"	d
DUFFS_LOOP4	video/SDL_blit.h	536;"	d
DUFFS_LOOP8	video/SDL_blit.h	471;"	d
DUFFS_LOOP8	video/SDL_blit.h	534;"	d
DUFFS_LOOP_124	video/SDL_blit.h	503;"	d
DUFFS_LOOP_124	video/SDL_blit.h	538;"	d
DUMMYAUD_Init	audio/dummy/SDL_dummyaudio.c	/^DUMMYAUD_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
DUMMYAUD_OpenDevice	audio/dummy/SDL_dummyaudio.c	/^DUMMYAUD_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
DUMMYAUD_bootstrap	audio/dummy/SDL_dummyaudio.c	/^AudioBootStrap DUMMYAUD_bootstrap = {$/;"	v
DUMMYVID_DRIVER_NAME	video/dummy/SDL_nullvideo.c	50;"	d	file:
DUMMY_Available	video/dummy/SDL_nullvideo.c	/^DUMMY_Available(void)$/;"	f	file:
DUMMY_CreateDevice	video/dummy/SDL_nullvideo.c	/^DUMMY_CreateDevice(int devindex)$/;"	f	file:
DUMMY_DeleteDevice	video/dummy/SDL_nullvideo.c	/^DUMMY_DeleteDevice(SDL_VideoDevice * device)$/;"	f	file:
DUMMY_PumpEvents	video/dummy/SDL_nullevents.c	/^DUMMY_PumpEvents(_THIS)$/;"	f
DUMMY_SURFACE	video/dummy/SDL_nullframebuffer.c	29;"	d	file:
DUMMY_SetDisplayMode	video/dummy/SDL_nullvideo.c	/^DUMMY_SetDisplayMode(_THIS, SDL_VideoDisplay * display, SDL_DisplayMode * mode)$/;"	f	file:
DUMMY_VideoInit	video/dummy/SDL_nullvideo.c	/^DUMMY_VideoInit(_THIS)$/;"	f
DUMMY_VideoQuit	video/dummy/SDL_nullvideo.c	/^DUMMY_VideoQuit(_THIS)$/;"	f
DUMMY_bootstrap	video/dummy/SDL_nullvideo.c	/^VideoBootStrap DUMMY_bootstrap = {$/;"	v
DVI	video/x11/edid.h	/^    DVI,$/;"	e	enum:__anon9
Deactivate	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *Deactivate)(ITfThreadMgr *);$/;"	m	struct:ITfThreadMgrVtbl
Deactivate	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *Deactivate)(ITfThreadMgrEx *);$/;"	m	struct:ITfThreadMgrExVtbl
Deinitialize	audio/SDL_sysaudio.h	/^    void (*Deinitialize) (void);$/;"	m	struct:SDL_AudioDriverImpl
DestroyRenderer	render/SDL_sysrender.h	/^    void (*DestroyRenderer) (SDL_Renderer * renderer);$/;"	m	struct:SDL_Renderer
DestroyShaderProgram	render/opengl/SDL_shaders_gl.c	/^DestroyShaderProgram(GL_ShaderContext *ctx, GL_ShaderData *data)$/;"	f	file:
DestroyTexture	render/SDL_sysrender.h	/^    void (*DestroyTexture) (SDL_Renderer * renderer, SDL_Texture * texture);$/;"	m	struct:SDL_Renderer
DestroyWindow	video/SDL_sysvideo.h	/^    void (*DestroyWindow) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
DestroyWindowFramebuffer	video/SDL_sysvideo.h	/^    void (*DestroyWindowFramebuffer) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
DetailedTiming	video/x11/edid.h	/^struct DetailedTiming$/;"	s
DetailedTiming	video/x11/edid.h	/^typedef struct DetailedTiming DetailedTiming;$/;"	t	typeref:struct:DetailedTiming
DetectDevices	audio/SDL_sysaudio.h	/^    void (*DetectDevices) (int iscapture, SDL_AddAudioDevice addfn);$/;"	m	struct:SDL_AudioDriverImpl
DeviceMode	video/windows/SDL_windowsmodes.h	/^    DEVMODE DeviceMode;$/;"	m	struct:__anon51
DeviceName	video/windows/SDL_windowsmodes.h	/^    TCHAR DeviceName[32];$/;"	m	struct:__anon50
DirectConnected	video/bwindow/SDL_BWin.h	/^    virtual void DirectConnected(direct_buffer_info *info) {$/;"	f	class:SDL_BWin
DirectFB_AcquireVidLayer	video/directfb/SDL_DirectFB_render.c	/^DirectFB_AcquireVidLayer(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
DirectFB_ActivateRenderer	video/directfb/SDL_DirectFB_render.c	/^DirectFB_ActivateRenderer(SDL_Renderer * renderer)$/;"	f	file:
DirectFB_AdjustWindowSurface	video/directfb/SDL_DirectFB_window.c	/^DirectFB_AdjustWindowSurface(SDL_Window * window)$/;"	f
DirectFB_Available	video/directfb/SDL_DirectFB_video.c	/^DirectFB_Available(void)$/;"	f	file:
DirectFB_CreateCursor	video/directfb/SDL_DirectFB_mouse.c	/^DirectFB_CreateCursor(SDL_Surface * surface, int hot_x, int hot_y)$/;"	f	file:
DirectFB_CreateDefaultCursor	video/directfb/SDL_DirectFB_mouse.c	/^DirectFB_CreateDefaultCursor(void)$/;"	f	file:
DirectFB_CreateDevice	video/directfb/SDL_DirectFB_video.c	/^DirectFB_CreateDevice(int devindex)$/;"	f	file:
DirectFB_CreateRenderer	video/directfb/SDL_DirectFB_render.c	/^DirectFB_CreateRenderer(SDL_Window * window, Uint32 flags)$/;"	f
DirectFB_CreateShapedWindow	video/directfb/SDL_DirectFB_shape.c	/^DirectFB_CreateShapedWindow(const char *title,unsigned int x,unsigned int y,unsigned int w,unsigned int h,Uint32 flags) {$/;"	f
DirectFB_CreateShaper	video/directfb/SDL_DirectFB_shape.c	/^DirectFB_CreateShaper(SDL_Window* window) {$/;"	f
DirectFB_CreateTexture	video/directfb/SDL_DirectFB_render.c	/^DirectFB_CreateTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
DirectFB_CreateWindow	video/directfb/SDL_DirectFB_window.c	/^DirectFB_CreateWindow(_THIS, SDL_Window * window)$/;"	f
DirectFB_CreateWindowFrom	video/directfb/SDL_DirectFB_window.c	/^DirectFB_CreateWindowFrom(_THIS, SDL_Window * window, const void *data)$/;"	f
DirectFB_DFBToSDLPixelFormat	video/directfb/SDL_DirectFB_video.c	/^DirectFB_DFBToSDLPixelFormat(DFBSurfacePixelFormat pixelformat)$/;"	f
DirectFB_DeleteDevice	video/directfb/SDL_DirectFB_video.c	/^DirectFB_DeleteDevice(SDL_VideoDevice * device)$/;"	f	file:
DirectFB_DestroyRenderer	video/directfb/SDL_DirectFB_render.c	/^DirectFB_DestroyRenderer(SDL_Renderer * renderer)$/;"	f	file:
DirectFB_DestroyTexture	video/directfb/SDL_DirectFB_render.c	/^DirectFB_DestroyTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
DirectFB_DestroyWindow	video/directfb/SDL_DirectFB_window.c	/^DirectFB_DestroyWindow(_THIS, SDL_Window * window)$/;"	f
DirectFB_DeviceInformation	video/directfb/SDL_DirectFB_video.c	/^DirectFB_DeviceInformation(IDirectFB * dfb)$/;"	f	file:
DirectFB_FreeCursor	video/directfb/SDL_DirectFB_mouse.c	/^DirectFB_FreeCursor(SDL_Cursor * cursor)$/;"	f	file:
DirectFB_FreeMouse	video/directfb/SDL_DirectFB_mouse.c	/^DirectFB_FreeMouse(SDL_Mouse * mouse)$/;"	f	file:
DirectFB_GLContext	video/directfb/SDL_DirectFB_opengl.h	/^typedef struct _DirectFB_GLContext DirectFB_GLContext;$/;"	t	typeref:struct:_DirectFB_GLContext
DirectFB_GL_CreateContext	video/directfb/SDL_DirectFB_opengl.c	/^DirectFB_GL_CreateContext(_THIS, SDL_Window * window)$/;"	f
DirectFB_GL_DeleteContext	video/directfb/SDL_DirectFB_opengl.c	/^DirectFB_GL_DeleteContext(_THIS, SDL_GLContext context)$/;"	f
DirectFB_GL_DestroyWindowContexts	video/directfb/SDL_DirectFB_opengl.c	/^DirectFB_GL_DestroyWindowContexts(_THIS, SDL_Window * window)$/;"	f
DirectFB_GL_FreeWindowContexts	video/directfb/SDL_DirectFB_opengl.c	/^DirectFB_GL_FreeWindowContexts(_THIS, SDL_Window * window)$/;"	f
DirectFB_GL_GetProcAddress	video/directfb/SDL_DirectFB_opengl.c	/^DirectFB_GL_GetProcAddress(_THIS, const char *proc)$/;"	f
DirectFB_GL_GetSwapInterval	video/directfb/SDL_DirectFB_opengl.c	/^DirectFB_GL_GetSwapInterval(_THIS)$/;"	f
DirectFB_GL_Initialize	video/directfb/SDL_DirectFB_opengl.c	/^DirectFB_GL_Initialize(_THIS)$/;"	f
DirectFB_GL_LoadLibrary	video/directfb/SDL_DirectFB_opengl.c	/^DirectFB_GL_LoadLibrary(_THIS, const char *path)$/;"	f
DirectFB_GL_MakeCurrent	video/directfb/SDL_DirectFB_opengl.c	/^DirectFB_GL_MakeCurrent(_THIS, SDL_Window * window, SDL_GLContext context)$/;"	f
DirectFB_GL_ReAllocWindowContexts	video/directfb/SDL_DirectFB_opengl.c	/^DirectFB_GL_ReAllocWindowContexts(_THIS, SDL_Window * window)$/;"	f
DirectFB_GL_SetSwapInterval	video/directfb/SDL_DirectFB_opengl.c	/^DirectFB_GL_SetSwapInterval(_THIS, int interval)$/;"	f
DirectFB_GL_Shutdown	video/directfb/SDL_DirectFB_opengl.c	/^DirectFB_GL_Shutdown(_THIS)$/;"	f
DirectFB_GL_SwapWindow	video/directfb/SDL_DirectFB_opengl.c	/^DirectFB_GL_SwapWindow(_THIS, SDL_Window * window)$/;"	f
DirectFB_GL_UnloadLibrary	video/directfb/SDL_DirectFB_opengl.c	/^DirectFB_GL_UnloadLibrary(_THIS)$/;"	f	file:
DirectFB_GetDisplayModes	video/directfb/SDL_DirectFB_modes.c	/^DirectFB_GetDisplayModes(_THIS, SDL_VideoDisplay * display)$/;"	f
DirectFB_GetTexturePalette	video/directfb/SDL_DirectFB_render.c	/^DirectFB_GetTexturePalette(SDL_Renderer * renderer,$/;"	f	file:
DirectFB_GetWindowWMInfo	video/directfb/SDL_DirectFB_window.c	/^DirectFB_GetWindowWMInfo(_THIS, SDL_Window * window,$/;"	f
DirectFB_HideWindow	video/directfb/SDL_DirectFB_window.c	/^DirectFB_HideWindow(_THIS, SDL_Window * window)$/;"	f
DirectFB_InitKeyboard	video/directfb/SDL_DirectFB_events.c	/^DirectFB_InitKeyboard(_THIS)$/;"	f
DirectFB_InitModes	video/directfb/SDL_DirectFB_modes.c	/^DirectFB_InitModes(_THIS)$/;"	f
DirectFB_InitMouse	video/directfb/SDL_DirectFB_mouse.c	/^DirectFB_InitMouse(_THIS)$/;"	f
DirectFB_InitOSKeymap	video/directfb/SDL_DirectFB_events.c	/^DirectFB_InitOSKeymap(_THIS, SDL_Scancode * keymap, int numkeys)$/;"	f
DirectFB_LockTexture	video/directfb/SDL_DirectFB_render.c	/^DirectFB_LockTexture(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
DirectFB_MaximizeWindow	video/directfb/SDL_DirectFB_window.c	/^DirectFB_MaximizeWindow(_THIS, SDL_Window * window)$/;"	f
DirectFB_MinimizeWindow	video/directfb/SDL_DirectFB_window.c	/^DirectFB_MinimizeWindow(_THIS, SDL_Window * window)$/;"	f
DirectFB_MoveCursor	video/directfb/SDL_DirectFB_mouse.c	/^DirectFB_MoveCursor(SDL_Cursor * cursor)$/;"	f	file:
DirectFB_PumpEventsWindow	video/directfb/SDL_DirectFB_events.c	/^DirectFB_PumpEventsWindow(_THIS)$/;"	f
DirectFB_QueryTexturePixels	video/directfb/SDL_DirectFB_render.c	/^DirectFB_QueryTexturePixels(SDL_Renderer * renderer,$/;"	f	file:
DirectFB_QuitKeyboard	video/directfb/SDL_DirectFB_events.c	/^DirectFB_QuitKeyboard(_THIS)$/;"	f
DirectFB_QuitModes	video/directfb/SDL_DirectFB_modes.c	/^DirectFB_QuitModes(_THIS)$/;"	f
DirectFB_QuitMouse	video/directfb/SDL_DirectFB_mouse.c	/^DirectFB_QuitMouse(_THIS)$/;"	f
DirectFB_RaiseWindow	video/directfb/SDL_DirectFB_window.c	/^DirectFB_RaiseWindow(_THIS, SDL_Window * window)$/;"	f
DirectFB_RenderClear	video/directfb/SDL_DirectFB_render.c	/^DirectFB_RenderClear(SDL_Renderer * renderer)$/;"	f
DirectFB_RenderCopy	video/directfb/SDL_DirectFB_render.c	/^DirectFB_RenderCopy(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
DirectFB_RenderData	video/directfb/SDL_DirectFB_render.c	/^} DirectFB_RenderData;$/;"	t	typeref:struct:__anon48	file:
DirectFB_RenderDrawLines	video/directfb/SDL_DirectFB_render.c	/^static int DirectFB_RenderDrawLines(SDL_Renderer * renderer,$/;"	f	file:
DirectFB_RenderDrawPoints	video/directfb/SDL_DirectFB_render.c	/^static int DirectFB_RenderDrawPoints(SDL_Renderer * renderer,$/;"	f	file:
DirectFB_RenderDrawRects	video/directfb/SDL_DirectFB_render.c	/^DirectFB_RenderDrawRects(SDL_Renderer * renderer, const SDL_Rect ** rects, int count)$/;"	f	file:
DirectFB_RenderDriver	video/directfb/SDL_DirectFB_render.c	/^SDL_RenderDriver DirectFB_RenderDriver = {$/;"	v
DirectFB_RenderFillRects	video/directfb/SDL_DirectFB_render.c	/^DirectFB_RenderFillRects(SDL_Renderer * renderer, const SDL_FRect * rects, int count)$/;"	f	file:
DirectFB_RenderPresent	video/directfb/SDL_DirectFB_render.c	/^DirectFB_RenderPresent(SDL_Renderer * renderer)$/;"	f	file:
DirectFB_RenderReadPixels	video/directfb/SDL_DirectFB_render.c	/^DirectFB_RenderReadPixels(SDL_Renderer * renderer, const SDL_Rect * rect,$/;"	f	file:
DirectFB_ResizeWindowShape	video/directfb/SDL_DirectFB_shape.c	/^DirectFB_ResizeWindowShape(SDL_Window* window) {$/;"	f
DirectFB_RestoreWindow	video/directfb/SDL_DirectFB_window.c	/^DirectFB_RestoreWindow(_THIS, SDL_Window * window)$/;"	f
DirectFB_SDLToDFBPixelFormat	video/directfb/SDL_DirectFB_video.c	/^DirectFB_SDLToDFBPixelFormat(Uint32 format)$/;"	f
DirectFB_SetContext	video/directfb/SDL_DirectFB_modes.c	/^DirectFB_SetContext(_THIS, SDL_Window *window)$/;"	f
DirectFB_SetDisplayMode	video/directfb/SDL_DirectFB_modes.c	/^DirectFB_SetDisplayMode(_THIS, SDL_VideoDisplay * display, SDL_DisplayMode * mode)$/;"	f
DirectFB_SetDrawBlendMode	video/directfb/SDL_DirectFB_render.c	/^DirectFB_SetDrawBlendMode(SDL_Renderer * renderer)$/;"	f	file:
DirectFB_SetRenderTarget	video/directfb/SDL_DirectFB_render.c	/^static int DirectFB_SetRenderTarget(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
DirectFB_SetSupportedPixelFormats	video/directfb/SDL_DirectFB_video.c	/^void DirectFB_SetSupportedPixelFormats(SDL_RendererInfo* ri)$/;"	f
DirectFB_SetTextureAlphaMod	video/directfb/SDL_DirectFB_render.c	/^DirectFB_SetTextureAlphaMod(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
DirectFB_SetTextureBlendMode	video/directfb/SDL_DirectFB_render.c	/^DirectFB_SetTextureBlendMode(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
DirectFB_SetTextureColorMod	video/directfb/SDL_DirectFB_render.c	/^DirectFB_SetTextureColorMod(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
DirectFB_SetTexturePalette	video/directfb/SDL_DirectFB_render.c	/^DirectFB_SetTexturePalette(SDL_Renderer * renderer,$/;"	f	file:
DirectFB_SetWindowGrab	video/directfb/SDL_DirectFB_window.c	/^DirectFB_SetWindowGrab(_THIS, SDL_Window * window, SDL_bool grabbed)$/;"	f
DirectFB_SetWindowIcon	video/directfb/SDL_DirectFB_window.c	/^DirectFB_SetWindowIcon(_THIS, SDL_Window * window, SDL_Surface * icon)$/;"	f
DirectFB_SetWindowPosition	video/directfb/SDL_DirectFB_window.c	/^DirectFB_SetWindowPosition(_THIS, SDL_Window * window)$/;"	f
DirectFB_SetWindowShape	video/directfb/SDL_DirectFB_shape.c	/^DirectFB_SetWindowShape(SDL_WindowShaper *shaper,SDL_Surface *shape,SDL_WindowShapeMode *shape_mode) {$/;"	f
DirectFB_SetWindowSize	video/directfb/SDL_DirectFB_window.c	/^DirectFB_SetWindowSize(_THIS, SDL_Window * window)$/;"	f
DirectFB_SetWindowTitle	video/directfb/SDL_DirectFB_window.c	/^DirectFB_SetWindowTitle(_THIS, SDL_Window * window)$/;"	f
DirectFB_ShowCursor	video/directfb/SDL_DirectFB_mouse.c	/^DirectFB_ShowCursor(SDL_Cursor * cursor)$/;"	f	file:
DirectFB_ShowWindow	video/directfb/SDL_DirectFB_window.c	/^DirectFB_ShowWindow(_THIS, SDL_Window * window)$/;"	f
DirectFB_TextureData	video/directfb/SDL_DirectFB_render.c	/^} DirectFB_TextureData;$/;"	t	typeref:struct:__anon49	file:
DirectFB_TranslateButton	video/directfb/SDL_DirectFB_events.c	/^DirectFB_TranslateButton(DFBInputDeviceButtonIdentifier button)$/;"	f	file:
DirectFB_TranslateKey	video/directfb/SDL_DirectFB_events.c	/^DirectFB_TranslateKey(_THIS, DFBWindowEvent * evt, SDL_Keysym * keysym, Uint32 *unicode)$/;"	f	file:
DirectFB_TranslateKeyInputEvent	video/directfb/SDL_DirectFB_events.c	/^DirectFB_TranslateKeyInputEvent(_THIS, DFBInputEvent * evt,$/;"	f	file:
DirectFB_UnlockTexture	video/directfb/SDL_DirectFB_render.c	/^DirectFB_UnlockTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
DirectFB_UpdateClipRect	video/directfb/SDL_DirectFB_render.c	/^DirectFB_UpdateClipRect(SDL_Renderer * renderer)$/;"	f	file:
DirectFB_UpdateTexture	video/directfb/SDL_DirectFB_render.c	/^DirectFB_UpdateTexture(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
DirectFB_UpdateViewport	video/directfb/SDL_DirectFB_render.c	/^DirectFB_UpdateViewport(SDL_Renderer * renderer)$/;"	f	file:
DirectFB_VideoInit	video/directfb/SDL_DirectFB_video.c	/^DirectFB_VideoInit(_THIS)$/;"	f	file:
DirectFB_VideoQuit	video/directfb/SDL_DirectFB_video.c	/^DirectFB_VideoQuit(_THIS)$/;"	f	file:
DirectFB_WM_AdjustWindowLayout	video/directfb/SDL_DirectFB_WM.c	/^DirectFB_WM_AdjustWindowLayout(SDL_Window * window, int flags, int w, int h)$/;"	f
DirectFB_WM_GetClientSize	video/directfb/SDL_DirectFB_WM.c	/^DirectFB_WM_GetClientSize(_THIS, SDL_Window * window, int *cw, int *ch)$/;"	f
DirectFB_WM_ProcessEvent	video/directfb/SDL_DirectFB_WM.c	/^DirectFB_WM_ProcessEvent(_THIS, SDL_Window * window, DFBWindowEvent * evt)$/;"	f
DirectFB_WM_RedrawLayout	video/directfb/SDL_DirectFB_WM.c	/^DirectFB_WM_RedrawLayout(_THIS, SDL_Window * window)$/;"	f
DirectFB_WarpMouse	video/directfb/SDL_DirectFB_mouse.c	/^DirectFB_WarpMouse(SDL_Mouse * mouse, SDL_Window * window, int x, int y)$/;"	f	file:
DirectFB_WarpMouse	video/directfb/SDL_DirectFB_mouse.c	/^DirectFB_WarpMouse(SDL_Window * window, int x, int y)$/;"	f	file:
DirectFB_WindowEvent	video/directfb/SDL_DirectFB_render.c	/^DirectFB_WindowEvent(SDL_Renderer * renderer, const SDL_WindowEvent *event)$/;"	f	file:
DirectFB_bootstrap	video/directfb/SDL_DirectFB_video.c	/^VideoBootStrap DirectFB_bootstrap = {$/;"	v
DirectResult	audio/fusionsound/SDL_fsaudio.c	/^typedef DFBResult DirectResult;$/;"	t	file:
DispatchMessage	video/bwindow/SDL_BWin.h	/^    virtual void DispatchMessage(BMessage * msg, BHandler * target)$/;"	f	class:SDL_BWin
Display1X	render/SDL_yuv_sw_c.h	/^    void (*Display1X) (int *colortab, Uint32 * rgb_2_pix,$/;"	m	struct:SDL_SW_YUVTexture
Display2X	render/SDL_yuv_sw_c.h	/^    void (*Display2X) (int *colortab, Uint32 * rgb_2_pix,$/;"	m	struct:SDL_SW_YUVTexture
DisplayList	render/psp/SDL_render_psp.c	/^static unsigned int __attribute__((aligned(16))) DisplayList[262144];$/;"	v	file:
DisplayPaletteChanged	video/directfb/SDL_DirectFB_render.c	/^DisplayPaletteChanged(void *userdata, SDL_Palette * palette)$/;"	f	file:
DrawCraption	video/directfb/SDL_DirectFB_WM.c	/^DrawCraption(_THIS, IDirectFBSurface * s, int x, int y, char *text)$/;"	f	file:
DrawLineFunc	render/software/SDL_drawline.c	/^typedef void (*DrawLineFunc) (SDL_Surface * dst,$/;"	t	file:
DrawRect	video/windows/SDL_windowskeyboard.c	/^DrawRect(HDC hdc, int left, int top, int right, int bottom, int pensize)$/;"	f	file:
DrawTriangle	video/directfb/SDL_DirectFB_WM.c	/^DrawTriangle(IDirectFBSurface * s, int down, int x, int y, int w)$/;"	f	file:
EFFECT_TEST	haptic/windows/SDL_syshaptic.c	289;"	d	file:
EGLCHK	video/psp/SDL_pspgl.c	32;"	d	file:
EGLCHK	video/psp/SDL_pspvideo.c	203;"	d	file:
ENABLE_DOLLAR	events/SDL_gesture.c	45;"	d	file:
ENABLE_LUT8	video/directfb/SDL_DirectFB_video.h	65;"	d
ENABLE_LUT8	video/directfb/SDL_DirectFB_video.h	67;"	d
ENCODING_ASCII	stdlib/SDL_iconv.c	/^    ENCODING_ASCII,$/;"	e	enum:__anon6	file:
ENCODING_LATIN1	stdlib/SDL_iconv.c	/^    ENCODING_LATIN1,$/;"	e	enum:__anon6	file:
ENCODING_UCS2BE	stdlib/SDL_iconv.c	/^    ENCODING_UCS2BE,$/;"	e	enum:__anon6	file:
ENCODING_UCS2LE	stdlib/SDL_iconv.c	/^    ENCODING_UCS2LE,$/;"	e	enum:__anon6	file:
ENCODING_UCS2NATIVE	stdlib/SDL_iconv.c	112;"	d	file:
ENCODING_UCS2NATIVE	stdlib/SDL_iconv.c	117;"	d	file:
ENCODING_UCS4BE	stdlib/SDL_iconv.c	/^    ENCODING_UCS4BE,$/;"	e	enum:__anon6	file:
ENCODING_UCS4LE	stdlib/SDL_iconv.c	/^    ENCODING_UCS4LE,$/;"	e	enum:__anon6	file:
ENCODING_UCS4NATIVE	stdlib/SDL_iconv.c	113;"	d	file:
ENCODING_UCS4NATIVE	stdlib/SDL_iconv.c	118;"	d	file:
ENCODING_UNKNOWN	stdlib/SDL_iconv.c	/^    ENCODING_UNKNOWN,$/;"	e	enum:__anon6	file:
ENCODING_UTF16	stdlib/SDL_iconv.c	/^    ENCODING_UTF16,             \/* Needs byte order marker *\/$/;"	e	enum:__anon6	file:
ENCODING_UTF16BE	stdlib/SDL_iconv.c	/^    ENCODING_UTF16BE,$/;"	e	enum:__anon6	file:
ENCODING_UTF16LE	stdlib/SDL_iconv.c	/^    ENCODING_UTF16LE,$/;"	e	enum:__anon6	file:
ENCODING_UTF16NATIVE	stdlib/SDL_iconv.c	110;"	d	file:
ENCODING_UTF16NATIVE	stdlib/SDL_iconv.c	115;"	d	file:
ENCODING_UTF32	stdlib/SDL_iconv.c	/^    ENCODING_UTF32,             \/* Needs byte order marker *\/$/;"	e	enum:__anon6	file:
ENCODING_UTF32BE	stdlib/SDL_iconv.c	/^    ENCODING_UTF32BE,$/;"	e	enum:__anon6	file:
ENCODING_UTF32LE	stdlib/SDL_iconv.c	/^    ENCODING_UTF32LE,$/;"	e	enum:__anon6	file:
ENCODING_UTF32NATIVE	stdlib/SDL_iconv.c	111;"	d	file:
ENCODING_UTF32NATIVE	stdlib/SDL_iconv.c	116;"	d	file:
ENCODING_UTF8	stdlib/SDL_iconv.c	/^    ENCODING_UTF8,$/;"	e	enum:__anon6	file:
ENDLINE	SDL_assert.c	130;"	d	file:
ERR_MAX_ARGS	SDL_error_c.h	31;"	d
ERR_MAX_STRLEN	SDL_error_c.h	30;"	d
ESD_CloseDevice	audio/esd/SDL_esdaudio.c	/^ESD_CloseDevice(_THIS)$/;"	f	file:
ESD_Deinitialize	audio/esd/SDL_esdaudio.c	/^ESD_Deinitialize(void)$/;"	f	file:
ESD_GetDeviceBuf	audio/esd/SDL_esdaudio.c	/^ESD_GetDeviceBuf(_THIS)$/;"	f	file:
ESD_Init	audio/esd/SDL_esdaudio.c	/^ESD_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
ESD_OpenDevice	audio/esd/SDL_esdaudio.c	/^ESD_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
ESD_PlayDevice	audio/esd/SDL_esdaudio.c	/^ESD_PlayDevice(_THIS)$/;"	f	file:
ESD_WaitDevice	audio/esd/SDL_esdaudio.c	/^ESD_WaitDevice(_THIS)$/;"	f	file:
ESD_bootstrap	audio/esd/SDL_esdaudio.c	/^AudioBootStrap ESD_bootstrap = {$/;"	v
EV_IsHaptic	haptic/linux/SDL_syshaptic.c	/^EV_IsHaptic(int fd)$/;"	f	file:
EV_IsMouse	haptic/linux/SDL_syshaptic.c	/^EV_IsMouse(int fd)$/;"	f	file:
EV_TEST	haptic/linux/SDL_syshaptic.c	80;"	d	file:
EXTENDED_KEYMASK	video/windows/SDL_windowsevents.c	47;"	d	file:
EXTERN_BIT	stdlib/SDL_malloc.c	1445;"	d	file:
EXTRACT_WORDS	libm/math_private.h	92;"	d
E_FAIL	audio/directsound/directx.h	37;"	d
E_INVALIDARG	audio/directsound/directx.h	46;"	d
E_NOINTERFACE	audio/directsound/directx.h	40;"	d
E_NOTIMPL	audio/directsound/directx.h	49;"	d
E_OUTOFMEMORY	audio/directsound/directx.h	43;"	d
EndUIElement	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *EndUIElement)(ITfUIElementMgr *, DWORD);$/;"	m	struct:ITfUIElementMgrVtbl
EndUIElement	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *EndUIElement)(ITfUIElementSink *, DWORD);$/;"	m	struct:ITfUIElementSinkVtbl
EnumContexts	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *EnumContexts)(ITfDocumentMgr *, IEnumTfContexts **);$/;"	m	struct:ITfDocumentMgrVtbl
EnumDevObjectsCallback	joystick/windows/SDL_dxjoystick.c	/^EnumDevObjectsCallback(LPCDIDEVICEOBJECTINSTANCE dev, LPVOID pvRef)$/;"	f	file:
EnumDocumentMgrs	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *EnumDocumentMgrs)(ITfThreadMgr *, IEnumTfDocumentMgrs **);$/;"	m	struct:ITfThreadMgrVtbl
EnumDocumentMgrs	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *EnumDocumentMgrs)(ITfThreadMgrEx *, IEnumTfDocumentMgrs **);$/;"	m	struct:ITfThreadMgrExVtbl
EnumFunctionProviders	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *EnumFunctionProviders)(ITfThreadMgr *, IEnumTfFunctionProviders **);$/;"	m	struct:ITfThreadMgrVtbl
EnumFunctionProviders	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *EnumFunctionProviders)(ITfThreadMgrEx *, IEnumTfFunctionProviders **);$/;"	m	struct:ITfThreadMgrExVtbl
EnumHapticsCallback	haptic/windows/SDL_syshaptic.c	/^EnumHapticsCallback(const DIDEVICEINSTANCE * pdidInstance, VOID * pContext)$/;"	f	file:
EnumJoysticksCallback	joystick/windows/SDL_dxjoystick.c	/^    EnumJoysticksCallback(const DIDEVICEINSTANCE * pdidInstance, VOID * pContext)$/;"	f	file:
EnumKeyboards	video/directfb/SDL_DirectFB_events.c	/^EnumKeyboards(DFBInputDeviceID device_id,$/;"	f	file:
EnumLayersCallback	video/directfb/SDL_DirectFB_modes.c	/^EnumLayersCallback(DFBDisplayLayerID layer_id, DFBDisplayLayerDescription desc,$/;"	f	file:
EnumMice	video/directfb/SDL_DirectFB_mouse.c	/^EnumMice(DFBInputDeviceID device_id, DFBInputDeviceDescription desc,$/;"	f	file:
EnumModesCallback	video/directfb/SDL_DirectFB_modes.c	/^EnumModesCallback(int width, int height, int bpp, void *data)$/;"	f	file:
EnumScreensCallback	video/directfb/SDL_DirectFB_modes.c	/^EnumScreensCallback(DFBScreenID screen_id, DFBScreenDescription desc,$/;"	f	file:
EnumUIElements	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *EnumUIElements)(ITfUIElementMgr *, IEnumTfUIElements **);$/;"	m	struct:ITfUIElementMgrVtbl
EventUpdate	video/psp/SDL_pspevents.c	/^int EventUpdate(void *data)$/;"	f
ExpandDialogSpace	video/windows/SDL_windowsmessagebox.c	/^static SDL_bool ExpandDialogSpace(WIN_DialogData *dialog, size_t space)$/;"	f	file:
F	test/SDL_test_md5.c	73;"	d	file:
FACILITY_WIN32	audio/directsound/directx.h	62;"	d
FACT	audio/SDL_wave.h	30;"	d
FAILED	audio/directsound/directx.h	33;"	d
FAKE_RECURSIVE_MUTEX	thread/pthread/SDL_sysmutex.c	31;"	d	file:
FALSE	video/x11/edid-parse.c	32;"	d	file:
FAR	audio/directsound/directx.h	16;"	d
FBO	render/opengl/SDL_render_gl.c	/^    GLuint FBO;$/;"	m	struct:GL_FBOList	file:
FBO	render/opengles/SDL_render_gles.c	/^   GLuint FBO;$/;"	m	struct:GLES_FBOList	file:
FBO	render/opengles2/SDL_render_gles2.c	/^   GLuint FBO;$/;"	m	struct:GLES2_FBOList	file:
FENCEPOST_HEAD	stdlib/SDL_malloc.c	1745;"	d	file:
FF	test/SDL_test_md5.c	84;"	d	file:
FFGetTriggerButton	haptic/darwin/SDL_syshaptic.c	/^FFGetTriggerButton(Uint16 button)$/;"	f	file:
FFStrError	haptic/darwin/SDL_syshaptic.c	/^FFStrError(HRESULT err)$/;"	f	file:
FF_TEST	haptic/darwin/SDL_syshaptic.c	315;"	d	file:
FIELD_LEFT	video/x11/edid.h	/^    FIELD_LEFT,$/;"	e	enum:__anon11
FIELD_OFFSET	audio/directsound/directx.h	66;"	d
FIELD_RIGHT	video/x11/edid.h	/^    FIELD_RIGHT,$/;"	e	enum:__anon11
FILLRECT	render/software/SDL_draw.h	554;"	d
FILL_STUB	audio/SDL_audio.c	228;"	d	file:
FILL_STUB	audio/SDL_audio.c	243;"	d	file:
FMT	audio/SDL_wave.h	32;"	d
FOOTERS	stdlib/SDL_malloc.c	549;"	d	file:
FOUR_SIZE_T_SIZES	stdlib/SDL_malloc.c	1321;"	d	file:
FOUR_WAY_INTERLEAVED	video/x11/edid.h	/^    FOUR_WAY_INTERLEAVED,$/;"	e	enum:__anon11
FUDGE_TICKS	audio/arts/SDL_artsaudio.h	49;"	d
FUDGE_TICKS	audio/bsd/SDL_bsdaudio.h	47;"	d
FUDGE_TICKS	audio/dsp/SDL_dspaudio.h	40;"	d
FUDGE_TICKS	audio/esd/SDL_esdaudio.h	47;"	d
FUDGE_TICKS	audio/paudio/SDL_paudio.h	44;"	d
FULLSCREEN_MASK	video/SDL_video.c	1796;"	d	file:
FULLSCREEN_VISIBLE	video/SDL_sysvideo.h	104;"	d
FUSIONSOUND_bootstrap	audio/fusionsound/SDL_fsaudio.c	/^AudioBootStrap FUSIONSOUND_bootstrap = {$/;"	v
FUSION_BUFFERS	audio/fusionsound/SDL_fsaudio.c	54;"	d	file:
FillSound	audio/baudio/SDL_beaudio.cc	/^FillSound(void *device, void *stream, size_t len,$/;"	f	file:
FillSound	audio/winmm/SDL_winmm.c	/^FillSound(HWAVEOUT hwo, UINT uMsg, DWORD_PTR dwInstance,$/;"	f	file:
Fill_IMA_ADPCM_block	audio/SDL_wave.c	/^Fill_IMA_ADPCM_block(Uint8 * decoded, Uint8 * encoded,$/;"	f	file:
FindAllDevs	audio/directsound/SDL_directsound.c	/^FindAllDevs(LPGUID guid, LPCWSTR desc, LPCWSTR module, LPVOID data)$/;"	f	file:
FindDevGUID	audio/directsound/SDL_directsound.c	/^FindDevGUID(LPGUID guid, LPCWSTR desc, LPCWSTR module, LPVOID _data)$/;"	f	file:
FindDevGUIDData	audio/directsound/SDL_directsound.c	/^typedef struct FindDevGUIDData$/;"	s	file:
FindDevGUIDData	audio/directsound/SDL_directsound.c	/^} FindDevGUIDData;$/;"	t	typeref:struct:FindDevGUIDData	file:
FindDevIdData	audio/coreaudio/SDL_coreaudio.c	/^} FindDevIdData;$/;"	t	typeref:struct:__anon109	file:
FocusAllKeyboards	video/directfb/SDL_DirectFB_events.c	/^FocusAllKeyboards(_THIS, SDL_Window *window)$/;"	f	file:
FocusAllMice	video/directfb/SDL_DirectFB_events.c	/^FocusAllMice(_THIS, SDL_Window *window)$/;"	f	file:
FrameMoved	video/bwindow/SDL_BWin.h	/^    virtual void FrameMoved(BPoint origin) {$/;"	f	class:SDL_BWin
FrameResized	video/bwindow/SDL_BWin.h	/^    virtual void FrameResized(float width, float height) {$/;"	f	class:SDL_BWin
FreeCursor	events/SDL_mouse_c.h	/^    void (*FreeCursor) (SDL_Cursor * cursor);$/;"	m	struct:__anon65
FreeDialogData	video/windows/SDL_windowsmessagebox.c	/^static void FreeDialogData(WIN_DialogData *dialog)$/;"	f	file:
FullscreenTo	test/SDL_test_common.c	/^FullscreenTo(int index, int windowId)$/;"	f	file:
G	test/SDL_test_md5.c	74;"	d	file:
GETVAL	power/macosx/SDL_syspower.c	139;"	d	file:
GETVAL	power/macosx/SDL_syspower.c	34;"	d	file:
GET_ATOM	video/x11/SDL_x11video.c	512;"	d	file:
GET_BOOL_EXTRA	core/android/SDL_android.c	1109;"	d	file:
GET_FLOAT_WORD	libm/math_private.h	159;"	d
GET_HIGH_WORD	libm/math_private.h	102;"	d
GET_INT_EXTRA	core/android/SDL_android.c	1101;"	d	file:
GET_LOW_WORD	libm/math_private.h	111;"	d
GET_XBUTTON_WPARAM	video/windows/SDL_windowsevents.c	62;"	d	file:
GG	test/SDL_test_md5.c	89;"	d	file:
GLES2_ATTRIBUTE_ANGLE	render/opengles2/SDL_render_gles2.c	/^    GLES2_ATTRIBUTE_ANGLE = 2,$/;"	e	enum:__anon83	file:
GLES2_ATTRIBUTE_CENTER	render/opengles2/SDL_render_gles2.c	/^    GLES2_ATTRIBUTE_CENTER = 3,$/;"	e	enum:__anon83	file:
GLES2_ATTRIBUTE_POSITION	render/opengles2/SDL_render_gles2.c	/^    GLES2_ATTRIBUTE_POSITION = 0,$/;"	e	enum:__anon83	file:
GLES2_ATTRIBUTE_TEXCOORD	render/opengles2/SDL_render_gles2.c	/^    GLES2_ATTRIBUTE_TEXCOORD = 1,$/;"	e	enum:__anon83	file:
GLES2_ActivateRenderer	render/opengles2/SDL_render_gles2.c	/^GLES2_ActivateRenderer(SDL_Renderer * renderer)$/;"	f	file:
GLES2_Attribute	render/opengles2/SDL_render_gles2.c	/^} GLES2_Attribute;$/;"	t	typeref:enum:__anon83	file:
GLES2_BindTexture	render/opengles2/SDL_render_gles2.c	/^static int GLES2_BindTexture (SDL_Renderer * renderer, SDL_Texture *texture, float *texw, float *texh) {$/;"	f	file:
GLES2_CacheProgram	render/opengles2/SDL_render_gles2.c	/^GLES2_CacheProgram(SDL_Renderer *renderer, GLES2_ShaderCacheEntry *vertex,$/;"	f	file:
GLES2_CacheShader	render/opengles2/SDL_render_gles2.c	/^GLES2_CacheShader(SDL_Renderer *renderer, GLES2_ShaderType type, SDL_BlendMode blendMode)$/;"	f	file:
GLES2_CreateRenderer	render/opengles2/SDL_render_gles2.c	/^GLES2_CreateRenderer(SDL_Window *window, Uint32 flags)$/;"	f	file:
GLES2_CreateTexture	render/opengles2/SDL_render_gles2.c	/^GLES2_CreateTexture(SDL_Renderer *renderer, SDL_Texture *texture)$/;"	f	file:
GLES2_DestroyRenderer	render/opengles2/SDL_render_gles2.c	/^GLES2_DestroyRenderer(SDL_Renderer *renderer)$/;"	f	file:
GLES2_DestroyTexture	render/opengles2/SDL_render_gles2.c	/^GLES2_DestroyTexture(SDL_Renderer *renderer, SDL_Texture *texture)$/;"	f	file:
GLES2_DriverContext	render/opengles2/SDL_render_gles2.c	/^typedef struct GLES2_DriverContext$/;"	s	file:
GLES2_DriverContext	render/opengles2/SDL_render_gles2.c	/^} GLES2_DriverContext;$/;"	t	typeref:struct:GLES2_DriverContext	file:
GLES2_EvictShader	render/opengles2/SDL_render_gles2.c	/^GLES2_EvictShader(SDL_Renderer *renderer, GLES2_ShaderCacheEntry *entry)$/;"	f	file:
GLES2_FBOList	render/opengles2/SDL_render_gles2.c	/^struct GLES2_FBOList$/;"	s	file:
GLES2_FBOList	render/opengles2/SDL_render_gles2.c	/^typedef struct GLES2_FBOList GLES2_FBOList;$/;"	t	typeref:struct:GLES2_FBOList	file:
GLES2_FragmentShader_Additive_SolidSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_Additive_SolidSrc = {$/;"	v	file:
GLES2_FragmentShader_Additive_TextureABGRSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_Additive_TextureABGRSrc = {$/;"	v	file:
GLES2_FragmentShader_Additive_TextureARGBSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_Additive_TextureARGBSrc = {$/;"	v	file:
GLES2_FragmentShader_Additive_TextureBGRSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_Additive_TextureBGRSrc = {$/;"	v	file:
GLES2_FragmentShader_Additive_TextureRGBSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_Additive_TextureRGBSrc = {$/;"	v	file:
GLES2_FragmentShader_Alpha_SolidSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_Alpha_SolidSrc = {$/;"	v	file:
GLES2_FragmentShader_Alpha_TextureABGRSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_Alpha_TextureABGRSrc = {$/;"	v	file:
GLES2_FragmentShader_Alpha_TextureARGBSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_Alpha_TextureARGBSrc = {$/;"	v	file:
GLES2_FragmentShader_Alpha_TextureBGRSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_Alpha_TextureBGRSrc = {$/;"	v	file:
GLES2_FragmentShader_Alpha_TextureRGBSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_Alpha_TextureRGBSrc = {$/;"	v	file:
GLES2_FragmentShader_Modulated_SolidSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_Modulated_SolidSrc = {$/;"	v	file:
GLES2_FragmentShader_Modulated_TextureABGRSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_Modulated_TextureABGRSrc = {$/;"	v	file:
GLES2_FragmentShader_Modulated_TextureARGBSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_Modulated_TextureARGBSrc = {$/;"	v	file:
GLES2_FragmentShader_Modulated_TextureBGRSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_Modulated_TextureBGRSrc = {$/;"	v	file:
GLES2_FragmentShader_Modulated_TextureRGBSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_Modulated_TextureRGBSrc = {$/;"	v	file:
GLES2_FragmentShader_None_SolidSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_None_SolidSrc = {$/;"	v	file:
GLES2_FragmentShader_None_TextureABGRSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_None_TextureABGRSrc = {$/;"	v	file:
GLES2_FragmentShader_None_TextureARGBSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_None_TextureARGBSrc = {$/;"	v	file:
GLES2_FragmentShader_None_TextureBGRSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_None_TextureBGRSrc = {$/;"	v	file:
GLES2_FragmentShader_None_TextureRGBSrc	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_FragmentShader_None_TextureRGBSrc = {$/;"	v	file:
GLES2_FragmentSrc_SolidSrc	render/opengles2/SDL_shaders_gles2.c	/^static const GLES2_ShaderInstance GLES2_FragmentSrc_SolidSrc = {$/;"	v	file:
GLES2_FragmentSrc_SolidSrc_	render/opengles2/SDL_shaders_gles2.c	/^static const Uint8 GLES2_FragmentSrc_SolidSrc_[] = " \\$/;"	v	file:
GLES2_FragmentSrc_TextureABGRSrc	render/opengles2/SDL_shaders_gles2.c	/^static const GLES2_ShaderInstance GLES2_FragmentSrc_TextureABGRSrc = {$/;"	v	file:
GLES2_FragmentSrc_TextureABGRSrc_	render/opengles2/SDL_shaders_gles2.c	/^static const Uint8 GLES2_FragmentSrc_TextureABGRSrc_[] = " \\$/;"	v	file:
GLES2_FragmentSrc_TextureARGBSrc	render/opengles2/SDL_shaders_gles2.c	/^static const GLES2_ShaderInstance GLES2_FragmentSrc_TextureARGBSrc = {$/;"	v	file:
GLES2_FragmentSrc_TextureARGBSrc_	render/opengles2/SDL_shaders_gles2.c	/^static const Uint8 GLES2_FragmentSrc_TextureARGBSrc_[] = " \\$/;"	v	file:
GLES2_FragmentSrc_TextureBGRSrc	render/opengles2/SDL_shaders_gles2.c	/^static const GLES2_ShaderInstance GLES2_FragmentSrc_TextureBGRSrc = {$/;"	v	file:
GLES2_FragmentSrc_TextureBGRSrc_	render/opengles2/SDL_shaders_gles2.c	/^static const Uint8 GLES2_FragmentSrc_TextureBGRSrc_[] = " \\$/;"	v	file:
GLES2_FragmentSrc_TextureRGBSrc	render/opengles2/SDL_shaders_gles2.c	/^static const GLES2_ShaderInstance GLES2_FragmentSrc_TextureRGBSrc = {$/;"	v	file:
GLES2_FragmentSrc_TextureRGBSrc_	render/opengles2/SDL_shaders_gles2.c	/^static const Uint8 GLES2_FragmentSrc_TextureRGBSrc_[] = " \\$/;"	v	file:
GLES2_FragmentTegra_Additive_SolidSrc	render/opengles2/SDL_shaders_gles2.c	/^static const GLES2_ShaderInstance GLES2_FragmentTegra_Additive_SolidSrc = {$/;"	v	file:
GLES2_FragmentTegra_Additive_SolidSrc_	render/opengles2/SDL_shaders_gles2.c	/^static const Uint8 GLES2_FragmentTegra_Additive_SolidSrc_[] = {$/;"	v	file:
GLES2_FragmentTegra_Additive_TextureSrc	render/opengles2/SDL_shaders_gles2.c	/^static const GLES2_ShaderInstance GLES2_FragmentTegra_Additive_TextureSrc = {$/;"	v	file:
GLES2_FragmentTegra_Additive_TextureSrc_	render/opengles2/SDL_shaders_gles2.c	/^static const Uint8 GLES2_FragmentTegra_Additive_TextureSrc_[] = {$/;"	v	file:
GLES2_FragmentTegra_Alpha_SolidSrc	render/opengles2/SDL_shaders_gles2.c	/^static const GLES2_ShaderInstance GLES2_FragmentTegra_Alpha_SolidSrc = {$/;"	v	file:
GLES2_FragmentTegra_Alpha_SolidSrc_	render/opengles2/SDL_shaders_gles2.c	/^static const Uint8 GLES2_FragmentTegra_Alpha_SolidSrc_[] = {$/;"	v	file:
GLES2_FragmentTegra_Alpha_TextureSrc	render/opengles2/SDL_shaders_gles2.c	/^static const GLES2_ShaderInstance GLES2_FragmentTegra_Alpha_TextureSrc = {$/;"	v	file:
GLES2_FragmentTegra_Alpha_TextureSrc_	render/opengles2/SDL_shaders_gles2.c	/^static const Uint8 GLES2_FragmentTegra_Alpha_TextureSrc_[] = {$/;"	v	file:
GLES2_FragmentTegra_Modulated_SolidSrc	render/opengles2/SDL_shaders_gles2.c	/^static const GLES2_ShaderInstance GLES2_FragmentTegra_Modulated_SolidSrc = {$/;"	v	file:
GLES2_FragmentTegra_Modulated_SolidSrc_	render/opengles2/SDL_shaders_gles2.c	/^static const Uint8 GLES2_FragmentTegra_Modulated_SolidSrc_[] = {$/;"	v	file:
GLES2_FragmentTegra_Modulated_TextureSrc	render/opengles2/SDL_shaders_gles2.c	/^static const GLES2_ShaderInstance GLES2_FragmentTegra_Modulated_TextureSrc = {$/;"	v	file:
GLES2_FragmentTegra_Modulated_TextureSrc_	render/opengles2/SDL_shaders_gles2.c	/^static const Uint8 GLES2_FragmentTegra_Modulated_TextureSrc_[] = {$/;"	v	file:
GLES2_FragmentTegra_None_SolidSrc	render/opengles2/SDL_shaders_gles2.c	/^static const GLES2_ShaderInstance GLES2_FragmentTegra_None_SolidSrc = {$/;"	v	file:
GLES2_FragmentTegra_None_SolidSrc_	render/opengles2/SDL_shaders_gles2.c	/^static const Uint8 GLES2_FragmentTegra_None_SolidSrc_[] = {$/;"	v	file:
GLES2_FragmentTegra_None_TextureSrc	render/opengles2/SDL_shaders_gles2.c	/^static const GLES2_ShaderInstance GLES2_FragmentTegra_None_TextureSrc = {$/;"	v	file:
GLES2_FragmentTegra_None_TextureSrc_	render/opengles2/SDL_shaders_gles2.c	/^static const Uint8 GLES2_FragmentTegra_None_TextureSrc_[] = {$/;"	v	file:
GLES2_GetFBO	render/opengles2/SDL_render_gles2.c	/^GLES2_GetFBO(GLES2_DriverContext *data, Uint32 w, Uint32 h)$/;"	f
GLES2_GetShader	render/opengles2/SDL_shaders_gles2.c	/^const GLES2_Shader *GLES2_GetShader(GLES2_ShaderType type, SDL_BlendMode blendMode)$/;"	f
GLES2_IMAGESOURCE_SOLID	render/opengles2/SDL_render_gles2.c	/^    GLES2_IMAGESOURCE_SOLID,$/;"	e	enum:__anon85	file:
GLES2_IMAGESOURCE_TEXTURE_ABGR	render/opengles2/SDL_render_gles2.c	/^    GLES2_IMAGESOURCE_TEXTURE_ABGR,$/;"	e	enum:__anon85	file:
GLES2_IMAGESOURCE_TEXTURE_ARGB	render/opengles2/SDL_render_gles2.c	/^    GLES2_IMAGESOURCE_TEXTURE_ARGB,$/;"	e	enum:__anon85	file:
GLES2_IMAGESOURCE_TEXTURE_BGR	render/opengles2/SDL_render_gles2.c	/^    GLES2_IMAGESOURCE_TEXTURE_BGR$/;"	e	enum:__anon85	file:
GLES2_IMAGESOURCE_TEXTURE_RGB	render/opengles2/SDL_render_gles2.c	/^    GLES2_IMAGESOURCE_TEXTURE_RGB,$/;"	e	enum:__anon85	file:
GLES2_ImageSource	render/opengles2/SDL_render_gles2.c	/^} GLES2_ImageSource;$/;"	t	typeref:enum:__anon85	file:
GLES2_LoadFunctions	render/opengles2/SDL_render_gles2.c	/^static int GLES2_LoadFunctions(GLES2_DriverContext * data)$/;"	f	file:
GLES2_LockTexture	render/opengles2/SDL_render_gles2.c	/^GLES2_LockTexture(SDL_Renderer *renderer, SDL_Texture *texture, const SDL_Rect *rect,$/;"	f	file:
GLES2_MAX_CACHED_PROGRAMS	render/opengles2/SDL_render_gles2.c	159;"	d	file:
GLES2_ProgramCache	render/opengles2/SDL_render_gles2.c	/^typedef struct GLES2_ProgramCache$/;"	s	file:
GLES2_ProgramCache	render/opengles2/SDL_render_gles2.c	/^} GLES2_ProgramCache;$/;"	t	typeref:struct:GLES2_ProgramCache	file:
GLES2_ProgramCacheEntry	render/opengles2/SDL_render_gles2.c	/^typedef struct GLES2_ProgramCacheEntry$/;"	s	file:
GLES2_ProgramCacheEntry	render/opengles2/SDL_render_gles2.c	/^} GLES2_ProgramCacheEntry;$/;"	t	typeref:struct:GLES2_ProgramCacheEntry	file:
GLES2_RenderClear	render/opengles2/SDL_render_gles2.c	/^GLES2_RenderClear(SDL_Renderer * renderer)$/;"	f	file:
GLES2_RenderCopy	render/opengles2/SDL_render_gles2.c	/^GLES2_RenderCopy(SDL_Renderer *renderer, SDL_Texture *texture, const SDL_Rect *srcrect,$/;"	f	file:
GLES2_RenderCopyEx	render/opengles2/SDL_render_gles2.c	/^GLES2_RenderCopyEx(SDL_Renderer *renderer, SDL_Texture *texture, const SDL_Rect *srcrect,$/;"	f	file:
GLES2_RenderDrawLines	render/opengles2/SDL_render_gles2.c	/^GLES2_RenderDrawLines(SDL_Renderer *renderer, const SDL_FPoint *points, int count)$/;"	f	file:
GLES2_RenderDrawPoints	render/opengles2/SDL_render_gles2.c	/^GLES2_RenderDrawPoints(SDL_Renderer *renderer, const SDL_FPoint *points, int count)$/;"	f	file:
GLES2_RenderDriver	render/opengles2/SDL_render_gles2.c	/^SDL_RenderDriver GLES2_RenderDriver = {$/;"	v
GLES2_RenderFillRects	render/opengles2/SDL_render_gles2.c	/^GLES2_RenderFillRects(SDL_Renderer *renderer, const SDL_FRect *rects, int count)$/;"	f	file:
GLES2_RenderPresent	render/opengles2/SDL_render_gles2.c	/^GLES2_RenderPresent(SDL_Renderer *renderer)$/;"	f	file:
GLES2_RenderReadPixels	render/opengles2/SDL_render_gles2.c	/^GLES2_RenderReadPixels(SDL_Renderer * renderer, const SDL_Rect * rect,$/;"	f	file:
GLES2_ResetState	render/opengles2/SDL_render_gles2.c	/^GLES2_ResetState(SDL_Renderer *renderer)$/;"	f	file:
GLES2_SHADER_FRAGMENT_SOLID_SRC	render/opengles2/SDL_shaders_gles2.h	/^    GLES2_SHADER_FRAGMENT_SOLID_SRC,$/;"	e	enum:__anon87
GLES2_SHADER_FRAGMENT_TEXTURE_ABGR_SRC	render/opengles2/SDL_shaders_gles2.h	/^    GLES2_SHADER_FRAGMENT_TEXTURE_ABGR_SRC,$/;"	e	enum:__anon87
GLES2_SHADER_FRAGMENT_TEXTURE_ARGB_SRC	render/opengles2/SDL_shaders_gles2.h	/^    GLES2_SHADER_FRAGMENT_TEXTURE_ARGB_SRC,$/;"	e	enum:__anon87
GLES2_SHADER_FRAGMENT_TEXTURE_BGR_SRC	render/opengles2/SDL_shaders_gles2.h	/^    GLES2_SHADER_FRAGMENT_TEXTURE_BGR_SRC,$/;"	e	enum:__anon87
GLES2_SHADER_FRAGMENT_TEXTURE_RGB_SRC	render/opengles2/SDL_shaders_gles2.h	/^    GLES2_SHADER_FRAGMENT_TEXTURE_RGB_SRC$/;"	e	enum:__anon87
GLES2_SHADER_VERTEX_DEFAULT	render/opengles2/SDL_shaders_gles2.h	/^    GLES2_SHADER_VERTEX_DEFAULT,$/;"	e	enum:__anon87
GLES2_SOURCE_SHADER	render/opengles2/SDL_shaders_gles2.h	52;"	d
GLES2_SelectProgram	render/opengles2/SDL_render_gles2.c	/^GLES2_SelectProgram(SDL_Renderer *renderer, GLES2_ImageSource source, SDL_BlendMode blendMode)$/;"	f	file:
GLES2_SetBlendMode	render/opengles2/SDL_render_gles2.c	/^GLES2_SetBlendMode(GLES2_DriverContext *rdata, int blendMode)$/;"	f	file:
GLES2_SetDrawingState	render/opengles2/SDL_render_gles2.c	/^GLES2_SetDrawingState(SDL_Renderer * renderer)$/;"	f	file:
GLES2_SetOrthographicProjection	render/opengles2/SDL_render_gles2.c	/^GLES2_SetOrthographicProjection(SDL_Renderer *renderer)$/;"	f	file:
GLES2_SetRenderTarget	render/opengles2/SDL_render_gles2.c	/^GLES2_SetRenderTarget(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
GLES2_SetTexCoords	render/opengles2/SDL_render_gles2.c	/^GLES2_SetTexCoords(GLES2_DriverContext * rdata, SDL_bool enabled)$/;"	f	file:
GLES2_Shader	render/opengles2/SDL_shaders_gles2.h	/^typedef struct GLES2_Shader$/;"	s
GLES2_Shader	render/opengles2/SDL_shaders_gles2.h	/^} GLES2_Shader;$/;"	t	typeref:struct:GLES2_Shader
GLES2_ShaderCache	render/opengles2/SDL_render_gles2.c	/^typedef struct GLES2_ShaderCache$/;"	s	file:
GLES2_ShaderCache	render/opengles2/SDL_render_gles2.c	/^} GLES2_ShaderCache;$/;"	t	typeref:struct:GLES2_ShaderCache	file:
GLES2_ShaderCacheEntry	render/opengles2/SDL_render_gles2.c	/^typedef struct GLES2_ShaderCacheEntry$/;"	s	file:
GLES2_ShaderCacheEntry	render/opengles2/SDL_render_gles2.c	/^} GLES2_ShaderCacheEntry;$/;"	t	typeref:struct:GLES2_ShaderCacheEntry	file:
GLES2_ShaderInstance	render/opengles2/SDL_shaders_gles2.h	/^typedef struct GLES2_ShaderInstance$/;"	s
GLES2_ShaderInstance	render/opengles2/SDL_shaders_gles2.h	/^} GLES2_ShaderInstance;$/;"	t	typeref:struct:GLES2_ShaderInstance
GLES2_ShaderType	render/opengles2/SDL_shaders_gles2.h	/^} GLES2_ShaderType;$/;"	t	typeref:enum:__anon87
GLES2_TextureData	render/opengles2/SDL_render_gles2.c	/^typedef struct GLES2_TextureData$/;"	s	file:
GLES2_TextureData	render/opengles2/SDL_render_gles2.c	/^} GLES2_TextureData;$/;"	t	typeref:struct:GLES2_TextureData	file:
GLES2_UNIFORM_COLOR	render/opengles2/SDL_render_gles2.c	/^    GLES2_UNIFORM_COLOR,$/;"	e	enum:__anon84	file:
GLES2_UNIFORM_COLORTABLE	render/opengles2/SDL_render_gles2.c	/^    GLES2_UNIFORM_COLORTABLE$/;"	e	enum:__anon84	file:
GLES2_UNIFORM_MODULATION	render/opengles2/SDL_render_gles2.c	/^    GLES2_UNIFORM_MODULATION,$/;"	e	enum:__anon84	file:
GLES2_UNIFORM_PROJECTION	render/opengles2/SDL_render_gles2.c	/^    GLES2_UNIFORM_PROJECTION,$/;"	e	enum:__anon84	file:
GLES2_UNIFORM_TEXTURE	render/opengles2/SDL_render_gles2.c	/^    GLES2_UNIFORM_TEXTURE,$/;"	e	enum:__anon84	file:
GLES2_UnbindTexture	render/opengles2/SDL_render_gles2.c	/^static int GLES2_UnbindTexture (SDL_Renderer * renderer, SDL_Texture *texture) {$/;"	f	file:
GLES2_Uniform	render/opengles2/SDL_render_gles2.c	/^} GLES2_Uniform;$/;"	t	typeref:enum:__anon84	file:
GLES2_UnlockTexture	render/opengles2/SDL_render_gles2.c	/^GLES2_UnlockTexture(SDL_Renderer *renderer, SDL_Texture *texture)$/;"	f	file:
GLES2_UpdateClipRect	render/opengles2/SDL_render_gles2.c	/^GLES2_UpdateClipRect(SDL_Renderer * renderer)$/;"	f	file:
GLES2_UpdateTexture	render/opengles2/SDL_render_gles2.c	/^GLES2_UpdateTexture(SDL_Renderer *renderer, SDL_Texture *texture, const SDL_Rect *rect,$/;"	f	file:
GLES2_UpdateViewport	render/opengles2/SDL_render_gles2.c	/^GLES2_UpdateViewport(SDL_Renderer * renderer)$/;"	f	file:
GLES2_VertexShader_Default	render/opengles2/SDL_shaders_gles2.c	/^static GLES2_Shader GLES2_VertexShader_Default = {$/;"	v	file:
GLES2_VertexSrc_Default	render/opengles2/SDL_shaders_gles2.c	/^static const GLES2_ShaderInstance GLES2_VertexSrc_Default = {$/;"	v	file:
GLES2_VertexSrc_Default_	render/opengles2/SDL_shaders_gles2.c	/^static const Uint8 GLES2_VertexSrc_Default_[] = " \\$/;"	v	file:
GLES2_VertexTegra_Default	render/opengles2/SDL_shaders_gles2.c	/^static const GLES2_ShaderInstance GLES2_VertexTegra_Default = {$/;"	v	file:
GLES2_VertexTegra_Default_	render/opengles2/SDL_shaders_gles2.c	/^static const Uint8 GLES2_VertexTegra_Default_[] = {$/;"	v	file:
GLES2_WindowEvent	render/opengles2/SDL_render_gles2.c	/^GLES2_WindowEvent(SDL_Renderer * renderer, const SDL_WindowEvent *event)$/;"	f	file:
GLES_ActivateRenderer	render/opengles/SDL_render_gles.c	/^GLES_ActivateRenderer(SDL_Renderer * renderer)$/;"	f	file:
GLES_BindTexture	render/opengles/SDL_render_gles.c	/^static int GLES_BindTexture (SDL_Renderer * renderer, SDL_Texture *texture, float *texw, float *texh)$/;"	f	file:
GLES_CreateRenderer	render/opengles/SDL_render_gles.c	/^GLES_CreateRenderer(SDL_Window * window, Uint32 flags)$/;"	f
GLES_CreateTexture	render/opengles/SDL_render_gles.c	/^GLES_CreateTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
GLES_DestroyRenderer	render/opengles/SDL_render_gles.c	/^GLES_DestroyRenderer(SDL_Renderer * renderer)$/;"	f	file:
GLES_DestroyTexture	render/opengles/SDL_render_gles.c	/^GLES_DestroyTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
GLES_FBOList	render/opengles/SDL_render_gles.c	/^struct GLES_FBOList$/;"	s	file:
GLES_FBOList	render/opengles/SDL_render_gles.c	/^typedef struct GLES_FBOList GLES_FBOList;$/;"	t	typeref:struct:GLES_FBOList	file:
GLES_GetFBO	render/opengles/SDL_render_gles.c	/^GLES_GetFBO(GLES_RenderData *data, Uint32 w, Uint32 h)$/;"	f
GLES_LoadFunctions	render/opengles/SDL_render_gles.c	/^static int GLES_LoadFunctions(GLES_RenderData * data)$/;"	f	file:
GLES_LockTexture	render/opengles/SDL_render_gles.c	/^GLES_LockTexture(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
GLES_RenderClear	render/opengles/SDL_render_gles.c	/^GLES_RenderClear(SDL_Renderer * renderer)$/;"	f	file:
GLES_RenderCopy	render/opengles/SDL_render_gles.c	/^GLES_RenderCopy(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
GLES_RenderCopyEx	render/opengles/SDL_render_gles.c	/^GLES_RenderCopyEx(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
GLES_RenderData	render/opengles/SDL_render_gles.c	/^} GLES_RenderData;$/;"	t	typeref:struct:__anon80	file:
GLES_RenderDrawLines	render/opengles/SDL_render_gles.c	/^GLES_RenderDrawLines(SDL_Renderer * renderer, const SDL_FPoint * points,$/;"	f	file:
GLES_RenderDrawPoints	render/opengles/SDL_render_gles.c	/^GLES_RenderDrawPoints(SDL_Renderer * renderer, const SDL_FPoint * points,$/;"	f	file:
GLES_RenderDriver	render/opengles/SDL_render_gles.c	/^SDL_RenderDriver GLES_RenderDriver = {$/;"	v
GLES_RenderFillRects	render/opengles/SDL_render_gles.c	/^GLES_RenderFillRects(SDL_Renderer * renderer, const SDL_FRect * rects,$/;"	f	file:
GLES_RenderPresent	render/opengles/SDL_render_gles.c	/^GLES_RenderPresent(SDL_Renderer * renderer)$/;"	f	file:
GLES_RenderReadPixels	render/opengles/SDL_render_gles.c	/^GLES_RenderReadPixels(SDL_Renderer * renderer, const SDL_Rect * rect,$/;"	f	file:
GLES_ResetState	render/opengles/SDL_render_gles.c	/^GLES_ResetState(SDL_Renderer *renderer)$/;"	f	file:
GLES_SetBlendMode	render/opengles/SDL_render_gles.c	/^GLES_SetBlendMode(GLES_RenderData * data, int blendMode)$/;"	f	file:
GLES_SetColor	render/opengles/SDL_render_gles.c	/^GLES_SetColor(GLES_RenderData * data, Uint8 r, Uint8 g, Uint8 b, Uint8 a)$/;"	f	file:
GLES_SetDrawingState	render/opengles/SDL_render_gles.c	/^GLES_SetDrawingState(SDL_Renderer * renderer)$/;"	f	file:
GLES_SetError	render/opengles/SDL_render_gles.c	/^GLES_SetError(const char *prefix, GLenum result)$/;"	f	file:
GLES_SetRenderTarget	render/opengles/SDL_render_gles.c	/^GLES_SetRenderTarget(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
GLES_SetTexCoords	render/opengles/SDL_render_gles.c	/^GLES_SetTexCoords(GLES_RenderData * data, SDL_bool enabled)$/;"	f	file:
GLES_TextureData	render/opengles/SDL_render_gles.c	/^} GLES_TextureData;$/;"	t	typeref:struct:__anon82	file:
GLES_UnbindTexture	render/opengles/SDL_render_gles.c	/^static int GLES_UnbindTexture (SDL_Renderer * renderer, SDL_Texture *texture)$/;"	f	file:
GLES_UnlockTexture	render/opengles/SDL_render_gles.c	/^GLES_UnlockTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
GLES_UpdateClipRect	render/opengles/SDL_render_gles.c	/^GLES_UpdateClipRect(SDL_Renderer * renderer)$/;"	f	file:
GLES_UpdateTexture	render/opengles/SDL_render_gles.c	/^GLES_UpdateTexture(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
GLES_UpdateViewport	render/opengles/SDL_render_gles.c	/^GLES_UpdateViewport(SDL_Renderer * renderer)$/;"	f	file:
GLES_WindowEvent	render/opengles/SDL_render_gles.c	/^GLES_WindowEvent(SDL_Renderer * renderer, const SDL_WindowEvent *event)$/;"	f	file:
GLOBALLY_INITIALIZE	stdlib/SDL_malloc.c	2198;"	d	file:
GLXBadContext	video/x11/SDL_x11opengl.c	508;"	d	file:
GLXBadFBConfig	video/x11/SDL_x11opengl.c	511;"	d	file:
GLXBadProfileARB	video/x11/SDL_x11opengl.c	514;"	d	file:
GLX_ARB_create_context	video/x11/SDL_x11opengl.c	70;"	d	file:
GLX_ARB_create_context_profile	video/x11/SDL_x11opengl.c	88;"	d	file:
GLX_ARB_create_context_robustness	video/x11/SDL_x11opengl.c	95;"	d	file:
GLX_ARB_multisample	video/x11/SDL_x11opengl.c	50;"	d	file:
GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB	video/x11/SDL_x11opengl.c	91;"	d	file:
GLX_CONTEXT_CORE_PROFILE_BIT_ARB	video/x11/SDL_x11opengl.c	90;"	d	file:
GLX_CONTEXT_DEBUG_BIT_ARB	video/x11/SDL_x11opengl.c	74;"	d	file:
GLX_CONTEXT_ES2_PROFILE_BIT_EXT	video/x11/SDL_x11opengl.c	105;"	d	file:
GLX_CONTEXT_FLAGS_ARB	video/x11/SDL_x11opengl.c	73;"	d	file:
GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	video/x11/SDL_x11opengl.c	75;"	d	file:
GLX_CONTEXT_MAJOR_VERSION_ARB	video/x11/SDL_x11opengl.c	71;"	d	file:
GLX_CONTEXT_MINOR_VERSION_ARB	video/x11/SDL_x11opengl.c	72;"	d	file:
GLX_CONTEXT_PROFILE_MASK_ARB	video/x11/SDL_x11opengl.c	89;"	d	file:
GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB	video/x11/SDL_x11opengl.c	97;"	d	file:
GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB	video/x11/SDL_x11opengl.c	96;"	d	file:
GLX_DIRECT_COLOR_EXT	video/x11/SDL_x11opengl.c	66;"	d	file:
GLX_EXT_create_context_es2_profile	video/x11/SDL_x11opengl.c	103;"	d	file:
GLX_EXT_visual_info	video/x11/SDL_x11opengl.c	64;"	d	file:
GLX_EXT_visual_rating	video/x11/SDL_x11opengl.c	56;"	d	file:
GLX_LATE_SWAPS_TEAR_EXT	video/x11/SDL_x11opengl.c	115;"	d	file:
GLX_LOSE_CONTEXT_ON_RESET_ARB	video/x11/SDL_x11opengl.c	99;"	d	file:
GLX_MAX_SWAP_INTERVAL_EXT	video/x11/SDL_x11opengl.c	111;"	d	file:
GLX_NONE_EXT	video/x11/SDL_x11opengl.c	46;"	d	file:
GLX_NONE_EXT	video/x11/SDL_x11opengl.c	58;"	d	file:
GLX_NON_CONFORMANT_VISUAL_EXT	video/x11/SDL_x11opengl.c	60;"	d	file:
GLX_NO_RESET_NOTIFICATION_ARB	video/x11/SDL_x11opengl.c	98;"	d	file:
GLX_SAMPLES_ARB	video/x11/SDL_x11opengl.c	52;"	d	file:
GLX_SAMPLE_BUFFERS_ARB	video/x11/SDL_x11opengl.c	51;"	d	file:
GLX_SLOW_VISUAL_EXT	video/x11/SDL_x11opengl.c	59;"	d	file:
GLX_SWAP_INTERVAL_EXT	video/x11/SDL_x11opengl.c	110;"	d	file:
GLX_VISUAL_CAVEAT_EXT	video/x11/SDL_x11opengl.c	57;"	d	file:
GLX_X_VISUAL_TYPE_EXT	video/x11/SDL_x11opengl.c	65;"	d	file:
GL_ARB_debug_output_supported	render/opengl/SDL_render_gl.c	/^    SDL_bool GL_ARB_debug_output_supported;$/;"	m	struct:__anon90	file:
GL_ARB_multitexture_supported	render/opengl/SDL_render_gl.c	/^    SDL_bool GL_ARB_multitexture_supported;$/;"	m	struct:__anon90	file:
GL_ARB_texture_rectangle_supported	render/opengl/SDL_render_gl.c	/^    SDL_bool GL_ARB_texture_rectangle_supported;$/;"	m	struct:__anon90	file:
GL_ARB_texture_rectangle_supported	render/opengl/SDL_shaders_gl.c	/^    SDL_bool GL_ARB_texture_rectangle_supported;$/;"	m	struct:GL_ShaderContext	file:
GL_ActivateRenderer	render/opengl/SDL_render_gl.c	/^GL_ActivateRenderer(SDL_Renderer * renderer)$/;"	f	file:
GL_BindTexture	render/SDL_sysrender.h	/^    int (*GL_BindTexture) (SDL_Renderer * renderer, SDL_Texture *texture, float *texw, float *texh);$/;"	m	struct:SDL_Renderer
GL_BindTexture	render/opengl/SDL_render_gl.c	/^GL_BindTexture (SDL_Renderer * renderer, SDL_Texture *texture, float *texw, float *texh)$/;"	f	file:
GL_CheckAllErrors	render/opengl/SDL_render_gl.c	/^GL_CheckAllErrors (const char *prefix, SDL_Renderer *renderer, const char *file, int line, const char *function)$/;"	f
GL_CheckError	render/opengl/SDL_render_gl.c	248;"	d	file:
GL_CheckError	render/opengl/SDL_render_gl.c	250;"	d	file:
GL_ClearErrors	render/opengl/SDL_render_gl.c	/^GL_ClearErrors(SDL_Renderer *renderer)$/;"	f
GL_CreateContext	video/SDL_sysvideo.h	/^      SDL_GLContext(*GL_CreateContext) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
GL_CreateRenderer	render/opengl/SDL_render_gl.c	/^GL_CreateRenderer(SDL_Window * window, Uint32 flags)$/;"	f
GL_CreateShaderContext	render/opengl/SDL_shaders_gl.c	/^GL_CreateShaderContext()$/;"	f
GL_CreateTexture	render/opengl/SDL_render_gl.c	/^GL_CreateTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
GL_DeleteContext	video/SDL_sysvideo.h	/^    void (*GL_DeleteContext) (_THIS, SDL_GLContext context);$/;"	m	struct:SDL_VideoDevice
GL_DestroyRenderer	render/opengl/SDL_render_gl.c	/^GL_DestroyRenderer(SDL_Renderer * renderer)$/;"	f	file:
GL_DestroyShaderContext	render/opengl/SDL_shaders_gl.c	/^GL_DestroyShaderContext(GL_ShaderContext *ctx)$/;"	f
GL_DestroyTexture	render/opengl/SDL_render_gl.c	/^GL_DestroyTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
GL_ERROR_TRANSLATE	render/opengl/SDL_render_gl.c	165;"	d	file:
GL_ERROR_TRANSLATE	render/opengl/SDL_render_gl.c	178;"	d	file:
GL_EXT_framebuffer_object_supported	render/opengl/SDL_render_gl.c	/^    SDL_bool GL_EXT_framebuffer_object_supported;$/;"	m	struct:__anon90	file:
GL_FBOList	render/opengl/SDL_render_gl.c	/^struct GL_FBOList$/;"	s	file:
GL_FBOList	render/opengl/SDL_render_gl.c	/^typedef struct GL_FBOList GL_FBOList;$/;"	t	typeref:struct:GL_FBOList	file:
GL_GetFBO	render/opengl/SDL_render_gl.c	/^GL_GetFBO(GL_RenderData *data, Uint32 w, Uint32 h)$/;"	f	file:
GL_GetProcAddress	video/SDL_sysvideo.h	/^    void *(*GL_GetProcAddress) (_THIS, const char *proc);$/;"	m	struct:SDL_VideoDevice
GL_GetSwapInterval	video/SDL_sysvideo.h	/^    int (*GL_GetSwapInterval) (_THIS);$/;"	m	struct:SDL_VideoDevice
GL_HandleDebugMessage	render/opengl/SDL_render_gl.c	/^GL_HandleDebugMessage(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const char *message, void *userParam)$/;"	f	file:
GL_LoadFunction	video/directfb/SDL_DirectFB_opengl.c	53;"	d	file:
GL_LoadFunction	video/directfb/SDL_DirectFB_opengl.c	57;"	d	file:
GL_LoadFunction	video/x11/SDL_x11opengl.c	122;"	d	file:
GL_LoadFunction	video/x11/SDL_x11opengl.c	126;"	d	file:
GL_LoadFunctions	render/opengl/SDL_render_gl.c	/^GL_LoadFunctions(GL_RenderData * data)$/;"	f	file:
GL_LoadLibrary	video/SDL_sysvideo.h	/^    int (*GL_LoadLibrary) (_THIS, const char *path);$/;"	m	struct:SDL_VideoDevice
GL_LoadObject	video/directfb/SDL_DirectFB_opengl.c	52;"	d	file:
GL_LoadObject	video/directfb/SDL_DirectFB_opengl.c	56;"	d	file:
GL_LoadObject	video/x11/SDL_x11opengl.c	121;"	d	file:
GL_LoadObject	video/x11/SDL_x11opengl.c	125;"	d	file:
GL_LockTexture	render/opengl/SDL_render_gl.c	/^GL_LockTexture(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
GL_MakeCurrent	video/SDL_sysvideo.h	/^    int (*GL_MakeCurrent) (_THIS, SDL_Window * window, SDL_GLContext context);$/;"	m	struct:SDL_VideoDevice
GL_NUM_EXTENSIONS	video/SDL_video.c	2424;"	d	file:
GL_NVIDIA_PLATFORM_BINARY_NV	render/opengles2/SDL_render_gles2.c	1603;"	d	file:
GL_NVIDIA_PLATFORM_BINARY_NV	render/opengles2/SDL_shaders_gles2.c	177;"	d	file:
GL_OES_blend_func_separate_supported	render/opengles/SDL_render_gles.c	/^    SDL_bool GL_OES_blend_func_separate_supported;$/;"	m	struct:__anon80	file:
GL_OES_draw_texture_supported	render/opengles/SDL_render_gles.c	/^    SDL_bool GL_OES_draw_texture_supported;$/;"	m	struct:__anon80	file:
GL_OES_framebuffer_object_supported	render/opengles/SDL_render_gles.c	/^    SDL_bool GL_OES_framebuffer_object_supported;$/;"	m	struct:__anon80	file:
GL_RenderClear	render/opengl/SDL_render_gl.c	/^GL_RenderClear(SDL_Renderer * renderer)$/;"	f	file:
GL_RenderCopy	render/opengl/SDL_render_gl.c	/^GL_RenderCopy(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
GL_RenderCopyEx	render/opengl/SDL_render_gl.c	/^GL_RenderCopyEx(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
GL_RenderData	render/opengl/SDL_render_gl.c	/^} GL_RenderData;$/;"	t	typeref:struct:__anon90	file:
GL_RenderDrawLines	render/opengl/SDL_render_gl.c	/^GL_RenderDrawLines(SDL_Renderer * renderer, const SDL_FPoint * points,$/;"	f	file:
GL_RenderDrawPoints	render/opengl/SDL_render_gl.c	/^GL_RenderDrawPoints(SDL_Renderer * renderer, const SDL_FPoint * points,$/;"	f	file:
GL_RenderDriver	render/opengl/SDL_render_gl.c	/^SDL_RenderDriver GL_RenderDriver = {$/;"	v
GL_RenderFillRects	render/opengl/SDL_render_gl.c	/^GL_RenderFillRects(SDL_Renderer * renderer, const SDL_FRect * rects, int count)$/;"	f	file:
GL_RenderPresent	render/opengl/SDL_render_gl.c	/^GL_RenderPresent(SDL_Renderer * renderer)$/;"	f	file:
GL_RenderReadPixels	render/opengl/SDL_render_gl.c	/^GL_RenderReadPixels(SDL_Renderer * renderer, const SDL_Rect * rect,$/;"	f	file:
GL_ResetState	render/opengl/SDL_render_gl.c	/^GL_ResetState(SDL_Renderer *renderer)$/;"	f	file:
GL_SelectShader	render/opengl/SDL_shaders_gl.c	/^GL_SelectShader(GL_ShaderContext *ctx, GL_Shader shader)$/;"	f
GL_SetBlendMode	render/opengl/SDL_render_gl.c	/^GL_SetBlendMode(GL_RenderData * data, int blendMode)$/;"	f	file:
GL_SetColor	render/opengl/SDL_render_gl.c	/^GL_SetColor(GL_RenderData * data, Uint8 r, Uint8 g, Uint8 b, Uint8 a)$/;"	f	file:
GL_SetDrawingState	render/opengl/SDL_render_gl.c	/^GL_SetDrawingState(SDL_Renderer * renderer)$/;"	f	file:
GL_SetRenderTarget	render/opengl/SDL_render_gl.c	/^GL_SetRenderTarget(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
GL_SetShader	render/opengl/SDL_render_gl.c	/^GL_SetShader(GL_RenderData * data, GL_Shader shader)$/;"	f	file:
GL_SetSwapInterval	video/SDL_sysvideo.h	/^    int (*GL_SetSwapInterval) (_THIS, int interval);$/;"	m	struct:SDL_VideoDevice
GL_Shader	render/opengl/SDL_shaders_gl.h	/^} GL_Shader;$/;"	t	typeref:enum:__anon93
GL_ShaderContext	render/opengl/SDL_shaders_gl.c	/^struct GL_ShaderContext$/;"	s	file:
GL_ShaderContext	render/opengl/SDL_shaders_gl.h	/^typedef struct GL_ShaderContext GL_ShaderContext;$/;"	t	typeref:struct:GL_ShaderContext
GL_ShaderData	render/opengl/SDL_shaders_gl.c	/^} GL_ShaderData;$/;"	t	typeref:struct:__anon89	file:
GL_SwapWindow	video/SDL_sysvideo.h	/^    void (*GL_SwapWindow) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
GL_TEXTURE_STORAGE_HINT_APPLE	render/opengl/SDL_render_gl.c	673;"	d	file:
GL_TextureData	render/opengl/SDL_render_gl.c	/^} GL_TextureData;$/;"	t	typeref:struct:__anon92	file:
GL_TranslateError	render/opengl/SDL_render_gl.c	/^GL_TranslateError (GLenum error)$/;"	f
GL_UnbindTexture	render/SDL_sysrender.h	/^    int (*GL_UnbindTexture) (SDL_Renderer * renderer, SDL_Texture *texture);$/;"	m	struct:SDL_Renderer
GL_UnbindTexture	render/opengl/SDL_render_gl.c	/^GL_UnbindTexture (SDL_Renderer * renderer, SDL_Texture *texture)$/;"	f	file:
GL_UnloadLibrary	video/SDL_sysvideo.h	/^    void (*GL_UnloadLibrary) (_THIS);$/;"	m	struct:SDL_VideoDevice
GL_UnloadObject	video/directfb/SDL_DirectFB_opengl.c	54;"	d	file:
GL_UnloadObject	video/directfb/SDL_DirectFB_opengl.c	58;"	d	file:
GL_UnloadObject	video/x11/SDL_x11opengl.c	123;"	d	file:
GL_UnloadObject	video/x11/SDL_x11opengl.c	127;"	d	file:
GL_UnlockTexture	render/opengl/SDL_render_gl.c	/^GL_UnlockTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
GL_UpdateClipRect	render/opengl/SDL_render_gl.c	/^GL_UpdateClipRect(SDL_Renderer * renderer)$/;"	f	file:
GL_UpdateTexture	render/opengl/SDL_render_gl.c	/^GL_UpdateTexture(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
GL_UpdateViewport	render/opengl/SDL_render_gl.c	/^GL_UpdateViewport(SDL_Renderer * renderer)$/;"	f	file:
GL_WindowEvent	render/opengl/SDL_render_gl.c	/^GL_WindowEvent(SDL_Renderer * renderer, const SDL_WindowEvent *event)$/;"	f	file:
GUARD_ROWS	render/software/SDL_rotate.c	77;"	d	file:
Gamepad	joystick/windows/SDL_dxjoystick_c.h	/^    XINPUT_GAMEPAD_EX Gamepad;$/;"	m	struct:__anon73
GetActiveFlags	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetActiveFlags)(ITfThreadMgrEx *, DWORD *);$/;"	m	struct:ITfThreadMgrExVtbl
GetBase	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetBase)(ITfDocumentMgr *, ITfContext **);$/;"	m	struct:ITfDocumentMgrVtbl
GetBitmap	video/bwindow/SDL_BWin.h	/^    BBitmap *GetBitmap() { return _bitmap; }$/;"	f	class:SDL_BWin
GetBlitFeatures	video/SDL_blit_N.c	/^GetBlitFeatures(void)$/;"	f	file:
GetBlitFeatures	video/SDL_blit_N.c	874;"	d	file:
GetBufferPx	video/bwindow/SDL_BWin.h	/^    uint8* GetBufferPx() { return _bits; }$/;"	f	class:SDL_BWin
GetBytesPerPx	video/bwindow/SDL_BWin.h	/^    int32 GetBytesPerPx() { return _bytes_per_px; }$/;"	f	class:SDL_BWin
GetCategoryPrefix	SDL_log.c	/^GetCategoryPrefix(int category)$/;"	f	file:
GetClipboardText	video/SDL_sysvideo.h	/^    char * (*GetClipboardText) (_THIS);$/;"	m	struct:SDL_VideoDevice
GetClips	video/bwindow/SDL_BWin.h	/^    clipping_rect *GetClips() { return _clips; }$/;"	f	class:SDL_BWin
GetClock	test/SDL_test_harness.c	/^float GetClock()$/;"	f
GetClosestSupportedFormat	render/SDL_render.c	/^GetClosestSupportedFormat(SDL_Renderer * renderer, Uint32 format)$/;"	f	file:
GetContext	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetContext)(ITfReadingInformationUIElement *, ITfContext **);$/;"	m	struct:ITfReadingInformationUIElementVtbl
GetCount	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetCount)(ITfCandidateListUIElement *, UINT *);$/;"	m	struct:ITfCandidateListUIElementVtbl
GetCurrentPage	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetCurrentPage)(ITfCandidateListUIElement *, UINT *);$/;"	m	struct:ITfCandidateListUIElementVtbl
GetDescription	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetDescription)(ITfCandidateListUIElement *, BSTR *);$/;"	m	struct:ITfCandidateListUIElementVtbl
GetDescription	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetDescription)(ITfReadingInformationUIElement *, BSTR *);$/;"	m	struct:ITfReadingInformationUIElementVtbl
GetDescription	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetDescription)(ITfUIElement *, BSTR *);$/;"	m	struct:ITfUIElementVtbl
GetDeviceBuf	audio/SDL_sysaudio.h	/^    Uint8 *(*GetDeviceBuf) (_THIS);$/;"	m	struct:SDL_AudioDriverImpl
GetDisplay	video/x11/SDL_x11mouse.c	/^GetDisplay(void)$/;"	f	file:
GetDisplayBounds	video/SDL_sysvideo.h	/^    int (*GetDisplayBounds) (_THIS, SDL_VideoDisplay * display, SDL_Rect * rect);$/;"	m	struct:SDL_VideoDevice
GetDisplayModes	video/SDL_sysvideo.h	/^    void (*GetDisplayModes) (_THIS, SDL_VideoDisplay * display);$/;"	m	struct:SDL_VideoDevice
GetDocumentMgr	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetDocumentMgr)(ITfCandidateListUIElement *, ITfDocumentMgr **);$/;"	m	struct:ITfCandidateListUIElementVtbl
GetErrorIndex	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetErrorIndex)(ITfReadingInformationUIElement *, UINT *);$/;"	m	struct:ITfReadingInformationUIElementVtbl
GetFbX	video/bwindow/SDL_BWin.h	/^    int32 GetFbX() { return _bounds.left; }$/;"	f	class:SDL_BWin
GetFbY	video/bwindow/SDL_BWin.h	/^    int32 GetFbY() { return _bounds.top; }$/;"	f	class:SDL_BWin
GetFocus	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetFocus)(ITfThreadMgr *, ITfDocumentMgr **);$/;"	m	struct:ITfThreadMgrVtbl
GetFocus	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetFocus)(ITfThreadMgrEx *, ITfDocumentMgr **);$/;"	m	struct:ITfThreadMgrExVtbl
GetFunctionProvider	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetFunctionProvider)(ITfThreadMgr *, REFCLSID, ITfFunctionProvider **);$/;"	m	struct:ITfThreadMgrVtbl
GetFunctionProvider	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetFunctionProvider)(ITfThreadMgrEx *, REFCLSID, ITfFunctionProvider **);$/;"	m	struct:ITfThreadMgrExVtbl
GetGLView	video/bwindow/SDL_BWin.h	/^    BGLView *GetGLView() { return _SDL_GLView; }$/;"	f	class:SDL_BWin
GetGUID	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetGUID)(ITfCandidateListUIElement *, GUID *);$/;"	m	struct:ITfCandidateListUIElementVtbl
GetGUID	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetGUID)(ITfReadingInformationUIElement *, GUID *);$/;"	m	struct:ITfReadingInformationUIElementVtbl
GetGUID	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetGUID)(ITfUIElement *, GUID *);$/;"	m	struct:ITfUIElementVtbl
GetGlobalCompartment	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetGlobalCompartment)(ITfThreadMgr *, ITfCompartmentMgr **);$/;"	m	struct:ITfThreadMgrVtbl
GetGlobalCompartment	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetGlobalCompartment)(ITfThreadMgrEx *, ITfCompartmentMgr **);$/;"	m	struct:ITfThreadMgrExVtbl
GetHitButtonIndex	video/x11/SDL_x11messagebox.c	/^GetHitButtonIndex( SDL_MessageBoxDataX11 *data, int x, int y )$/;"	f	file:
GetID	main/beos/SDL_BApp.h	/^    int32 GetID(SDL_Window *win) {$/;"	f	class:SDL_BApp
GetID	video/bwindow/SDL_BWin.h	/^    int32 GetID() { return _id; }$/;"	f	class:SDL_BWin
GetJoystickName	joystick/windows/SDL_mmjoystick.c	/^GetJoystickName(int index, const char *szRegKey)$/;"	f	file:
GetL3CacheSize	video/SDL_blit_N.c	/^GetL3CacheSize(void)$/;"	f	file:
GetMaxReadingStringLength	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetMaxReadingStringLength)(ITfReadingInformationUIElement *, UINT *);$/;"	m	struct:ITfReadingInformationUIElementVtbl
GetNumClips	video/bwindow/SDL_BWin.h	/^    int32 GetNumClips() { return _num_clips; }$/;"	f	class:SDL_BWin
GetOutputSize	render/SDL_sysrender.h	/^    int (*GetOutputSize) (SDL_Renderer * renderer, int *w, int *h);$/;"	m	struct:SDL_Renderer
GetPageIndex	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetPageIndex)(ITfCandidateListUIElement *, UINT *, UINT, UINT *);$/;"	m	struct:ITfCandidateListUIElementVtbl
GetReadingString	video/windows/SDL_windowsvideo.h	/^    UINT (WINAPI *GetReadingString)(HIMC himc, UINT uReadingBufLen, LPWSTR lpwReadingBuf, PINT pnErrorIndex, BOOL *pfIsVertical, PUINT puMaxReadingLen);$/;"	m	struct:SDL_VideoData
GetRowBytes	video/bwindow/SDL_BWin.h	/^    uint32 GetRowBytes() { return _row_bytes; }$/;"	f	class:SDL_BWin
GetSDLWindow	main/beos/SDL_BApp.h	/^    SDL_Window *GetSDLWindow(int32 winID) {$/;"	f	class:SDL_BApp
GetScaleQuality	render/direct3d/SDL_render_d3d.c	/^GetScaleQuality(void)$/;"	f	file:
GetScaleQuality	render/opengl/SDL_render_gl.c	/^GetScaleQuality(void)$/;"	f	file:
GetScaleQuality	render/opengles/SDL_render_gles.c	/^GetScaleQuality(void)$/;"	f	file:
GetScaleQuality	render/opengles2/SDL_render_gles2.c	/^GetScaleQuality(void)$/;"	f	file:
GetScaleQuality	render/psp/SDL_render_psp.c	/^GetScaleQuality(void)$/;"	f	file:
GetScaleQuality	render/software/SDL_render_sw.c	/^GetScaleQuality(void)$/;"	f	file:
GetSelection	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetSelection)(ITfCandidateListUIElement *, UINT *);$/;"	m	struct:ITfCandidateListUIElementVtbl
GetString	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetString)(ITfCandidateListUIElement *, UINT, BSTR *);$/;"	m	struct:ITfCandidateListUIElementVtbl
GetString	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetString)(ITfReadingInformationUIElement *, BSTR *);$/;"	m	struct:ITfReadingInformationUIElementVtbl
GetSupportedFeatures	haptic/darwin/SDL_syshaptic.c	/^GetSupportedFeatures(SDL_Haptic * haptic)$/;"	f	file:
GetTextWidthHeight	video/x11/SDL_x11messagebox.c	/^GetTextWidthHeight( SDL_MessageBoxDataX11 *data, const char *str, int nbytes, int *pwidth, int *pheight )$/;"	f	file:
GetTop	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetTop)(ITfDocumentMgr *, ITfContext **);$/;"	m	struct:ITfDocumentMgrVtbl
GetTouchInputInfo	video/windows/SDL_windowsvideo.h	/^    BOOL (WINAPI *GetTouchInputInfo)( HTOUCHINPUT, UINT, PTOUCHINPUT, int );$/;"	m	struct:SDL_VideoData
GetUIElement	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetUIElement)(ITfUIElementMgr *, DWORD, ITfUIElement **);$/;"	m	struct:ITfUIElementMgrVtbl
GetUpdatedFlags	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetUpdatedFlags)(ITfCandidateListUIElement *, DWORD *);$/;"	m	struct:ITfCandidateListUIElementVtbl
GetUpdatedFlags	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *GetUpdatedFlags)(ITfReadingInformationUIElement *, DWORD *);$/;"	m	struct:ITfReadingInformationUIElementVtbl
GetWindow	video/x11/SDL_x11clipboard.c	/^GetWindow(_THIS)$/;"	f	file:
GetWindowGammaRamp	video/SDL_sysvideo.h	/^    int (*GetWindowGammaRamp) (_THIS, SDL_Window * window, Uint16 * ramp);$/;"	m	struct:SDL_VideoDevice
GetWindowHandle	video/windows/SDL_windowsclipboard.c	/^GetWindowHandle(_THIS)$/;"	f	file:
GetWindowStyle	video/windows/SDL_windowswindow.c	/^GetWindowStyle(SDL_Window * window)$/;"	f	file:
GetWindowWMInfo	video/SDL_sysvideo.h	/^      SDL_bool(*GetWindowWMInfo) (_THIS, SDL_Window * window,$/;"	m	struct:SDL_VideoDevice
Gloss	video/SDL_RLEaccel.c	/^    Uint8 Gloss;$/;"	m	struct:__anon36	file:
Gmask	video/SDL_RLEaccel.c	/^    Uint32 Gmask;$/;"	m	struct:__anon36	file:
Gshift	video/SDL_RLEaccel.c	/^    Uint8 Gshift;$/;"	m	struct:__anon36	file:
H	test/SDL_test_md5.c	75;"	d	file:
HALF_MAX_SIZE_T	stdlib/SDL_malloc.c	1323;"	d	file:
HAS_GLX_EXT_swap_control_tear	video/x11/SDL_x11opengl.h	/^    SDL_bool HAS_GLX_EXT_swap_control_tear;$/;"	m	struct:SDL_GLDriverData
HAS_GLX_EXT_visual_info	video/x11/SDL_x11opengl.h	/^    SDL_bool HAS_GLX_EXT_visual_info;$/;"	m	struct:SDL_GLDriverData
HAS_GLX_EXT_visual_rating	video/x11/SDL_x11opengl.h	/^    SDL_bool HAS_GLX_EXT_visual_rating;$/;"	m	struct:SDL_GLDriverData
HAS_WGL_ARB_pixel_format	video/windows/SDL_windowsopengl.h	/^    SDL_bool HAS_WGL_ARB_pixel_format;$/;"	m	struct:SDL_GLDriverData
HAS_WGL_EXT_swap_control_tear	video/windows/SDL_windowsopengl.h	/^    SDL_bool HAS_WGL_EXT_swap_control_tear;$/;"	m	struct:SDL_GLDriverData
HAT	joystick/windows/SDL_dxjoystick_c.h	/^{ BUTTON, AXIS, HAT } Type;$/;"	e	enum:Type
HAVE_MMAP	stdlib/SDL_malloc.c	506;"	d	file:
HAVE_MMAP	stdlib/SDL_malloc.c	524;"	d	file:
HAVE_MMAP	stdlib/SDL_malloc.c	567;"	d	file:
HAVE_MORECORE	stdlib/SDL_malloc.c	507;"	d	file:
HAVE_MORECORE	stdlib/SDL_malloc.c	523;"	d	file:
HAVE_MORECORE	stdlib/SDL_malloc.c	584;"	d	file:
HAVE_MORECORE	stdlib/SDL_malloc.c	586;"	d	file:
HAVE_MREMAP	stdlib/SDL_malloc.c	574;"	d	file:
HAVE_MREMAP	stdlib/SDL_malloc.c	576;"	d	file:
HDMI_A	video/x11/edid.h	/^    HDMI_A,$/;"	e	enum:__anon9
HDMI_B	video/x11/edid.h	/^    HDMI_B,$/;"	e	enum:__anon9
HH	test/SDL_test_md5.c	94;"	d	file:
HI	video/SDL_blit_1.c	74;"	d	file:
HI	video/SDL_blit_1.c	77;"	d	file:
HI	video/SDL_blit_N.c	879;"	d	file:
HI	video/SDL_blit_N.c	882;"	d	file:
HIDAddElement	joystick/darwin/SDL_sysjoystick.c	/^HIDAddElement(CFTypeRef refElement, recDevice * pDevice)$/;"	f	file:
HIDBuildDevice	joystick/darwin/SDL_sysjoystick.c	/^HIDBuildDevice(io_object_t hidDevice)$/;"	f	file:
HIDCloseReleaseInterface	joystick/darwin/SDL_sysjoystick.c	/^HIDCloseReleaseInterface(recDevice * pDevice)$/;"	f	file:
HIDCreateOpenDeviceInterface	joystick/darwin/SDL_sysjoystick.c	/^HIDCreateOpenDeviceInterface(io_object_t hidDevice, recDevice * pDevice)$/;"	f	file:
HIDDisposeDevice	joystick/darwin/SDL_sysjoystick.c	/^HIDDisposeDevice(recDevice ** ppDevice)$/;"	f	file:
HIDDisposeElementList	joystick/darwin/SDL_sysjoystick.c	/^HIDDisposeElementList(recElement ** elementList)$/;"	f	file:
HIDGetCollectionElements	joystick/darwin/SDL_sysjoystick.c	/^HIDGetCollectionElements(CFMutableDictionaryRef deviceProperties,$/;"	f	file:
HIDGetDeviceInfo	joystick/darwin/SDL_sysjoystick.c	/^HIDGetDeviceInfo(io_object_t hidDevice, CFMutableDictionaryRef hidProperties,$/;"	f	file:
HIDGetDeviceProduct	haptic/darwin/SDL_syshaptic.c	/^HIDGetDeviceProduct(io_service_t dev, char *name)$/;"	f	file:
HIDGetElementInfo	joystick/darwin/SDL_sysjoystick.c	/^HIDGetElementInfo(CFTypeRef refElement, recElement * pElement)$/;"	f	file:
HIDGetElementValue	joystick/darwin/SDL_sysjoystick.c	/^HIDGetElementValue(recDevice * pDevice, recElement * pElement)$/;"	f	file:
HIDGetElements	joystick/darwin/SDL_sysjoystick.c	/^HIDGetElements(CFTypeRef refElementCurrent, recDevice * pDevice)$/;"	f	file:
HIDGetElementsCFArrayHandler	joystick/darwin/SDL_sysjoystick.c	/^HIDGetElementsCFArrayHandler(const void *value, void *parameter)$/;"	f	file:
HIDRemovalCallback	joystick/darwin/SDL_sysjoystick.c	/^HIDRemovalCallback(void *target, IOReturn result, void *refcon, void *sender)$/;"	f	file:
HIDReportErrorNum	joystick/darwin/SDL_sysjoystick.c	/^HIDReportErrorNum(char *strError, long numError)$/;"	f	file:
HIDScaledCalibratedValue	joystick/darwin/SDL_sysjoystick.c	/^HIDScaledCalibratedValue(recDevice * pDevice, recElement * pElement,$/;"	f	file:
HIDTopLevelElementHandler	joystick/darwin/SDL_sysjoystick.c	/^HIDTopLevelElementHandler(const void *value, void *parameter)$/;"	f	file:
HLINE	render/software/SDL_draw.h	295;"	d
HTOUCHINPUT	video/windows/SDL_windowsvideo.h	/^DECLARE_HANDLE(HTOUCHINPUT);$/;"	v
HandleBall	joystick/linux/SDL_sysjoystick.c	/^HandleBall(SDL_Joystick * stick, Uint8 ball, int axis, int value)$/;"	f	file:
HandleHat	joystick/linux/SDL_sysjoystick.c	/^HandleHat(SDL_Joystick * stick, Uint8 hat, int axis, int value)$/;"	f	file:
HandleInputEvents	joystick/linux/SDL_sysjoystick.c	/^HandleInputEvents(SDL_Joystick * joystick)$/;"	f	file:
HasCaptureSupport	audio/SDL_sysaudio.h	/^    int HasCaptureSupport;$/;"	m	struct:SDL_AudioDriverImpl
HasClipboardText	video/SDL_sysvideo.h	/^    SDL_bool (*HasClipboardText) (_THIS);$/;"	m	struct:SDL_VideoDevice
HasExtension	video/windows/SDL_windowsopengl.c	/^HasExtension(const char *extension, const char *extensions)$/;"	f	file:
HasExtension	video/x11/SDL_x11opengl.c	/^HasExtension(const char *extension, const char *extensions)$/;"	f	file:
HasScreenKeyboardSupport	video/SDL_sysvideo.h	/^    SDL_bool (*HasScreenKeyboardSupport) (_THIS);$/;"	m	struct:SDL_VideoDevice
Hide	video/bwindow/SDL_BWin.h	/^    virtual void Hide() {$/;"	f	class:SDL_BWin
HideScreenKeyboard	video/SDL_sysvideo.h	/^    void (*HideScreenKeyboard) (_THIS, SDL_Window *window);$/;"	m	struct:SDL_VideoDevice
HideWindow	video/SDL_sysvideo.h	/^    void (*HideWindow) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
HotplugUpdateAvailable	joystick/linux/SDL_sysjoystick.c	/^HotplugUpdateAvailable(void)$/;"	f	file:
I	test/SDL_test_md5.c	76;"	d	file:
ICONV_INBUF_NONCONST	stdlib/SDL_iconv.c	36;"	d	file:
ID3DXBuffer	render/direct3d/SDL_render_d3d.c	/^typedef interface ID3DXBuffer ID3DXBuffer;$/;"	t	file:
ID3DXBufferVtbl	render/direct3d/SDL_render_d3d.c	/^const struct ID3DXBufferVtbl$/;"	s	file:
ID3DXBufferVtbl	render/direct3d/SDL_render_d3d.c	/^typedef const struct ID3DXBufferVtbl ID3DXBufferVtbl;$/;"	t	typeref:struct:ID3DXBufferVtbl	file:
ID3DXMatrixStack_AddRef	render/direct3d/SDL_render_d3d.c	76;"	d	file:
ID3DXMatrixStack_AddRef	render/direct3d/SDL_render_d3d.c	95;"	d	file:
ID3DXMatrixStack_GetTop	render/direct3d/SDL_render_d3d.c	110;"	d	file:
ID3DXMatrixStack_GetTop	render/direct3d/SDL_render_d3d.c	92;"	d	file:
ID3DXMatrixStack_LoadIdentity	render/direct3d/SDL_render_d3d.c	80;"	d	file:
ID3DXMatrixStack_LoadIdentity	render/direct3d/SDL_render_d3d.c	99;"	d	file:
ID3DXMatrixStack_LoadMatrix	render/direct3d/SDL_render_d3d.c	100;"	d	file:
ID3DXMatrixStack_LoadMatrix	render/direct3d/SDL_render_d3d.c	81;"	d	file:
ID3DXMatrixStack_MultMatrix	render/direct3d/SDL_render_d3d.c	101;"	d	file:
ID3DXMatrixStack_MultMatrix	render/direct3d/SDL_render_d3d.c	82;"	d	file:
ID3DXMatrixStack_MultMatrixLocal	render/direct3d/SDL_render_d3d.c	102;"	d	file:
ID3DXMatrixStack_MultMatrixLocal	render/direct3d/SDL_render_d3d.c	83;"	d	file:
ID3DXMatrixStack_Pop	render/direct3d/SDL_render_d3d.c	78;"	d	file:
ID3DXMatrixStack_Pop	render/direct3d/SDL_render_d3d.c	97;"	d	file:
ID3DXMatrixStack_Push	render/direct3d/SDL_render_d3d.c	79;"	d	file:
ID3DXMatrixStack_Push	render/direct3d/SDL_render_d3d.c	98;"	d	file:
ID3DXMatrixStack_QueryInterface	render/direct3d/SDL_render_d3d.c	75;"	d	file:
ID3DXMatrixStack_QueryInterface	render/direct3d/SDL_render_d3d.c	94;"	d	file:
ID3DXMatrixStack_Release	render/direct3d/SDL_render_d3d.c	77;"	d	file:
ID3DXMatrixStack_Release	render/direct3d/SDL_render_d3d.c	96;"	d	file:
ID3DXMatrixStack_RotateAxis	render/direct3d/SDL_render_d3d.c	103;"	d	file:
ID3DXMatrixStack_RotateAxis	render/direct3d/SDL_render_d3d.c	84;"	d	file:
ID3DXMatrixStack_RotateAxisLocal	render/direct3d/SDL_render_d3d.c	104;"	d	file:
ID3DXMatrixStack_RotateAxisLocal	render/direct3d/SDL_render_d3d.c	85;"	d	file:
ID3DXMatrixStack_RotateYawPitchRoll	render/direct3d/SDL_render_d3d.c	105;"	d	file:
ID3DXMatrixStack_RotateYawPitchRoll	render/direct3d/SDL_render_d3d.c	86;"	d	file:
ID3DXMatrixStack_RotateYawPitchRollLocal	render/direct3d/SDL_render_d3d.c	87;"	d	file:
ID3DXMatrixStack_Scale	render/direct3d/SDL_render_d3d.c	106;"	d	file:
ID3DXMatrixStack_Scale	render/direct3d/SDL_render_d3d.c	88;"	d	file:
ID3DXMatrixStack_ScaleLocal	render/direct3d/SDL_render_d3d.c	107;"	d	file:
ID3DXMatrixStack_ScaleLocal	render/direct3d/SDL_render_d3d.c	89;"	d	file:
ID3DXMatrixStack_Translate	render/direct3d/SDL_render_d3d.c	108;"	d	file:
ID3DXMatrixStack_Translate	render/direct3d/SDL_render_d3d.c	90;"	d	file:
ID3DXMatrixStack_TranslateLocal	render/direct3d/SDL_render_d3d.c	109;"	d	file:
ID3DXMatrixStack_TranslateLocal	render/direct3d/SDL_render_d3d.c	91;"	d	file:
IEEE_FLOAT_CODE	audio/SDL_wave.h	36;"	d
IEnumTfContexts	video/windows/SDL_msctf.h	/^typedef struct IEnumTfContexts IEnumTfContexts;$/;"	t	typeref:struct:IEnumTfContexts
IEnumTfDocumentMgrs	video/windows/SDL_msctf.h	/^typedef struct IEnumTfDocumentMgrs IEnumTfDocumentMgrs;$/;"	t	typeref:struct:IEnumTfDocumentMgrs
IEnumTfFunctionProviders	video/windows/SDL_msctf.h	/^typedef struct IEnumTfFunctionProviders IEnumTfFunctionProviders;$/;"	t	typeref:struct:IEnumTfFunctionProviders
IEnumTfUIElements	video/windows/SDL_msctf.h	/^typedef struct IEnumTfUIElements IEnumTfUIElements;$/;"	t	typeref:struct:IEnumTfUIElements
II	test/SDL_test_md5.c	99;"	d	file:
IMA_ADPCM_CODE	audio/SDL_wave.h	37;"	d
IMA_ADPCM_decode	audio/SDL_wave.c	/^IMA_ADPCM_decode(Uint8 ** audio_buf, Uint32 * audio_len)$/;"	f	file:
IMA_ADPCM_decoder	audio/SDL_wave.c	/^static struct IMA_ADPCM_decoder$/;"	s	file:
IMA_ADPCM_decodestate	audio/SDL_wave.c	/^struct IMA_ADPCM_decodestate$/;"	s	file:
IMA_ADPCM_nibble	audio/SDL_wave.c	/^IMA_ADPCM_nibble(struct IMA_ADPCM_decodestate *state, Uint8 nybble)$/;"	f	file:
IMA_ADPCM_state	audio/SDL_wave.c	/^} IMA_ADPCM_state;$/;"	v	typeref:struct:IMA_ADPCM_decoder	file:
IMEID_CHS_VER41	video/windows/SDL_windowskeyboard.c	256;"	d	file:
IMEID_CHS_VER42	video/windows/SDL_windowskeyboard.c	257;"	d	file:
IMEID_CHS_VER53	video/windows/SDL_windowskeyboard.c	258;"	d	file:
IMEID_CHT_VER42	video/windows/SDL_windowskeyboard.c	244;"	d	file:
IMEID_CHT_VER43	video/windows/SDL_windowskeyboard.c	245;"	d	file:
IMEID_CHT_VER44	video/windows/SDL_windowskeyboard.c	246;"	d	file:
IMEID_CHT_VER50	video/windows/SDL_windowskeyboard.c	247;"	d	file:
IMEID_CHT_VER51	video/windows/SDL_windowskeyboard.c	248;"	d	file:
IMEID_CHT_VER52	video/windows/SDL_windowskeyboard.c	249;"	d	file:
IMEID_CHT_VER60	video/windows/SDL_windowskeyboard.c	250;"	d	file:
IMEID_CHT_VER_VISTA	video/windows/SDL_windowskeyboard.c	251;"	d	file:
IMEID_LANG	video/windows/SDL_windowskeyboard.c	234;"	d	file:
IMEID_VER	video/windows/SDL_windowskeyboard.c	233;"	d	file:
IME_AddCandidate	video/windows/SDL_windowskeyboard.c	/^IME_AddCandidate(SDL_VideoData *videodata, UINT i, LPCWSTR candidate)$/;"	f	file:
IME_ClearComposition	video/windows/SDL_windowskeyboard.c	/^IME_ClearComposition(SDL_VideoData *videodata)$/;"	f	file:
IME_CloseCandidateList	video/windows/SDL_windowskeyboard.c	/^IME_CloseCandidateList(SDL_VideoData *videodata)$/;"	f	file:
IME_DestroyTextures	video/windows/SDL_windowskeyboard.c	/^IME_DestroyTextures(SDL_VideoData *videodata)$/;"	f	file:
IME_Disable	video/windows/SDL_windowskeyboard.c	/^IME_Disable(SDL_VideoData *videodata, HWND hwnd)$/;"	f	file:
IME_Enable	video/windows/SDL_windowskeyboard.c	/^IME_Enable(SDL_VideoData *videodata, HWND hwnd)$/;"	f	file:
IME_GetCandidateList	video/windows/SDL_windowskeyboard.c	/^IME_GetCandidateList(HIMC himc, SDL_VideoData *videodata)$/;"	f	file:
IME_GetCompositionString	video/windows/SDL_windowskeyboard.c	/^IME_GetCompositionString(SDL_VideoData *videodata, HIMC himc, DWORD string)$/;"	f	file:
IME_GetId	video/windows/SDL_windowskeyboard.c	/^IME_GetId(SDL_VideoData *videodata, UINT uIndex)$/;"	f	file:
IME_GetReadingString	video/windows/SDL_windowskeyboard.c	/^IME_GetReadingString(SDL_VideoData *videodata, HWND hwnd)$/;"	f	file:
IME_HandleMessage	video/windows/SDL_windowskeyboard.c	/^IME_HandleMessage(HWND hwnd, UINT msg, WPARAM wParam, LPARAM *lParam, SDL_VideoData *videodata)$/;"	f
IME_HideCandidateList	video/windows/SDL_windowskeyboard.c	/^IME_HideCandidateList(SDL_VideoData *videodata)$/;"	f	file:
IME_Init	video/windows/SDL_windowskeyboard.c	/^IME_Init(SDL_VideoData *videodata, HWND hwnd)$/;"	f	file:
IME_InputLangChanged	video/windows/SDL_windowskeyboard.c	/^IME_InputLangChanged(SDL_VideoData *videodata)$/;"	f	file:
IME_PositionCandidateList	video/windows/SDL_windowskeyboard.c	/^IME_PositionCandidateList(SDL_VideoData *videodata, SIZE size)$/;"	f	file:
IME_Present	video/windows/SDL_windowskeyboard.c	/^void IME_Present(SDL_VideoData *videodata)$/;"	f
IME_Quit	video/windows/SDL_windowskeyboard.c	/^IME_Quit(SDL_VideoData *videodata)$/;"	f	file:
IME_Render	video/windows/SDL_windowskeyboard.c	/^IME_Render(SDL_VideoData *videodata)$/;"	f	file:
IME_RenderCandidateList	video/windows/SDL_windowskeyboard.c	/^IME_RenderCandidateList(SDL_VideoData *videodata, HDC hdc)$/;"	f	file:
IME_SendEditingEvent	video/windows/SDL_windowskeyboard.c	/^IME_SendEditingEvent(SDL_VideoData *videodata)$/;"	f	file:
IME_SendInputEvent	video/windows/SDL_windowskeyboard.c	/^IME_SendInputEvent(SDL_VideoData *videodata)$/;"	f	file:
IME_SetWindow	video/windows/SDL_windowskeyboard.c	/^IME_SetWindow(SDL_VideoData* videodata, HWND hwnd)$/;"	f	file:
IME_SetupAPI	video/windows/SDL_windowskeyboard.c	/^IME_SetupAPI(SDL_VideoData *videodata)$/;"	f	file:
IME_ShowCandidateList	video/windows/SDL_windowskeyboard.c	/^IME_ShowCandidateList(SDL_VideoData *videodata)$/;"	f	file:
IME_UpdateInputLocale	video/windows/SDL_windowskeyboard.c	/^IME_UpdateInputLocale(SDL_VideoData *videodata)$/;"	f	file:
INITGUID	audio/xaudio2/SDL_xaudio2.c	45;"	d	file:
INITGUID	joystick/windows/SDL_dxjoystick.c	57;"	d	file:
INITIAL_LOCK	stdlib/SDL_malloc.c	1470;"	d	file:
INITIAL_LOCK	stdlib/SDL_malloc.c	1508;"	d	file:
INITIAL_LOCK	stdlib/SDL_malloc.c	1520;"	d	file:
INPUTCONTEXT2	video/windows/SDL_windowsvideo.h	/^} INPUTCONTEXT2, *PINPUTCONTEXT2, NEAR *NPINPUTCONTEXT2, FAR *LPINPUTCONTEXT2;$/;"	t	typeref:struct:tagINPUTCONTEXT2
INPUT_QSIZE	joystick/windows/SDL_dxjoystick.c	81;"	d	file:
INSECURE	stdlib/SDL_malloc.c	564;"	d	file:
INSERT_WORDS	libm/math_private.h	120;"	d
INTERFACE	render/direct3d/SDL_render_d3d.c	143;"	d	file:
INTERFACE	render/direct3d/SDL_render_d3d.c	144;"	d	file:
INTERFACE	render/direct3d/SDL_render_d3d.c	47;"	d	file:
INTERFACE	render/direct3d/SDL_render_d3d.c	48;"	d	file:
INTERFACE	render/direct3d/SDL_render_d3d.c	72;"	d	file:
INUSE_BITS	stdlib/SDL_malloc.c	1742;"	d	file:
INVALID_PTHREAD_KEY	thread/pthread/SDL_systls.c	28;"	d	file:
INVALID_SET_FILE_POINTER	file/SDL_rwops.c	48;"	d	file:
INVALID_XINPUT_USERID	joystick/windows/SDL_dxjoystick_c.h	97;"	d
IO_OBJECT_NULL	haptic/darwin/SDL_syshaptic.c	38;"	d	file:
IPHONE_TOUCH_EFFICIENT_DANGEROUS	video/uikit/SDL_uikitview.h	27;"	d
IPPASink_OnActivated	video/windows/SDL_windowskeyboard.c	/^STDMETHODIMP IPPASink_OnActivated(TSFSink *sink, DWORD dwProfileType, LANGID langid, REFCLSID clsid, REFGUID catid, REFGUID guidProfile, HKL hkl, DWORD dwFlags)$/;"	f
IPPASink_QueryInterface	video/windows/SDL_windowskeyboard.c	/^STDMETHODIMP IPPASink_QueryInterface(TSFSink *sink, REFIID riid, PVOID *ppv)$/;"	f
IRKBD_CONFIG_FILE	video/psp/SDL_pspevents.c	39;"	d	file:
ISOPAQUE	video/SDL_RLEaccel.c	1007;"	d	file:
ISTRANSL	video/SDL_RLEaccel.c	1009;"	d	file:
IS_MMAPPED_BIT	stdlib/SDL_malloc.c	1350;"	d	file:
IS_MMAPPED_BIT	stdlib/SDL_malloc.c	1357;"	d	file:
ITfCandidateListUIElement	video/windows/SDL_msctf.h	/^struct ITfCandidateListUIElement$/;"	s
ITfCandidateListUIElement	video/windows/SDL_msctf.h	/^typedef struct ITfCandidateListUIElement ITfCandidateListUIElement;$/;"	t	typeref:struct:ITfCandidateListUIElement
ITfCandidateListUIElementVtbl	video/windows/SDL_msctf.h	/^typedef struct ITfCandidateListUIElementVtbl$/;"	s
ITfCandidateListUIElementVtbl	video/windows/SDL_msctf.h	/^} ITfCandidateListUIElementVtbl;$/;"	t	typeref:struct:ITfCandidateListUIElementVtbl
ITfClientId	video/windows/SDL_msctf.h	/^typedef struct ITfClientId ITfClientId;$/;"	t	typeref:struct:ITfClientId
ITfCompartmentMgr	video/windows/SDL_msctf.h	/^typedef struct ITfCompartmentMgr ITfCompartmentMgr;$/;"	t	typeref:struct:ITfCompartmentMgr
ITfContext	video/windows/SDL_msctf.h	/^typedef struct ITfContext ITfContext;$/;"	t	typeref:struct:ITfContext
ITfDocumentMgr	video/windows/SDL_msctf.h	/^struct ITfDocumentMgr$/;"	s
ITfDocumentMgr	video/windows/SDL_msctf.h	/^typedef struct ITfDocumentMgr ITfDocumentMgr;$/;"	t	typeref:struct:ITfDocumentMgr
ITfDocumentMgrVtbl	video/windows/SDL_msctf.h	/^typedef struct ITfDocumentMgrVtbl$/;"	s
ITfDocumentMgrVtbl	video/windows/SDL_msctf.h	/^} ITfDocumentMgrVtbl;$/;"	t	typeref:struct:ITfDocumentMgrVtbl
ITfFunctionProvider	video/windows/SDL_msctf.h	/^typedef struct ITfFunctionProvider ITfFunctionProvider;$/;"	t	typeref:struct:ITfFunctionProvider
ITfInputProcessorProfileActivationSink	video/windows/SDL_msctf.h	/^struct ITfInputProcessorProfileActivationSink$/;"	s
ITfInputProcessorProfileActivationSink	video/windows/SDL_msctf.h	/^typedef struct ITfInputProcessorProfileActivationSink ITfInputProcessorProfileActivationSink;$/;"	t	typeref:struct:ITfInputProcessorProfileActivationSink
ITfInputProcessorProfileActivationSinkVtbl	video/windows/SDL_msctf.h	/^typedef struct ITfInputProcessorProfileActivationSinkVtbl$/;"	s
ITfInputProcessorProfileActivationSinkVtbl	video/windows/SDL_msctf.h	/^} ITfInputProcessorProfileActivationSinkVtbl;$/;"	t	typeref:struct:ITfInputProcessorProfileActivationSinkVtbl
ITfReadingInformationUIElement	video/windows/SDL_msctf.h	/^struct ITfReadingInformationUIElement$/;"	s
ITfReadingInformationUIElement	video/windows/SDL_msctf.h	/^typedef struct ITfReadingInformationUIElement ITfReadingInformationUIElement;$/;"	t	typeref:struct:ITfReadingInformationUIElement
ITfReadingInformationUIElementVtbl	video/windows/SDL_msctf.h	/^typedef struct ITfReadingInformationUIElementVtbl$/;"	s
ITfReadingInformationUIElementVtbl	video/windows/SDL_msctf.h	/^} ITfReadingInformationUIElementVtbl;$/;"	t	typeref:struct:ITfReadingInformationUIElementVtbl
ITfSource	video/windows/SDL_msctf.h	/^struct ITfSource$/;"	s
ITfSource	video/windows/SDL_msctf.h	/^typedef struct ITfSource ITfSource;$/;"	t	typeref:struct:ITfSource
ITfSourceVtbl	video/windows/SDL_msctf.h	/^typedef struct ITfSourceVtbl$/;"	s
ITfSourceVtbl	video/windows/SDL_msctf.h	/^} ITfSourceVtbl;$/;"	t	typeref:struct:ITfSourceVtbl
ITfThreadMgr	video/windows/SDL_msctf.h	/^struct ITfThreadMgr$/;"	s
ITfThreadMgr	video/windows/SDL_msctf.h	/^typedef struct ITfThreadMgr ITfThreadMgr;$/;"	t	typeref:struct:ITfThreadMgr
ITfThreadMgrEx	video/windows/SDL_msctf.h	/^struct ITfThreadMgrEx$/;"	s
ITfThreadMgrEx	video/windows/SDL_msctf.h	/^typedef struct ITfThreadMgrEx ITfThreadMgrEx;$/;"	t	typeref:struct:ITfThreadMgrEx
ITfThreadMgrExVtbl	video/windows/SDL_msctf.h	/^typedef struct ITfThreadMgrExVtbl$/;"	s
ITfThreadMgrExVtbl	video/windows/SDL_msctf.h	/^} ITfThreadMgrExVtbl;$/;"	t	typeref:struct:ITfThreadMgrExVtbl
ITfThreadMgrVtbl	video/windows/SDL_msctf.h	/^typedef struct ITfThreadMgrVtbl$/;"	s
ITfThreadMgrVtbl	video/windows/SDL_msctf.h	/^} ITfThreadMgrVtbl;$/;"	t	typeref:struct:ITfThreadMgrVtbl
ITfUIElement	video/windows/SDL_msctf.h	/^struct ITfUIElement$/;"	s
ITfUIElement	video/windows/SDL_msctf.h	/^typedef struct ITfUIElement ITfUIElement;$/;"	t	typeref:struct:ITfUIElement
ITfUIElementMgr	video/windows/SDL_msctf.h	/^struct ITfUIElementMgr$/;"	s
ITfUIElementMgr	video/windows/SDL_msctf.h	/^typedef struct ITfUIElementMgr ITfUIElementMgr;$/;"	t	typeref:struct:ITfUIElementMgr
ITfUIElementMgrVtbl	video/windows/SDL_msctf.h	/^typedef struct ITfUIElementMgrVtbl$/;"	s
ITfUIElementMgrVtbl	video/windows/SDL_msctf.h	/^} ITfUIElementMgrVtbl;$/;"	t	typeref:struct:ITfUIElementMgrVtbl
ITfUIElementSink	video/windows/SDL_msctf.h	/^struct ITfUIElementSink$/;"	s
ITfUIElementSink	video/windows/SDL_msctf.h	/^typedef struct ITfUIElementSink ITfUIElementSink;$/;"	t	typeref:struct:ITfUIElementSink
ITfUIElementSinkVtbl	video/windows/SDL_msctf.h	/^typedef struct ITfUIElementSinkVtbl$/;"	s
ITfUIElementSinkVtbl	video/windows/SDL_msctf.h	/^} ITfUIElementSinkVtbl;$/;"	t	typeref:struct:ITfUIElementSinkVtbl
ITfUIElementVtbl	video/windows/SDL_msctf.h	/^typedef struct ITfUIElementVtbl$/;"	s
ITfUIElementVtbl	video/windows/SDL_msctf.h	/^} ITfUIElementVtbl;$/;"	t	typeref:struct:ITfUIElementVtbl
IWbemLocator	joystick/windows/SDL_dxjoystick.c	/^struct IWbemLocator {$/;"	s	file:
IWbemLocatorVtbl	joystick/windows/SDL_dxjoystick.c	/^typedef struct IWbemLocatorVtbl {$/;"	s	file:
IWbemLocatorVtbl	joystick/windows/SDL_dxjoystick.c	/^} IWbemLocatorVtbl;$/;"	t	typeref:struct:IWbemLocatorVtbl	file:
IWbemLocator_ConnectServer	joystick/windows/SDL_dxjoystick.c	73;"	d	file:
ImmLockIMC	video/windows/SDL_windowsvideo.h	/^    LPINPUTCONTEXT2 (WINAPI *ImmLockIMC)(HIMC himc);$/;"	m	struct:SDL_VideoData
ImmLockIMCC	video/windows/SDL_windowsvideo.h	/^    LPVOID (WINAPI *ImmLockIMCC)(HIMCC himcc);$/;"	m	struct:SDL_VideoData
ImmUnlockIMC	video/windows/SDL_windowsvideo.h	/^    BOOL (WINAPI *ImmUnlockIMC)(HIMC himc);$/;"	m	struct:SDL_VideoData
ImmUnlockIMCC	video/windows/SDL_windowsvideo.h	/^    BOOL (WINAPI *ImmUnlockIMCC)(HIMCC himcc);$/;"	m	struct:SDL_VideoData
InitIMA_ADPCM	audio/SDL_wave.c	/^InitIMA_ADPCM(WaveFMT * format)$/;"	f	file:
InitMS_ADPCM	audio/SDL_wave.c	/^InitMS_ADPCM(WaveFMT * format)$/;"	f	file:
InputDevice	joystick/windows/SDL_dxjoystick_c.h	/^    LPDIRECTINPUTDEVICE8 InputDevice;$/;"	m	struct:joystick_hwdata
Inputs	joystick/windows/SDL_dxjoystick_c.h	/^    input_t Inputs[MAX_INPUTS];$/;"	m	struct:joystick_hwdata
Insertion	stdlib/SDL_qsort.c	259;"	d	file:
IntMax	video/x11/SDL_x11messagebox.c	/^IntMax( int a, int b )$/;"	f	file:
Interface	video/x11/edid.h	/^} Interface;$/;"	t	typeref:enum:__anon9
Internal_Android_JNI_FileClose	core/android/SDL_android.c	/^static int Internal_Android_JNI_FileClose(SDL_RWops* ctx, bool release)$/;"	f	file:
Internal_Android_JNI_FileOpen	core/android/SDL_android.c	/^static int Internal_Android_JNI_FileOpen(SDL_RWops* ctx)$/;"	f	file:
IsJoystick	joystick/linux/SDL_sysjoystick.c	/^IsJoystick(int fd, char *namebuf, const size_t namebuflen, SDL_JoystickGUID *guid)$/;"	f	file:
IsScreenKeyboardShown	video/SDL_sysvideo.h	/^    SDL_bool (*IsScreenKeyboardShown) (_THIS, SDL_Window *window);$/;"	m	struct:SDL_VideoDevice
IsShown	video/bwindow/SDL_BWin.h	/^    bool IsShown() { return _shown; }$/;"	f	class:SDL_BWin
IsShown	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *IsShown)(ITfCandidateListUIElement *, BOOL *);$/;"	m	struct:ITfCandidateListUIElementVtbl
IsShown	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *IsShown)(ITfReadingInformationUIElement *, BOOL *);$/;"	m	struct:ITfReadingInformationUIElementVtbl
IsShown	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *IsShown)(ITfUIElement *, BOOL *);$/;"	m	struct:ITfUIElementVtbl
IsSupportedFormat	render/SDL_render.c	/^IsSupportedFormat(SDL_Renderer * renderer, Uint32 format)$/;"	f	file:
IsThreadFocus	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *IsThreadFocus)(ITfThreadMgr *, BOOL *);$/;"	m	struct:ITfThreadMgrVtbl
IsThreadFocus	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *IsThreadFocus)(ITfThreadMgrEx *, BOOL *);$/;"	m	struct:ITfThreadMgrExVtbl
IsVerticalOrderPreferred	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *IsVerticalOrderPreferred)(ITfReadingInformationUIElement *, BOOL *);$/;"	m	struct:ITfReadingInformationUIElementVtbl
IsXInputDevice	joystick/windows/SDL_dxjoystick.c	/^BOOL IsXInputDevice( const GUID* pGuidProductFromDirectInput )$/;"	f
JNI_OnLoad	core/android/SDL_android.c	/^jint JNI_OnLoad(JavaVM* vm, void* reserved)$/;"	f
JOYAXE_RX	joystick/bsd/SDL_sysjoystick.c	/^    JOYAXE_RX,$/;"	e	enum:__anon70	file:
JOYAXE_RY	joystick/bsd/SDL_sysjoystick.c	/^    JOYAXE_RY,$/;"	e	enum:__anon70	file:
JOYAXE_RZ	joystick/bsd/SDL_sysjoystick.c	/^    JOYAXE_RZ,$/;"	e	enum:__anon70	file:
JOYAXE_SLIDER	joystick/bsd/SDL_sysjoystick.c	/^    JOYAXE_SLIDER,$/;"	e	enum:__anon70	file:
JOYAXE_WHEEL	joystick/bsd/SDL_sysjoystick.c	/^    JOYAXE_WHEEL,$/;"	e	enum:__anon70	file:
JOYAXE_X	joystick/bsd/SDL_sysjoystick.c	/^    JOYAXE_X,$/;"	e	enum:__anon70	file:
JOYAXE_Y	joystick/bsd/SDL_sysjoystick.c	/^    JOYAXE_Y,$/;"	e	enum:__anon70	file:
JOYAXE_Z	joystick/bsd/SDL_sysjoystick.c	/^    JOYAXE_Z,$/;"	e	enum:__anon70	file:
JOYAXE_count	joystick/bsd/SDL_sysjoystick.c	/^    JOYAXE_count$/;"	e	enum:__anon70	file:
JOY_AXIS_THRESHOLD	joystick/windows/SDL_dxjoystick.c	85;"	d	file:
JOY_AXIS_THRESHOLD	joystick/windows/SDL_mmjoystick.c	42;"	d	file:
JOY_BUTTON_FLAG	joystick/windows/SDL_mmjoystick.c	43;"	d	file:
Java_org_libsdl_app_SDLActivity_nativeInit	main/android/SDL_android_main.c	/^void Java_org_libsdl_app_SDLActivity_nativeInit(JNIEnv* env, jclass cls, jobject obj)$/;"	f
Java_org_libsdl_app_SDLActivity_nativeLowMemory	core/android/SDL_android.c	/^void Java_org_libsdl_app_SDLActivity_nativeLowMemory($/;"	f
Java_org_libsdl_app_SDLActivity_nativePause	core/android/SDL_android.c	/^void Java_org_libsdl_app_SDLActivity_nativePause($/;"	f
Java_org_libsdl_app_SDLActivity_nativeQuit	core/android/SDL_android.c	/^void Java_org_libsdl_app_SDLActivity_nativeQuit($/;"	f
Java_org_libsdl_app_SDLActivity_nativeResume	core/android/SDL_android.c	/^void Java_org_libsdl_app_SDLActivity_nativeResume($/;"	f
Java_org_libsdl_app_SDLActivity_onNativeAccel	core/android/SDL_android.c	/^void Java_org_libsdl_app_SDLActivity_onNativeAccel($/;"	f
Java_org_libsdl_app_SDLActivity_onNativeKeyDown	core/android/SDL_android.c	/^void Java_org_libsdl_app_SDLActivity_onNativeKeyDown($/;"	f
Java_org_libsdl_app_SDLActivity_onNativeKeyUp	core/android/SDL_android.c	/^void Java_org_libsdl_app_SDLActivity_onNativeKeyUp($/;"	f
Java_org_libsdl_app_SDLActivity_onNativeKeyboardFocusLost	core/android/SDL_android.c	/^void Java_org_libsdl_app_SDLActivity_onNativeKeyboardFocusLost($/;"	f
Java_org_libsdl_app_SDLActivity_onNativeResize	core/android/SDL_android.c	/^void Java_org_libsdl_app_SDLActivity_onNativeResize($/;"	f
Java_org_libsdl_app_SDLActivity_onNativeTouch	core/android/SDL_android.c	/^void Java_org_libsdl_app_SDLActivity_onNativeTouch($/;"	f
Java_org_libsdl_app_SDLInputConnection_nativeCommitText	core/android/SDL_android.c	/^void Java_org_libsdl_app_SDLInputConnection_nativeCommitText($/;"	f
Java_org_libsdl_app_SDLInputConnection_nativeSetComposingText	core/android/SDL_android.c	/^void Java_org_libsdl_app_SDLInputConnection_nativeSetComposingText($/;"	f
JoyStick_DeviceData	joystick/windows/SDL_dxjoystick.c	/^typedef struct JoyStick_DeviceData_ JoyStick_DeviceData;$/;"	t	typeref:struct:JoyStick_DeviceData_	file:
JoyStick_DeviceData_	joystick/windows/SDL_dxjoystick.c	/^struct JoyStick_DeviceData_$/;"	s	file:
JoystickByDevIndex	joystick/linux/SDL_sysjoystick.c	/^JoystickByDevIndex(int device_index)$/;"	f	file:
JoystickDeviceWasAddedCallback	joystick/darwin/SDL_sysjoystick.c	/^void JoystickDeviceWasAddedCallback( void *refcon, io_iterator_t iterator )$/;"	f
JoystickDeviceWasRemovedCallback	joystick/darwin/SDL_sysjoystick.c	/^void JoystickDeviceWasRemovedCallback( void * refcon, io_service_t service, natural_t messageType, void * messageArgument )$/;"	f
JoystickInitWithUdev	joystick/linux/SDL_sysjoystick.c	/^JoystickInitWithUdev(void)$/;"	f	file:
JoystickInitWithoutUdev	joystick/linux/SDL_sysjoystick.c	/^JoystickInitWithoutUdev(void)$/;"	f	file:
JoystickUpdate	joystick/psp/SDL_sysjoystick.c	/^int JoystickUpdate(void *data)$/;"	f
KEYMAP_SIZE	video/bwindow/SDL_bkeyboard.cc	38;"	d	file:
KbdIndex	video/directfb/SDL_DirectFB_events.c	/^KbdIndex(_THIS, int id)$/;"	f	file:
KeyRepeatCheckData	video/x11/SDL_x11events.c	/^struct KeyRepeatCheckData$/;"	s	file:
KeySymToSDLScancode	video/x11/SDL_x11keyboard.c	/^} KeySymToSDLScancode[] = {$/;"	v	typeref:struct:__anon22	file:
L1	libm/e_pow.c	/^         L1 = 5.99999999999994648725e-01,       \/* 0x3FE33333, 0x33333303 *\/$/;"	v	file:
L2	libm/e_pow.c	/^         L2 = 4.28571428578550184252e-01,       \/* 0x3FDB6DB6, 0xDB6FABFF *\/$/;"	v	file:
L3	libm/e_pow.c	/^         L3 = 3.33333329818377432918e-01,       \/* 0x3FD55555, 0x518F264D *\/$/;"	v	file:
L4	libm/e_pow.c	/^         L4 = 2.72728123808534006489e-01,       \/* 0x3FD17460, 0xA91D4101 *\/$/;"	v	file:
L5	libm/e_pow.c	/^         L5 = 2.30660745775561754067e-01,       \/* 0x3FCD864A, 0x93C9DB65 *\/$/;"	v	file:
L6	libm/e_pow.c	/^         L6 = 2.06975017800338417784e-01,       \/* 0x3FCA7E28, 0x4A454EEF *\/$/;"	v	file:
LACKS_ERRNO_H	stdlib/SDL_malloc.c	514;"	d	file:
LACKS_FCNTL_H	stdlib/SDL_malloc.c	515;"	d	file:
LACKS_STDIO_H	stdlib/SDL_malloc.c	52;"	d	file:
LACKS_STDLIB_H	stdlib/SDL_malloc.c	55;"	d	file:
LACKS_STRINGS_H	stdlib/SDL_malloc.c	512;"	d	file:
LACKS_STRINGS_H	stdlib/SDL_malloc.c	53;"	d	file:
LACKS_STRING_H	stdlib/SDL_malloc.c	511;"	d	file:
LACKS_STRING_H	stdlib/SDL_malloc.c	54;"	d	file:
LACKS_SYS_MMAN_H	stdlib/SDL_malloc.c	510;"	d	file:
LACKS_SYS_PARAM_H	stdlib/SDL_malloc.c	509;"	d	file:
LACKS_SYS_TYPES_H	stdlib/SDL_malloc.c	513;"	d	file:
LACKS_SYS_TYPES_H	stdlib/SDL_malloc.c	51;"	d	file:
LACKS_UNISTD_H	stdlib/SDL_malloc.c	508;"	d	file:
LANG	video/windows/SDL_windowskeyboard.c	260;"	d	file:
LANG_CHS	video/windows/SDL_windowskeyboard.c	230;"	d	file:
LANG_CHT	video/windows/SDL_windowskeyboard.c	229;"	d	file:
LCID_INVARIANT	video/windows/SDL_windowskeyboard.c	535;"	d	file:
LCID_INVARIANT	video/windows/SDL_windowskeyboard.c	544;"	d	file:
LESS_RESAMPLERS	audio/SDL_audiotypecvt.c	36;"	d	file:
LIST	audio/SDL_wave.h	31;"	d
LO	video/SDL_blit_1.c	75;"	d	file:
LO	video/SDL_blit_1.c	78;"	d	file:
LO	video/SDL_blit_N.c	880;"	d	file:
LO	video/SDL_blit_N.c	883;"	d	file:
LOAD_BYTE	video/SDL_stretch.c	60;"	d	file:
LOAD_FUNC	video/x11/SDL_x11opengles.c	34;"	d	file:
LOAD_WORD	video/SDL_stretch.c	61;"	d	file:
LOGE	core/android/SDL_android.c	45;"	d	file:
LOGI	core/android/SDL_android.c	44;"	d	file:
LOG_TAG	core/android/SDL_android.c	41;"	d	file:
LPD3DXBUFFER	render/direct3d/SDL_render_d3d.c	/^typedef interface ID3DXBuffer *LPD3DXBUFFER;$/;"	t	file:
LPD3DXMATRIX	render/direct3d/SDL_render_d3d.c	/^typedef struct _D3DMATRIX D3DXMATRIX, *LPD3DXMATRIX;$/;"	t	typeref:struct:	file:
LPD3DXMATRIXSTACK	render/direct3d/SDL_render_d3d.c	/^typedef interface ID3DXMatrixStack *LPD3DXMATRIXSTACK;$/;"	t	file:
LPD3DXVECTOR3	render/direct3d/SDL_render_d3d.c	/^typedef struct _D3DVECTOR D3DXVECTOR3, *LPD3DXVECTOR3;$/;"	t	typeref:struct:	file:
LPINPUTCONTEXT2	video/windows/SDL_windowsvideo.h	/^} INPUTCONTEXT2, *PINPUTCONTEXT2, NEAR *NPINPUTCONTEXT2, FAR *LPINPUTCONTEXT2;$/;"	t	typeref:struct:tagINPUTCONTEXT2
Lg1	libm/e_log.c	/^    Lg1 = 6.666666666666735130e-01,     \/* 3FE55555 55555593 *\/$/;"	v	file:
Lg2	libm/e_log.c	/^    Lg2 = 3.999999999940941908e-01,     \/* 3FD99999 9997FA04 *\/$/;"	v	file:
Lg3	libm/e_log.c	/^    Lg3 = 2.857142874366239149e-01,     \/* 3FD24924 94229359 *\/$/;"	v	file:
Lg4	libm/e_log.c	/^    Lg4 = 2.222219843214978396e-01,     \/* 3FCC71C5 1D8E78AF *\/$/;"	v	file:
Lg5	libm/e_log.c	/^    Lg5 = 1.818357216161805012e-01,     \/* 3FC74664 96CB03DE *\/$/;"	v	file:
Lg6	libm/e_log.c	/^    Lg6 = 1.531383769920937332e-01,     \/* 3FC39A09 D078C69F *\/$/;"	v	file:
Lg7	libm/e_log.c	/^    Lg7 = 1.479819860511658591e-01;     \/* 3FC2F112 DF3E5244 *\/$/;"	v	file:
LoadALSALibrary	audio/alsa/SDL_alsa_audio.c	/^LoadALSALibrary(void)$/;"	f	file:
LoadARTSLibrary	audio/arts/SDL_artsaudio.c	/^LoadARTSLibrary(void)$/;"	f	file:
LoadDBUSLibrary	video/x11/SDL_x11video.c	/^LoadDBUSLibrary(void)$/;"	f	file:
LoadESDLibrary	audio/esd/SDL_esdaudio.c	/^LoadESDLibrary(void)$/;"	f	file:
LoadFont	video/directfb/SDL_DirectFB_WM.c	/^LoadFont(_THIS, SDL_Window * window)$/;"	f	file:
LoadFusionSoundLibrary	audio/fusionsound/SDL_fsaudio.c	/^LoadFusionSoundLibrary(void)$/;"	f	file:
LoadNASLibrary	audio/nas/SDL_nasaudio.c	/^LoadNASLibrary(void)$/;"	f	file:
LoadPulseAudioLibrary	audio/pulseaudio/SDL_pulseaudio.c	/^LoadPulseAudioLibrary(void)$/;"	f	file:
LoadSNDIOLibrary	audio/sndio/SDL_sndioaudio.c	/^LoadSNDIOLibrary(void)$/;"	f	file:
LoadUDEVLibrary	joystick/linux/SDL_sysjoystick.c	/^LoadUDEVLibrary(void)$/;"	f	file:
LocalReferenceHolder	core/android/SDL_android.c	/^struct LocalReferenceHolder$/;"	s	file:
LocalReferenceHolder_Cleanup	core/android/SDL_android.c	/^static void LocalReferenceHolder_Cleanup(struct LocalReferenceHolder *refholder)$/;"	f	file:
LocalReferenceHolder_Init	core/android/SDL_android.c	/^static SDL_bool LocalReferenceHolder_Init(struct LocalReferenceHolder *refholder, JNIEnv *env)$/;"	f	file:
LocalReferenceHolder_IsActive	core/android/SDL_android.c	/^static SDL_bool LocalReferenceHolder_IsActive()$/;"	f	file:
LocalReferenceHolder_Setup	core/android/SDL_android.c	/^static struct LocalReferenceHolder LocalReferenceHolder_Setup(const char *func)$/;"	f	file:
LockBuffer	video/bwindow/SDL_BWin.h	/^    void LockBuffer() { _buffer_locker->Lock(); }$/;"	f	class:SDL_BWin
LockDevice	audio/SDL_sysaudio.h	/^    void (*LockDevice) (_THIS);$/;"	m	struct:SDL_AudioDriverImpl
LockTexture	render/SDL_sysrender.h	/^    int (*LockTexture) (SDL_Renderer * renderer, SDL_Texture * texture,$/;"	m	struct:SDL_Renderer
MACOSX_COREAUDIO	audio/coreaudio/SDL_coreaudio.h	29;"	d
MAKE8888	video/SDL_blit_N.c	80;"	d	file:
MAKEIMEVERSION	video/windows/SDL_windowskeyboard.c	232;"	d	file:
MAKE_HRESULT	audio/directsound/directx.h	21;"	d
MALLINFO_FIELD_TYPE	stdlib/SDL_malloc.c	630;"	d	file:
MALLOC_ALIGNMENT	stdlib/SDL_malloc.c	546;"	d	file:
MALLOC_FAILURE_ACTION	stdlib/SDL_malloc.c	516;"	d	file:
MALLOC_FAILURE_ACTION	stdlib/SDL_malloc.c	580;"	d	file:
MAPVK_VK_TO_CHAR	video/windows/SDL_windowskeyboard.c	47;"	d	file:
MAPVK_VK_TO_VSC	video/windows/SDL_windowskeyboard.c	41;"	d	file:
MAPVK_VSC_TO_VK	video/windows/SDL_windowskeyboard.c	44;"	d	file:
MAP_ANONYMOUS	stdlib/SDL_malloc.c	1364;"	d	file:
MASKOK	video/SDL_blit_N.c	2497;"	d	file:
MAX	render/software/SDL_rotate.c	65;"	d	file:
MAX	video/SDL_RLEaccel.c	94;"	d	file:
MAXPATHSIZE	events/SDL_gesture.c	40;"	d	file:
MAX_AXES	joystick/windows/SDL_mmjoystick.c	37;"	d	file:
MAX_AXIS	video/x11/SDL_x11xinput2.c	30;"	d	file:
MAX_BUTTONS	joystick/windows/SDL_mmjoystick.c	38;"	d	file:
MAX_BUTTONS	video/x11/SDL_x11messagebox.c	44;"	d	file:
MAX_CANDLENGTH	video/windows/SDL_windowsvideo.h	39;"	d
MAX_CANDLIST	video/windows/SDL_windowsvideo.h	38;"	d
MAX_HAPTICS	haptic/darwin/SDL_syshaptic.c	41;"	d	file:
MAX_HAPTICS	haptic/linux/SDL_syshaptic.c	45;"	d	file:
MAX_HAPTICS	haptic/windows/SDL_syshaptic.c	36;"	d	file:
MAX_INPUTS	joystick/windows/SDL_dxjoystick_c.h	105;"	d
MAX_JOYS	joystick/bsd/SDL_sysjoystick.c	81;"	d	file:
MAX_JOYSTICKS	joystick/beos/SDL_bejoystick.cc	39;"	d	file:
MAX_JOYSTICKS	joystick/windows/SDL_dxjoystick.c	82;"	d	file:
MAX_JOYSTICKS	joystick/windows/SDL_mmjoystick.c	36;"	d	file:
MAX_JOY_JOYS	joystick/bsd/SDL_sysjoystick.c	80;"	d	file:
MAX_REQUEST	stdlib/SDL_malloc.c	1718;"	d	file:
MAX_SIMULTANEOUS_TOUCHES	video/uikit/SDL_uikitview.h	30;"	d
MAX_SIZE_T	stdlib/SDL_malloc.c	533;"	d	file:
MAX_SMALL_REQUEST	stdlib/SDL_malloc.c	2057;"	d	file:
MAX_SMALL_SIZE	stdlib/SDL_malloc.c	2056;"	d	file:
MAX_TEXT_LINES	video/x11/SDL_x11messagebox.c	45;"	d	file:
MAX_UHID_JOYS	joystick/bsd/SDL_sysjoystick.c	79;"	d	file:
MAX_WMMSG	video/windows/wmmsg.h	2;"	d
MCHUNK_SIZE	stdlib/SDL_malloc.c	1694;"	d	file:
MD5PADDING	test/SDL_test_md5.c	/^static unsigned char MD5PADDING[64] = {$/;"	v	file:
MDDI	video/x11/edid.h	/^    MDDI,$/;"	e	enum:__anon9
MFAIL	stdlib/SDL_malloc.c	1346;"	d	file:
MIN	render/software/SDL_rotate.h	2;"	d
MIN	video/SDL_RLEaccel.c	97;"	d	file:
MIN_BUTTON_WIDTH	video/x11/SDL_x11messagebox.c	46;"	d	file:
MIN_CHUNK_SIZE	stdlib/SDL_malloc.c	1708;"	d	file:
MIN_DIALOG_HEIGHT	video/x11/SDL_x11messagebox.c	48;"	d	file:
MIN_DIALOG_WIDTH	video/x11/SDL_x11messagebox.c	47;"	d	file:
MIN_LARGE_SIZE	stdlib/SDL_malloc.c	2055;"	d	file:
MIN_REQUEST	stdlib/SDL_malloc.c	1719;"	d	file:
MIN_SMALL_INDEX	stdlib/SDL_malloc.c	2283;"	d	file:
MLOCK_T	stdlib/SDL_malloc.c	1469;"	d	file:
MLOCK_T	stdlib/SDL_malloc.c	1486;"	d	file:
MMAP_CHUNK_OVERHEAD	stdlib/SDL_malloc.c	1703;"	d	file:
MMAP_CLEARS	stdlib/SDL_malloc.c	517;"	d	file:
MMAP_CLEARS	stdlib/SDL_malloc.c	570;"	d	file:
MMAP_FLAGS	stdlib/SDL_malloc.c	1367;"	d	file:
MMAP_FLAGS	stdlib/SDL_malloc.c	1374;"	d	file:
MMAP_FOOT_PAD	stdlib/SDL_malloc.c	1705;"	d	file:
MMAP_PROT	stdlib/SDL_malloc.c	1362;"	d	file:
MMX_0080w	render/SDL_yuv_mmx.c	/^static mmx_t MMX_0080w    = { .ud = {0x00800080, 0x00800080} };$/;"	v	file:
MMX_00FFw	render/SDL_yuv_mmx.c	/^static mmx_t MMX_00FFw    = { .ud = {0x00ff00ff, 0x00ff00ff} };$/;"	v	file:
MMX_BEGIN	video/SDL_fillrect.c	132;"	d	file:
MMX_END	video/SDL_fillrect.c	148;"	d	file:
MMX_FF00w	render/SDL_yuv_mmx.c	/^static mmx_t MMX_FF00w    = { .ud = {0xff00ff00, 0xff00ff00} };$/;"	v	file:
MMX_Ublu5x5	render/SDL_yuv_mmx.c	/^static mmx_t MMX_Ublu5x5  = { .uw = {0x0081, 0x0081, 0x0081, 0x0081} };$/;"	v	file:
MMX_UbluRGB	render/SDL_yuv_mmx.c	/^static mmx_t MMX_UbluRGB  = { .uw = {0x0072, 0x0072, 0x0072, 0x0072} };$/;"	v	file:
MMX_Ugrn565	render/SDL_yuv_mmx.c	/^static mmx_t MMX_Ugrn565  = { .uw = {0xffe8, 0xffe8, 0xffe8, 0xffe8} };$/;"	v	file:
MMX_UgrnRGB	render/SDL_yuv_mmx.c	/^static mmx_t MMX_UgrnRGB  = { .uw = {0xffea, 0xffea, 0xffea, 0xffea} };$/;"	v	file:
MMX_Vgrn565	render/SDL_yuv_mmx.c	/^static mmx_t MMX_Vgrn565  = { .uw = {0xffcd, 0xffcd, 0xffcd, 0xffcd} };$/;"	v	file:
MMX_VgrnRGB	render/SDL_yuv_mmx.c	/^static mmx_t MMX_VgrnRGB  = { .uw = {0xffd2, 0xffd2, 0xffd2, 0xffd2} };$/;"	v	file:
MMX_Vred5x5	render/SDL_yuv_mmx.c	/^static mmx_t MMX_Vred5x5  = { .uw = {0x0066, 0x0066, 0x0066, 0x0066} };$/;"	v	file:
MMX_VredRGB	render/SDL_yuv_mmx.c	/^static mmx_t MMX_VredRGB  = { .uw = {0x0059, 0x0059, 0x0059, 0x0059} };$/;"	v	file:
MMX_WORK	video/SDL_fillrect.c	135;"	d	file:
MMX_Ycoeff	render/SDL_yuv_mmx.c	/^static mmx_t MMX_Ycoeff   = { .uw = {0x004a, 0x004a, 0x004a, 0x004a} };$/;"	v	file:
MMX_grn565	render/SDL_yuv_mmx.c	/^static mmx_t MMX_grn565   = { .uw = {0x07e0, 0x07e0, 0x07e0, 0x07e0} };$/;"	v	file:
MMX_red565	render/SDL_yuv_mmx.c	/^static mmx_t MMX_red565   = { .uw = {0xf800, 0xf800, 0xf800, 0xf800} };$/;"	v	file:
MONOCHROME	video/x11/edid.h	/^    MONOCHROME,$/;"	e	enum:__anon10
MORECORE	stdlib/SDL_malloc.c	593;"	d	file:
MORECORE_CONTIGUOUS	stdlib/SDL_malloc.c	590;"	d	file:
MORECORE_CONTIGUOUS	stdlib/SDL_malloc.c	596;"	d	file:
MP3_CODE	audio/SDL_wave.h	38;"	d
MSPACES	stdlib/SDL_malloc.c	540;"	d	file:
MSPACES	stdlib/SDL_malloc.c	542;"	d	file:
MS_ADPCM_CODE	audio/SDL_wave.h	35;"	d
MS_ADPCM_decode	audio/SDL_wave.c	/^MS_ADPCM_decode(Uint8 ** audio_buf, Uint32 * audio_len)$/;"	f	file:
MS_ADPCM_decoder	audio/SDL_wave.c	/^static struct MS_ADPCM_decoder$/;"	s	file:
MS_ADPCM_decodestate	audio/SDL_wave.c	/^struct MS_ADPCM_decodestate$/;"	s	file:
MS_ADPCM_nibble	audio/SDL_wave.c	/^MS_ADPCM_nibble(struct MS_ADPCM_decodestate *state,$/;"	f	file:
MS_ADPCM_state	audio/SDL_wave.c	/^} MS_ADPCM_state;$/;"	v	typeref:struct:MS_ADPCM_decoder	file:
MUST_THREAD_EVENTS	events/SDL_sysevents.h	29;"	d
M_GRANULARITY	stdlib/SDL_malloc.c	648;"	d	file:
M_MMAP_THRESHOLD	stdlib/SDL_malloc.c	649;"	d	file:
M_PI	haptic/linux/SDL_syshaptic.c	41;"	d	file:
M_TRIM_THRESHOLD	stdlib/SDL_malloc.c	647;"	d	file:
Map1to1	video/SDL_pixels.c	/^Map1to1(SDL_Palette * src, SDL_Palette * dst, int *identical)$/;"	f	file:
Map1toN	video/SDL_pixels.c	/^Map1toN(SDL_PixelFormat * src, Uint8 Rmod, Uint8 Gmod, Uint8 Bmod, Uint8 Amod,$/;"	f	file:
MapNto1	video/SDL_pixels.c	/^MapNto1(SDL_PixelFormat * src, SDL_PixelFormat * dst, int *identical)$/;"	f	file:
MathAbs	render/psp/SDL_render_psp.c	/^float MathAbs(float x)$/;"	f
MathSincos	render/psp/SDL_render_psp.c	/^void MathSincos(float r, float *s, float *c)$/;"	f
MaximizeWindow	video/SDL_sysvideo.h	/^    void (*MaximizeWindow) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
MaybeAddDevice	joystick/linux/SDL_sysjoystick.c	/^MaybeAddDevice(const char *path)$/;"	f	file:
MaybeRemoveDevice	joystick/linux/SDL_sysjoystick.c	/^MaybeRemoveDevice(const char *path)$/;"	f	file:
MessageBoxDialogProc	video/windows/SDL_windowsmessagebox.c	/^static INT_PTR MessageBoxDialogProc(HWND hDlg, UINT iMessage, WPARAM wParam, LPARAM lParam)$/;"	f	file:
MessageReceived	main/beos/SDL_BApp.h	/^    virtual void MessageReceived(BMessage* message) {$/;"	f	class:SDL_BApp
MessageReceived	video/bwindow/SDL_BWin.h	/^    virtual void MessageReceived(BMessage* message) {$/;"	f	class:SDL_BWin
Minimize	video/bwindow/SDL_BWin.h	/^    virtual void Minimize(bool minimize) {$/;"	f	class:SDL_BWin
MinimizeWindow	video/SDL_sysvideo.h	/^    void (*MinimizeWindow) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
MonitorInfo	video/x11/edid.h	/^struct MonitorInfo$/;"	s
MonitorInfo	video/x11/edid.h	/^typedef struct MonitorInfo MonitorInfo;$/;"	t	typeref:struct:MonitorInfo
MotionAllMice	video/directfb/SDL_DirectFB_events.c	/^MotionAllMice(_THIS, int x, int y)$/;"	f	file:
MoveCursor	events/SDL_mouse_c.h	/^    void (*MoveCursor) (SDL_Cursor * cursor);$/;"	m	struct:__anon65
NAS_AuCloseServer	audio/nas/SDL_nasaudio.c	/^static void (*NAS_AuCloseServer) (AuServer *);$/;"	v	file:
NAS_AuCreateFlow	audio/nas/SDL_nasaudio.c	/^static AuFlowID(*NAS_AuCreateFlow) (AuServer *, AuStatus *);$/;"	v	file:
NAS_AuDispatchEvent	audio/nas/SDL_nasaudio.c	/^static AuBool(*NAS_AuDispatchEvent) (AuServer *, AuEvent *);$/;"	v	file:
NAS_AuNextEvent	audio/nas/SDL_nasaudio.c	/^static void (*NAS_AuNextEvent) (AuServer *, AuBool, AuEvent *);$/;"	v	file:
NAS_AuOpenServer	audio/nas/SDL_nasaudio.c	/^static AuServer *(*NAS_AuOpenServer)$/;"	v	file:
NAS_AuRegisterEventHandler	audio/nas/SDL_nasaudio.c	/^static AuEventHandlerRec *(*NAS_AuRegisterEventHandler)$/;"	v	file:
NAS_AuSetElements	audio/nas/SDL_nasaudio.c	/^static void (*NAS_AuSetElements)$/;"	v	file:
NAS_AuStartFlow	audio/nas/SDL_nasaudio.c	/^static void (*NAS_AuStartFlow) (AuServer *, AuFlowID, AuStatus *);$/;"	v	file:
NAS_AuWriteElement	audio/nas/SDL_nasaudio.c	/^static void (*NAS_AuWriteElement)$/;"	v	file:
NAS_CloseDevice	audio/nas/SDL_nasaudio.c	/^NAS_CloseDevice(_THIS)$/;"	f	file:
NAS_Deinitialize	audio/nas/SDL_nasaudio.c	/^NAS_Deinitialize(void)$/;"	f	file:
NAS_GetDeviceBuf	audio/nas/SDL_nasaudio.c	/^NAS_GetDeviceBuf(_THIS)$/;"	f	file:
NAS_Init	audio/nas/SDL_nasaudio.c	/^NAS_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
NAS_OpenDevice	audio/nas/SDL_nasaudio.c	/^NAS_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
NAS_PlayDevice	audio/nas/SDL_nasaudio.c	/^NAS_PlayDevice(_THIS)$/;"	f	file:
NAS_WaitDevice	audio/nas/SDL_nasaudio.c	/^NAS_WaitDevice(_THIS)$/;"	f	file:
NAS_bootstrap	audio/nas/SDL_nasaudio.c	/^AudioBootStrap NAS_bootstrap = {$/;"	v
NBITS	joystick/linux/SDL_sysjoystick.c	194;"	d	file:
NO_ALPHA	video/SDL_blit_N.c	/^    { NO_ALPHA = 1, SET_ALPHA = 2, COPY_ALPHA = 4 } alpha;$/;"	e	enum:blit_table::__anon35	file:
NO_CONVERTERS	audio/SDL_audiotypecvt.c	46;"	d	file:
NO_MALLINFO	stdlib/SDL_malloc.c	627;"	d	file:
NO_RESAMPLERS	audio/SDL_audiotypecvt.c	41;"	d	file:
NO_STEREO	video/x11/edid.h	/^    NO_STEREO,$/;"	e	enum:__anon11
NPINPUTCONTEXT2	video/windows/SDL_windowsvideo.h	/^} INPUTCONTEXT2, *PINPUTCONTEXT2, NEAR *NPINPUTCONTEXT2, FAR *LPINPUTCONTEXT2;$/;"	t	typeref:struct:tagINPUTCONTEXT2
NSMALLBINS	stdlib/SDL_malloc.c	2050;"	d	file:
NTREEBINS	stdlib/SDL_malloc.c	2051;"	d	file:
NUM_BUFFERS	audio/psp/SDL_pspaudio.h	30;"	d
NUM_BUFFERS	audio/winmm/SDL_winmm.h	31;"	d
NUM_FORMATS	audio/SDL_audio.c	1205;"	d	file:
NUM_SHADERS	render/opengl/SDL_shaders_gl.h	/^    NUM_SHADERS$/;"	e	enum:__anon93
NumInputs	joystick/windows/SDL_dxjoystick_c.h	/^    int NumInputs;$/;"	m	struct:joystick_hwdata
NumSliders	joystick/windows/SDL_dxjoystick_c.h	/^    int NumSliders;$/;"	m	struct:joystick_hwdata
ONE_PIXEL_BLEND	video/SDL_blit_N.c	191;"	d	file:
ONE_PIXEL_BLEND	video/SDL_blit_N.c	251;"	d	file:
ONE_PIXEL_BLEND	video/SDL_blit_N.c	340;"	d	file:
ONE_PIXEL_BLEND	video/SDL_blit_N.c	398;"	d	file:
ONE_PIXEL_BLEND	video/SDL_blit_N.c	487;"	d	file:
ONE_PIXEL_BLEND	video/SDL_blit_N.c	545;"	d	file:
ONE_PIXEL_BLEND	video/SDL_blit_N.c	600;"	d	file:
ONE_PIXEL_BLEND	video/SDL_blit_N.c	664;"	d	file:
ONLY_MSPACES	stdlib/SDL_malloc.c	536;"	d	file:
OPAQUE_BLIT	video/SDL_RLEaccel.c	107;"	d	file:
OPAQUE_BLIT	video/SDL_RLEaccel.c	548;"	d	file:
OPENGL_REQUIRES_DLOPEN	video/x11/SDL_x11opengl.c	118;"	d	file:
OPENGL_REQUIRS_DLOPEN	video/directfb/SDL_DirectFB_opengl.c	49;"	d	file:
OPEN_FLAGS	audio/paudio/SDL_paudio.c	52;"	d	file:
OPEN_FLAGS_INPUT	audio/SDL_audiodev_c.h	30;"	d
OPEN_FLAGS_INPUT	audio/SDL_audiodev_c.h	33;"	d
OPEN_FLAGS_OUTPUT	audio/SDL_audiodev_c.h	29;"	d
OPEN_FLAGS_OUTPUT	audio/SDL_audiodev_c.h	32;"	d
OTHER_COLOR	video/x11/edid.h	/^    OTHER_COLOR$/;"	e	enum:__anon10
OnActivated	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *OnActivated)(ITfInputProcessorProfileActivationSink *, DWORD, LANGID, REFCLSID, REFGUID, REFGUID, HKL, DWORD);$/;"	m	struct:ITfInputProcessorProfileActivationSinkVtbl
OnWindowEnter	video/SDL_sysvideo.h	/^    void (*OnWindowEnter) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
OnlyHasDefaultInputDevice	audio/SDL_sysaudio.h	/^    int OnlyHasDefaultInputDevice;$/;"	m	struct:SDL_AudioDriverImpl
OnlyHasDefaultOutputDevice	audio/SDL_sysaudio.h	/^    int OnlyHasDefaultOutputDevice;$/;"	m	struct:SDL_AudioDriverImpl
OpaqueShape	video/SDL_shape_internals.h	/^typedef enum { QuadShape,TransparentShape,OpaqueShape } SDL_ShapeKind;$/;"	e	enum:__anon33
OpenAudioPath	audio/paudio/SDL_paudio.c	/^OpenAudioPath(char *path, int maxlen, int flags, int classic)$/;"	f	file:
OpenDevice	audio/SDL_sysaudio.h	/^    int (*OpenDevice) (_THIS, const char *devname, int iscapture);$/;"	m	struct:SDL_AudioDriverImpl
OpenUserDefinedDevice	audio/paudio/SDL_paudio.c	/^OpenUserDefinedDevice(char *path, int maxlen, int flags)$/;"	f	file:
OutOfMemory	main/windows/SDL_windows_main.c	/^OutOfMemory(void)$/;"	f	file:
P1	libm/e_pow.c	/^         P1 = 1.66666666666666019037e-01,       \/* 0x3FC55555, 0x5555553E *\/$/;"	v	file:
P2	libm/e_pow.c	/^         P2 = -2.77777777770155933842e-03,      \/* 0xBF66C16C, 0x16BEBD93 *\/$/;"	v	file:
P3	libm/e_pow.c	/^         P3 = 6.61375632143793436117e-05,       \/* 0x3F11566A, 0xAF25DE2C *\/$/;"	v	file:
P4	libm/e_pow.c	/^         P4 = -1.65339022054652515390e-06,      \/* 0xBEBBBD41, 0xC5D26BF1 *\/$/;"	v	file:
P5	libm/e_pow.c	/^         P5 = 4.13813679705723846039e-08,       \/* 0x3E663769, 0x72BEA4D0 *\/$/;"	v	file:
PAGE_ALIGNED	video/SDL_stretch.c	/^static unsigned char copy_row[4096] PAGE_ALIGNED;$/;"	v	file:
PAGE_ALIGNED	video/SDL_stretch.c	51;"	d	file:
PAGE_ALIGNED	video/SDL_stretch.c	53;"	d	file:
PAUDIO_CloseDevice	audio/paudio/SDL_paudio.c	/^PAUDIO_CloseDevice(_THIS)$/;"	f	file:
PAUDIO_GetDeviceBuf	audio/paudio/SDL_paudio.c	/^PAUDIO_GetDeviceBuf(_THIS)$/;"	f	file:
PAUDIO_Init	audio/paudio/SDL_paudio.c	/^PAUDIO_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
PAUDIO_OpenDevice	audio/paudio/SDL_paudio.c	/^PAUDIO_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
PAUDIO_PlayDevice	audio/paudio/SDL_paudio.c	/^PAUDIO_PlayDevice(_THIS)$/;"	f	file:
PAUDIO_WaitDevice	audio/paudio/SDL_paudio.c	/^PAUDIO_WaitDevice(_THIS)$/;"	f	file:
PAUDIO_bootstrap	audio/paudio/SDL_paudio.c	/^AudioBootStrap PAUDIO_bootstrap = {$/;"	v
PA_CONTEXT_IS_GOOD	audio/pulseaudio/SDL_pulseaudio.c	/^static __inline__ int PA_CONTEXT_IS_GOOD(pa_context_state_t x) {$/;"	f	file:
PA_STREAM_IS_GOOD	audio/pulseaudio/SDL_pulseaudio.c	/^static __inline__ int PA_STREAM_IS_GOOD(pa_stream_state_t x) {$/;"	f	file:
PCM_CODE	audio/SDL_wave.h	34;"	d
PENDING_FOCUS_IN	video/x11/SDL_x11window.h	/^    PENDING_FOCUS_IN,$/;"	e	enum:__anon24
PENDING_FOCUS_IN_TIME	video/x11/SDL_x11window.h	30;"	d
PENDING_FOCUS_NONE	video/x11/SDL_x11window.h	/^    PENDING_FOCUS_NONE,$/;"	e	enum:__anon24
PENDING_FOCUS_OUT	video/x11/SDL_x11window.h	/^    PENDING_FOCUS_OUT$/;"	e	enum:__anon24
PENDING_FOCUS_OUT_TIME	video/x11/SDL_x11window.h	31;"	d
PFCoordTransform	video/windows/SDL_windowsvideo.h	/^typedef void  (*PFCoordTransform)(SDL_Window*, POINT*);$/;"	t
PFNGLXCREATECONTEXTATTRIBSARBPROC	video/x11/SDL_x11opengl.c	/^typedef GLXContext(*PFNGLXCREATECONTEXTATTRIBSARBPROC) (Display * dpy,$/;"	t	file:
PFNSHFullScreen	video/windows/SDL_windowsvideo.h	/^typedef BOOL  (*PFNSHFullScreen)(HWND, DWORD);$/;"	t
PFNWGLCREATECONTEXTATTRIBSARBPROC	video/windows/SDL_windowsopengl.c	/^typedef HGLRC(APIENTRYP PFNWGLCREATECONTEXTATTRIBSARBPROC) (HDC hDC,$/;"	t	file:
PHI	events/SDL_gesture.c	47;"	d	file:
PI	render/psp/SDL_render_psp.c	720;"	d	file:
PINPUTCONTEXT2	video/windows/SDL_windowsvideo.h	/^} INPUTCONTEXT2, *PINPUTCONTEXT2, NEAR *NPINPUTCONTEXT2, FAR *LPINPUTCONTEXT2;$/;"	t	typeref:struct:tagINPUTCONTEXT2
PINUSE_BIT	stdlib/SDL_malloc.c	1740;"	d	file:
PIVOT_THRESHOLD	stdlib/SDL_qsort.c	114;"	d	file:
PIXEL_COPY	video/SDL_RLEaccel.c	100;"	d	file:
PIXEL_FROM_RGB	video/SDL_blit.h	217;"	d
PIXEL_FROM_RGBA	video/SDL_blit.h	394;"	d
PIo2	libm/k_rem_pio2.c	/^static const double PIo2[] = {$/;"	v	file:
PND_PumpEvents	video/pandora/SDL_pandora_events.c	/^PND_PumpEvents(_THIS)$/;"	f
PND_available	video/pandora/SDL_pandora.c	/^PND_available(void)$/;"	f	file:
PND_bootstrap	video/pandora/SDL_pandora.c	/^VideoBootStrap PND_bootstrap = {$/;"	v
PND_create	video/pandora/SDL_pandora.c	/^PND_create()$/;"	f	file:
PND_createwindow	video/pandora/SDL_pandora.c	/^PND_createwindow(_THIS, SDL_Window * window)$/;"	f
PND_createwindowfrom	video/pandora/SDL_pandora.c	/^PND_createwindowfrom(_THIS, SDL_Window * window, const void *data)$/;"	f
PND_destroy	video/pandora/SDL_pandora.c	/^PND_destroy(SDL_VideoDevice * device)$/;"	f	file:
PND_destroywindow	video/pandora/SDL_pandora.c	/^PND_destroywindow(_THIS, SDL_Window * window)$/;"	f
PND_getdisplaymodes	video/pandora/SDL_pandora.c	/^PND_getdisplaymodes(_THIS, SDL_VideoDisplay * display)$/;"	f
PND_getwindowwminfo	video/pandora/SDL_pandora.c	/^PND_getwindowwminfo(_THIS, SDL_Window * window, struct SDL_SysWMinfo *info)$/;"	f
PND_gl_createcontext	video/pandora/SDL_pandora.c	/^PND_gl_createcontext(_THIS, SDL_Window * window)$/;"	f
PND_gl_deletecontext	video/pandora/SDL_pandora.c	/^PND_gl_deletecontext(_THIS, SDL_GLContext context)$/;"	f
PND_gl_getprocaddres	video/pandora/SDL_pandora.c	/^PND_gl_getprocaddres(_THIS, const char *proc)$/;"	f
PND_gl_getswapinterval	video/pandora/SDL_pandora.c	/^PND_gl_getswapinterval(_THIS)$/;"	f
PND_gl_loadlibrary	video/pandora/SDL_pandora.c	/^PND_gl_loadlibrary(_THIS, const char *path)$/;"	f
PND_gl_makecurrent	video/pandora/SDL_pandora.c	/^PND_gl_makecurrent(_THIS, SDL_Window * window, SDL_GLContext context)$/;"	f
PND_gl_setswapinterval	video/pandora/SDL_pandora.c	/^PND_gl_setswapinterval(_THIS, int interval)$/;"	f
PND_gl_swapwindow	video/pandora/SDL_pandora.c	/^PND_gl_swapwindow(_THIS, SDL_Window * window)$/;"	f
PND_gl_unloadlibrary	video/pandora/SDL_pandora.c	/^PND_gl_unloadlibrary(_THIS)$/;"	f
PND_hidewindow	video/pandora/SDL_pandora.c	/^PND_hidewindow(_THIS, SDL_Window * window)$/;"	f
PND_initialized	video/pandora/SDL_pandora.c	/^static SDL_bool PND_initialized = SDL_FALSE;$/;"	v	file:
PND_maximizewindow	video/pandora/SDL_pandora.c	/^PND_maximizewindow(_THIS, SDL_Window * window)$/;"	f
PND_minimizewindow	video/pandora/SDL_pandora.c	/^PND_minimizewindow(_THIS, SDL_Window * window)$/;"	f
PND_raisewindow	video/pandora/SDL_pandora.c	/^PND_raisewindow(_THIS, SDL_Window * window)$/;"	f
PND_restorewindow	video/pandora/SDL_pandora.c	/^PND_restorewindow(_THIS, SDL_Window * window)$/;"	f
PND_setdisplaymode	video/pandora/SDL_pandora.c	/^PND_setdisplaymode(_THIS, SDL_VideoDisplay * display, SDL_DisplayMode * mode)$/;"	f
PND_setwindowgrab	video/pandora/SDL_pandora.c	/^PND_setwindowgrab(_THIS, SDL_Window * window)$/;"	f
PND_setwindowicon	video/pandora/SDL_pandora.c	/^PND_setwindowicon(_THIS, SDL_Window * window, SDL_Surface * icon)$/;"	f
PND_setwindowposition	video/pandora/SDL_pandora.c	/^PND_setwindowposition(_THIS, SDL_Window * window)$/;"	f
PND_setwindowsize	video/pandora/SDL_pandora.c	/^PND_setwindowsize(_THIS, SDL_Window * window)$/;"	f
PND_setwindowtitle	video/pandora/SDL_pandora.c	/^PND_setwindowtitle(_THIS, SDL_Window * window)$/;"	f
PND_showwindow	video/pandora/SDL_pandora.c	/^PND_showwindow(_THIS, SDL_Window * window)$/;"	f
PND_videoinit	video/pandora/SDL_pandora.c	/^PND_videoinit(_THIS)$/;"	f
PND_videoquit	video/pandora/SDL_pandora.c	/^PND_videoquit(_THIS)$/;"	f
POSTACTION	stdlib/SDL_malloc.c	2201;"	d	file:
POSTACTION	stdlib/SDL_malloc.c	2209;"	d	file:
PREACTION	stdlib/SDL_malloc.c	2200;"	d	file:
PREACTION	stdlib/SDL_malloc.c	2205;"	d	file:
PREFIX16	video/SDL_stretch.c	57;"	d	file:
PRIMARY	video/x11/SDL_x11video.h	/^    Atom PRIMARY;$/;"	m	struct:SDL_VideoData
PRIMLANG	video/windows/SDL_windowskeyboard.c	261;"	d	file:
PROCEED_ON_ERROR	stdlib/SDL_malloc.c	558;"	d	file:
PSPAUD_CloseDevice	audio/psp/SDL_pspaudio.c	/^static void PSPAUD_CloseDevice(_THIS)$/;"	f	file:
PSPAUD_DRIVER_NAME	audio/psp/SDL_pspaudio.c	40;"	d	file:
PSPAUD_GetDeviceBuf	audio/psp/SDL_pspaudio.c	/^static Uint8 *PSPAUD_GetDeviceBuf(_THIS)$/;"	f	file:
PSPAUD_Init	audio/psp/SDL_pspaudio.c	/^PSPAUD_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
PSPAUD_OpenDevice	audio/psp/SDL_pspaudio.c	/^PSPAUD_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
PSPAUD_PlayDevice	audio/psp/SDL_pspaudio.c	/^static void PSPAUD_PlayDevice(_THIS)$/;"	f	file:
PSPAUD_ThreadInit	audio/psp/SDL_pspaudio.c	/^static void PSPAUD_ThreadInit(_THIS)$/;"	f	file:
PSPAUD_WaitDevice	audio/psp/SDL_pspaudio.c	/^static void PSPAUD_WaitDevice(_THIS)$/;"	f	file:
PSPAUD_bootstrap	audio/psp/SDL_pspaudio.c	/^AudioBootStrap PSPAUD_bootstrap = {$/;"	v
PSP_Available	video/psp/SDL_pspvideo.c	/^PSP_Available(void)$/;"	f	file:
PSP_Create	video/psp/SDL_pspvideo.c	/^PSP_Create()$/;"	f	file:
PSP_CreateRenderer	render/psp/SDL_render_psp.c	/^PSP_CreateRenderer(SDL_Window * window, Uint32 flags)$/;"	f
PSP_CreateTexture	render/psp/SDL_render_psp.c	/^PSP_CreateTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
PSP_CreateWindow	video/psp/SDL_pspvideo.c	/^PSP_CreateWindow(_THIS, SDL_Window * window)$/;"	f
PSP_CreateWindowFrom	video/psp/SDL_pspvideo.c	/^PSP_CreateWindowFrom(_THIS, SDL_Window * window, const void *data)$/;"	f
PSP_Destroy	video/psp/SDL_pspvideo.c	/^PSP_Destroy(SDL_VideoDevice * device)$/;"	f	file:
PSP_DestroyRenderer	render/psp/SDL_render_psp.c	/^PSP_DestroyRenderer(SDL_Renderer * renderer)$/;"	f	file:
PSP_DestroyTexture	render/psp/SDL_render_psp.c	/^PSP_DestroyTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
PSP_DestroyWindow	video/psp/SDL_pspvideo.c	/^PSP_DestroyWindow(_THIS, SDL_Window * window)$/;"	f
PSP_EventInit	video/psp/SDL_pspevents.c	/^void PSP_EventInit(_THIS)$/;"	f
PSP_EventQuit	video/psp/SDL_pspevents.c	/^void PSP_EventQuit(_THIS)$/;"	f
PSP_FRAME_BUFFER_SIZE	render/psp/SDL_render_psp.c	115;"	d	file:
PSP_FRAME_BUFFER_WIDTH	render/psp/SDL_render_psp.c	114;"	d	file:
PSP_GL_CreateContext	video/psp/SDL_pspgl.c	/^PSP_GL_CreateContext(_THIS, SDL_Window * window)$/;"	f
PSP_GL_DeleteContext	video/psp/SDL_pspgl.c	/^PSP_GL_DeleteContext(_THIS, SDL_GLContext context)$/;"	f
PSP_GL_GetProcAddress	video/psp/SDL_pspgl.c	/^PSP_GL_GetProcAddress(_THIS, const char *proc)$/;"	f
PSP_GL_GetSwapInterval	video/psp/SDL_pspgl.c	/^PSP_GL_GetSwapInterval(_THIS)$/;"	f
PSP_GL_LoadLibrary	video/psp/SDL_pspgl.c	/^PSP_GL_LoadLibrary(_THIS, const char *path)$/;"	f
PSP_GL_MakeCurrent	video/psp/SDL_pspgl.c	/^PSP_GL_MakeCurrent(_THIS, SDL_Window * window, SDL_GLContext context)$/;"	f
PSP_GL_SetSwapInterval	video/psp/SDL_pspgl.c	/^PSP_GL_SetSwapInterval(_THIS, int interval)$/;"	f
PSP_GL_SwapWindow	video/psp/SDL_pspgl.c	/^PSP_GL_SwapWindow(_THIS, SDL_Window * window)$/;"	f
PSP_GL_UnloadLibrary	video/psp/SDL_pspgl.c	/^PSP_GL_UnloadLibrary(_THIS)$/;"	f
PSP_GetDisplayModes	video/psp/SDL_pspvideo.c	/^PSP_GetDisplayModes(_THIS, SDL_VideoDisplay * display)$/;"	f
PSP_GetWindowWMInfo	video/psp/SDL_pspvideo.c	/^PSP_GetWindowWMInfo(_THIS, SDL_Window * window, struct SDL_SysWMinfo *info)$/;"	f
PSP_HasScreenKeyboardSupport	video/psp/SDL_pspvideo.c	/^SDL_bool PSP_HasScreenKeyboardSupport(_THIS)$/;"	f
PSP_HideScreenKeyboard	video/psp/SDL_pspvideo.c	/^void PSP_HideScreenKeyboard(_THIS, SDL_Window *window)$/;"	f
PSP_HideWindow	video/psp/SDL_pspvideo.c	/^PSP_HideWindow(_THIS, SDL_Window * window)$/;"	f
PSP_InitOSKeymap	video/psp/SDL_pspevents.c	/^void PSP_InitOSKeymap(_THIS)$/;"	f
PSP_IsScreenKeyboardShown	video/psp/SDL_pspvideo.c	/^SDL_bool PSP_IsScreenKeyboardShown(_THIS, SDL_Window *window)$/;"	f
PSP_LockTexture	render/psp/SDL_render_psp.c	/^PSP_LockTexture(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
PSP_MaximizeWindow	video/psp/SDL_pspvideo.c	/^PSP_MaximizeWindow(_THIS, SDL_Window * window)$/;"	f
PSP_MinimizeWindow	video/psp/SDL_pspvideo.c	/^PSP_MinimizeWindow(_THIS, SDL_Window * window)$/;"	f
PSP_PumpEvents	video/psp/SDL_pspevents.c	/^void PSP_PumpEvents(_THIS)$/;"	f
PSP_RaiseWindow	video/psp/SDL_pspvideo.c	/^PSP_RaiseWindow(_THIS, SDL_Window * window)$/;"	f
PSP_RenderClear	render/psp/SDL_render_psp.c	/^PSP_RenderClear(SDL_Renderer * renderer)$/;"	f	file:
PSP_RenderCopy	render/psp/SDL_render_psp.c	/^PSP_RenderCopy(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
PSP_RenderCopyEx	render/psp/SDL_render_psp.c	/^PSP_RenderCopyEx(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
PSP_RenderData	render/psp/SDL_render_psp.c	/^} PSP_RenderData;$/;"	t	typeref:struct:__anon76	file:
PSP_RenderDrawLines	render/psp/SDL_render_psp.c	/^PSP_RenderDrawLines(SDL_Renderer * renderer, const SDL_FPoint * points,$/;"	f	file:
PSP_RenderDrawPoints	render/psp/SDL_render_psp.c	/^PSP_RenderDrawPoints(SDL_Renderer * renderer, const SDL_FPoint * points,$/;"	f	file:
PSP_RenderDriver	render/psp/SDL_render_psp.c	/^SDL_RenderDriver PSP_RenderDriver = {$/;"	v
PSP_RenderFillRects	render/psp/SDL_render_psp.c	/^PSP_RenderFillRects(SDL_Renderer * renderer, const SDL_FRect * rects,$/;"	f	file:
PSP_RenderPresent	render/psp/SDL_render_psp.c	/^PSP_RenderPresent(SDL_Renderer * renderer)$/;"	f	file:
PSP_RenderReadPixels	render/psp/SDL_render_psp.c	/^PSP_RenderReadPixels(SDL_Renderer * renderer, const SDL_Rect * rect,$/;"	f	file:
PSP_RestoreWindow	video/psp/SDL_pspvideo.c	/^PSP_RestoreWindow(_THIS, SDL_Window * window)$/;"	f
PSP_SCREEN_HEIGHT	render/psp/SDL_render_psp.c	112;"	d	file:
PSP_SCREEN_WIDTH	render/psp/SDL_render_psp.c	111;"	d	file:
PSP_SetBlendMode	render/psp/SDL_render_psp.c	/^PSP_SetBlendMode(SDL_Renderer * renderer, int blendMode)$/;"	f	file:
PSP_SetDisplayMode	video/psp/SDL_pspvideo.c	/^PSP_SetDisplayMode(_THIS, SDL_VideoDisplay * display, SDL_DisplayMode * mode)$/;"	f
PSP_SetRenderTarget	render/psp/SDL_render_psp.c	/^PSP_SetRenderTarget(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
PSP_SetWindowGrab	video/psp/SDL_pspvideo.c	/^PSP_SetWindowGrab(_THIS, SDL_Window * window, SDL_bool grabbed)$/;"	f
PSP_SetWindowIcon	video/psp/SDL_pspvideo.c	/^PSP_SetWindowIcon(_THIS, SDL_Window * window, SDL_Surface * icon)$/;"	f
PSP_SetWindowPosition	video/psp/SDL_pspvideo.c	/^PSP_SetWindowPosition(_THIS, SDL_Window * window)$/;"	f
PSP_SetWindowSize	video/psp/SDL_pspvideo.c	/^PSP_SetWindowSize(_THIS, SDL_Window * window)$/;"	f
PSP_SetWindowTitle	video/psp/SDL_pspvideo.c	/^PSP_SetWindowTitle(_THIS, SDL_Window * window)$/;"	f
PSP_ShowScreenKeyboard	video/psp/SDL_pspvideo.c	/^void PSP_ShowScreenKeyboard(_THIS, SDL_Window *window)$/;"	f
PSP_ShowWindow	video/psp/SDL_pspvideo.c	/^PSP_ShowWindow(_THIS, SDL_Window * window)$/;"	f
PSP_TextureData	render/psp/SDL_render_psp.c	/^} PSP_TextureData;$/;"	t	typeref:struct:__anon77	file:
PSP_UnlockTexture	render/psp/SDL_render_psp.c	/^PSP_UnlockTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
PSP_UpdateTexture	render/psp/SDL_render_psp.c	/^PSP_UpdateTexture(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
PSP_UpdateViewport	render/psp/SDL_render_psp.c	/^PSP_UpdateViewport(SDL_Renderer * renderer)$/;"	f	file:
PSP_VideoInit	video/psp/SDL_pspvideo.c	/^PSP_VideoInit(_THIS)$/;"	f
PSP_VideoQuit	video/psp/SDL_pspvideo.c	/^PSP_VideoQuit(_THIS)$/;"	f
PSP_WindowEvent	render/psp/SDL_render_psp.c	/^PSP_WindowEvent(SDL_Renderer * renderer, const SDL_WindowEvent *event)$/;"	f	file:
PSP_bootstrap	video/psp/SDL_pspvideo.c	/^VideoBootStrap PSP_bootstrap = {$/;"	v
PTOUCHINPUT	video/windows/SDL_windowsvideo.h	/^} TOUCHINPUT, *PTOUCHINPUT;$/;"	t	typeref:struct:_TOUCHINPUT
PULSEAUDIO_CloseDevice	audio/pulseaudio/SDL_pulseaudio.c	/^PULSEAUDIO_CloseDevice(_THIS)$/;"	f	file:
PULSEAUDIO_Deinitialize	audio/pulseaudio/SDL_pulseaudio.c	/^PULSEAUDIO_Deinitialize(void)$/;"	f	file:
PULSEAUDIO_GetDeviceBuf	audio/pulseaudio/SDL_pulseaudio.c	/^PULSEAUDIO_GetDeviceBuf(_THIS)$/;"	f	file:
PULSEAUDIO_Init	audio/pulseaudio/SDL_pulseaudio.c	/^PULSEAUDIO_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
PULSEAUDIO_OpenDevice	audio/pulseaudio/SDL_pulseaudio.c	/^PULSEAUDIO_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
PULSEAUDIO_PlayDevice	audio/pulseaudio/SDL_pulseaudio.c	/^PULSEAUDIO_PlayDevice(_THIS)$/;"	f	file:
PULSEAUDIO_WaitDevice	audio/pulseaudio/SDL_pulseaudio.c	/^PULSEAUDIO_WaitDevice(_THIS)$/;"	f	file:
PULSEAUDIO_WaitDone	audio/pulseaudio/SDL_pulseaudio.c	/^PULSEAUDIO_WaitDone(_THIS)$/;"	f	file:
PULSEAUDIO_bootstrap	audio/pulseaudio/SDL_pulseaudio.c	/^AudioBootStrap PULSEAUDIO_bootstrap = {$/;"	v
PULSEAUDIO_pa_channel_map_init_auto	audio/pulseaudio/SDL_pulseaudio.c	/^static pa_channel_map *(*PULSEAUDIO_pa_channel_map_init_auto) ($/;"	v	file:
PULSEAUDIO_pa_context_connect	audio/pulseaudio/SDL_pulseaudio.c	/^static int (*PULSEAUDIO_pa_context_connect) (pa_context *, const char *,$/;"	v	file:
PULSEAUDIO_pa_context_disconnect	audio/pulseaudio/SDL_pulseaudio.c	/^static void (*PULSEAUDIO_pa_context_disconnect) (pa_context *);$/;"	v	file:
PULSEAUDIO_pa_context_get_state	audio/pulseaudio/SDL_pulseaudio.c	/^static pa_context_state_t (*PULSEAUDIO_pa_context_get_state) (pa_context *);$/;"	v	file:
PULSEAUDIO_pa_context_new	audio/pulseaudio/SDL_pulseaudio.c	/^static pa_context * (*PULSEAUDIO_pa_context_new) (pa_mainloop_api *,$/;"	v	file:
PULSEAUDIO_pa_context_unref	audio/pulseaudio/SDL_pulseaudio.c	/^static void (*PULSEAUDIO_pa_context_unref) (pa_context *);$/;"	v	file:
PULSEAUDIO_pa_get_library_version	audio/pulseaudio/SDL_pulseaudio.c	/^static const char *(*PULSEAUDIO_pa_get_library_version) (void);$/;"	v	file:
PULSEAUDIO_pa_mainloop_free	audio/pulseaudio/SDL_pulseaudio.c	/^static void (*PULSEAUDIO_pa_mainloop_free) (pa_mainloop *);$/;"	v	file:
PULSEAUDIO_pa_mainloop_get_api	audio/pulseaudio/SDL_pulseaudio.c	/^static pa_mainloop_api * (*PULSEAUDIO_pa_mainloop_get_api) (pa_mainloop *);$/;"	v	file:
PULSEAUDIO_pa_mainloop_iterate	audio/pulseaudio/SDL_pulseaudio.c	/^static int (*PULSEAUDIO_pa_mainloop_iterate) (pa_mainloop *, int, int *);$/;"	v	file:
PULSEAUDIO_pa_mainloop_new	audio/pulseaudio/SDL_pulseaudio.c	/^static pa_mainloop * (*PULSEAUDIO_pa_mainloop_new) (void);$/;"	v	file:
PULSEAUDIO_pa_operation_cancel	audio/pulseaudio/SDL_pulseaudio.c	/^static void (*PULSEAUDIO_pa_operation_cancel) (pa_operation *);$/;"	v	file:
PULSEAUDIO_pa_operation_get_state	audio/pulseaudio/SDL_pulseaudio.c	/^static pa_operation_state_t (*PULSEAUDIO_pa_operation_get_state) ($/;"	v	file:
PULSEAUDIO_pa_operation_unref	audio/pulseaudio/SDL_pulseaudio.c	/^static void (*PULSEAUDIO_pa_operation_unref) (pa_operation *);$/;"	v	file:
PULSEAUDIO_pa_simple_free	audio/pulseaudio/SDL_pulseaudio.c	/^static void (*PULSEAUDIO_pa_simple_free) (pa_simple *);$/;"	v	file:
PULSEAUDIO_pa_simple_new	audio/pulseaudio/SDL_pulseaudio.c	/^static pa_simple *(*PULSEAUDIO_pa_simple_new) (const char *, const char *,$/;"	v	file:
PULSEAUDIO_pa_stream_connect_playback	audio/pulseaudio/SDL_pulseaudio.c	/^static int (*PULSEAUDIO_pa_stream_connect_playback) (pa_stream *, const char *,$/;"	v	file:
PULSEAUDIO_pa_stream_disconnect	audio/pulseaudio/SDL_pulseaudio.c	/^static int (*PULSEAUDIO_pa_stream_disconnect) (pa_stream *);$/;"	v	file:
PULSEAUDIO_pa_stream_drain	audio/pulseaudio/SDL_pulseaudio.c	/^static pa_operation * (*PULSEAUDIO_pa_stream_drain) (pa_stream *,$/;"	v	file:
PULSEAUDIO_pa_stream_get_state	audio/pulseaudio/SDL_pulseaudio.c	/^static pa_stream_state_t (*PULSEAUDIO_pa_stream_get_state) (pa_stream *);$/;"	v	file:
PULSEAUDIO_pa_stream_new	audio/pulseaudio/SDL_pulseaudio.c	/^static pa_stream * (*PULSEAUDIO_pa_stream_new) (pa_context *, const char *,$/;"	v	file:
PULSEAUDIO_pa_stream_unref	audio/pulseaudio/SDL_pulseaudio.c	/^static void (*PULSEAUDIO_pa_stream_unref) (pa_stream *);$/;"	v	file:
PULSEAUDIO_pa_stream_writable_size	audio/pulseaudio/SDL_pulseaudio.c	/^static size_t (*PULSEAUDIO_pa_stream_writable_size) (pa_stream *);$/;"	v	file:
PULSEAUDIO_pa_stream_write	audio/pulseaudio/SDL_pulseaudio.c	/^static int (*PULSEAUDIO_pa_stream_write) (pa_stream *, const void *, size_t,$/;"	v	file:
PULSEAUDIO_pa_strerror	audio/pulseaudio/SDL_pulseaudio.c	/^static const char * (*PULSEAUDIO_pa_strerror) (int);$/;"	v	file:
PURE	render/direct3d/SDL_render_d3d.c	/^    STDMETHOD(QueryInterface)(THIS_ REFIID iid, LPVOID *ppv) PURE;$/;"	m	struct:ID3DXBufferVtbl	file:
ParseCommandLine	main/windows/SDL_windows_main.c	/^ParseCommandLine(char *cmdline, char **argv)$/;"	f	file:
Partition	stdlib/SDL_qsort.c	232;"	d	file:
PendingFocusEnum	video/x11/SDL_x11window.h	/^} PendingFocusEnum;$/;"	t	typeref:enum:__anon24
Pivot	stdlib/SDL_qsort.c	208;"	d	file:
PixelFormatToD3DFMT	render/direct3d/SDL_render_d3d.c	/^PixelFormatToD3DFMT(Uint32 format)$/;"	f	file:
PixelFormatToPSPFMT	render/psp/SDL_render_psp.c	/^PixelFormatToPSPFMT(Uint32 format)$/;"	f	file:
PlayDevice	audio/SDL_sysaudio.h	/^    void (*PlayDevice) (_THIS);$/;"	m	struct:SDL_AudioDriverImpl
PollAllValues	joystick/linux/SDL_sysjoystick.c	/^PollAllValues(SDL_Joystick * joystick)$/;"	f	file:
Pop	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *Pop)(ITfDocumentMgr *);$/;"	m	struct:ITfDocumentMgrVtbl
PreInsertion	stdlib/SDL_qsort.c	250;"	d	file:
PrepWaveFormat	audio/winmm/SDL_winmm.c	/^PrepWaveFormat(_THIS, UINT_PTR devId, WAVEFORMATEX *pfmt, const int iscapture)$/;"	f	file:
PrepareDraw	video/directfb/SDL_DirectFB_render.c	/^PrepareDraw(SDL_Renderer * renderer)$/;"	f	file:
PrintShaderData	render/direct3d/SDL_render_d3d.c	/^static void PrintShaderData(LPDWORD shader_data, DWORD shader_size)$/;"	f	file:
ProcessInputEvent	video/directfb/SDL_DirectFB_events.c	/^ProcessInputEvent(_THIS, DFBInputEvent * ievt)$/;"	f	file:
ProcessWindowEvent	video/directfb/SDL_DirectFB_events.c	/^ProcessWindowEvent(_THIS, SDL_Window *sdlwin, DFBWindowEvent * evt)$/;"	f	file:
ProvidesOwnCallbackThread	audio/SDL_sysaudio.h	/^    int ProvidesOwnCallbackThread;$/;"	m	struct:SDL_AudioDriverImpl
PumpEvents	video/SDL_sysvideo.h	/^    void (*PumpEvents) (_THIS);$/;"	m	struct:SDL_VideoDevice
Push	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *Push)(ITfDocumentMgr *, ITfContext *);$/;"	m	struct:ITfDocumentMgrVtbl
QSAAUDIO_bootstrap	audio/qsa/SDL_qsa_audio.c	/^AudioBootStrap QSAAUDIO_bootstrap = {$/;"	v
QSA_CheckBuggyCards	audio/qsa/SDL_qsa_audio.c	/^QSA_CheckBuggyCards(_THIS, unsigned long checkfor)$/;"	f	file:
QSA_CloseDevice	audio/qsa/SDL_qsa_audio.c	/^QSA_CloseDevice(_THIS)$/;"	f	file:
QSA_Deinitialize	audio/qsa/SDL_qsa_audio.c	/^QSA_Deinitialize(void)$/;"	f	file:
QSA_DetectDevices	audio/qsa/SDL_qsa_audio.c	/^QSA_DetectDevices(int iscapture, SDL_AddAudioDevice addfn)$/;"	f	file:
QSA_Device	audio/qsa/SDL_qsa_audio.c	/^} QSA_Device;$/;"	t	typeref:struct:_QSA_Device	file:
QSA_GetDeviceBuf	audio/qsa/SDL_qsa_audio.c	/^QSA_GetDeviceBuf(_THIS)$/;"	f	file:
QSA_Init	audio/qsa/SDL_qsa_audio.c	/^QSA_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
QSA_InitAudioParams	audio/qsa/SDL_qsa_audio.c	/^QSA_InitAudioParams(snd_pcm_channel_params_t * cpars)$/;"	f	file:
QSA_MAX_CARD_NAME_LENGTH	audio/qsa/SDL_qsa_audio.c	61;"	d	file:
QSA_MAX_DEVICES	audio/qsa/SDL_qsa_audio.c	70;"	d	file:
QSA_MAX_NAME_LENGTH	audio/qsa/SDL_qsa_audio.c	71;"	d	file:
QSA_MMAP_WORKAROUND	audio/qsa/SDL_qsa_audio.c	52;"	d	file:
QSA_NO_WORKAROUNDS	audio/qsa/SDL_qsa_audio.c	51;"	d	file:
QSA_OpenDevice	audio/qsa/SDL_qsa_audio.c	/^QSA_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
QSA_PlayDevice	audio/qsa/SDL_qsa_audio.c	/^QSA_PlayDevice(_THIS)$/;"	f	file:
QSA_SetError	audio/qsa/SDL_qsa_audio.c	/^QSA_SetError(const char *fn, int status)$/;"	f	file:
QSA_ThreadInit	audio/qsa/SDL_qsa_audio.c	/^QSA_ThreadInit(_THIS)$/;"	f	file:
QSA_WA_CARDS	audio/qsa/SDL_qsa_audio.c	60;"	d	file:
QSA_WaitDevice	audio/qsa/SDL_qsa_audio.c	/^QSA_WaitDevice(_THIS)$/;"	f	file:
QSA_WaitDone	audio/qsa/SDL_qsa_audio.c	/^QSA_WaitDone(_THIS)$/;"	f	file:
QuadShape	video/SDL_shape_internals.h	/^typedef enum { QuadShape,TransparentShape,OpaqueShape } SDL_ShapeKind;$/;"	e	enum:__anon33
QueryInterface	joystick/windows/SDL_dxjoystick.c	/^    HRESULT (WINAPI *QueryInterface)(IWbemLocator *This,REFIID riid,void **ppvObject);$/;"	m	struct:IWbemLocatorVtbl	file:
QueryInterface	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *QueryInterface)(ITfCandidateListUIElement *, REFIID, void **);$/;"	m	struct:ITfCandidateListUIElementVtbl
QueryInterface	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *QueryInterface)(ITfDocumentMgr *, REFIID, void **);$/;"	m	struct:ITfDocumentMgrVtbl
QueryInterface	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *QueryInterface)(ITfInputProcessorProfileActivationSink *, REFIID, void **);$/;"	m	struct:ITfInputProcessorProfileActivationSinkVtbl
QueryInterface	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *QueryInterface)(ITfReadingInformationUIElement *, REFIID, void **);$/;"	m	struct:ITfReadingInformationUIElementVtbl
QueryInterface	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *QueryInterface)(ITfSource *, REFIID, void **);$/;"	m	struct:ITfSourceVtbl
QueryInterface	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *QueryInterface)(ITfThreadMgr *, REFIID, void **);$/;"	m	struct:ITfThreadMgrVtbl
QueryInterface	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *QueryInterface)(ITfThreadMgrEx *, REFIID, void **);$/;"	m	struct:ITfThreadMgrExVtbl
QueryInterface	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *QueryInterface)(ITfUIElement *, REFIID, void **);$/;"	m	struct:ITfUIElementVtbl
QueryInterface	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *QueryInterface)(ITfUIElementMgr *, REFIID, void **);$/;"	m	struct:ITfUIElementMgrVtbl
QueryInterface	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *QueryInterface)(ITfUIElementSink *, REFIID, void **);$/;"	m	struct:ITfUIElementSinkVtbl
QuitRequested	video/bwindow/SDL_BWin.h	/^    virtual bool QuitRequested() {$/;"	f	class:SDL_BWin
READAHEAD_BUFFER_SIZE	file/SDL_rwops.c	51;"	d	file:
REGDB_E_CLASSNOTREG	audio/directsound/directx.h	52;"	d
RELEASE_LOCK	stdlib/SDL_malloc.c	1472;"	d	file:
RELEASE_LOCK	stdlib/SDL_malloc.c	1510;"	d	file:
RELEASE_MAGIC_INIT_LOCK	stdlib/SDL_malloc.c	1533;"	d	file:
RELEASE_MAGIC_INIT_LOCK	stdlib/SDL_malloc.c	1536;"	d	file:
RELEASE_MORECORE_LOCK	stdlib/SDL_malloc.c	1525;"	d	file:
RELEASE_MORECORE_LOCK	stdlib/SDL_malloc.c	1528;"	d	file:
REPEATED_KEYMASK	video/windows/SDL_windowsevents.c	46;"	d	file:
REPORT_FEATURE	joystick/bsd/SDL_sysjoystick.c	/^    REPORT_FEATURE = 2$/;"	e	enum:__anon69	file:
REPORT_INPUT	joystick/bsd/SDL_sysjoystick.c	/^    REPORT_INPUT = 0,$/;"	e	enum:__anon69	file:
REPORT_OUTPUT	joystick/bsd/SDL_sysjoystick.c	/^    REPORT_OUTPUT = 1,$/;"	e	enum:__anon69	file:
REP_BUF_DATA	joystick/bsd/SDL_sysjoystick.c	155;"	d	file:
REP_BUF_DATA	joystick/bsd/SDL_sysjoystick.c	157;"	d	file:
REP_BUF_DATA	joystick/bsd/SDL_sysjoystick.c	159;"	d	file:
REP_BUF_DATA	joystick/bsd/SDL_sysjoystick.c	161;"	d	file:
RESHIFT	video/SDL_blit_N.c	134;"	d	file:
RESHIFT	video/SDL_blit_N.c	149;"	d	file:
RETRIEVE_RGB_PIXEL	video/SDL_blit.h	145;"	d
RETURN	video/SDL_stretch.c	62;"	d	file:
RGB	video/x11/edid.h	/^    RGB,$/;"	e	enum:__anon10
RGB101010_RGB332	video/SDL_blit_N.c	997;"	d	file:
RGB555_FROM_RGB	video/SDL_blit.h	228;"	d
RGB565_32	video/SDL_blit_N.c	1356;"	d	file:
RGB565_ABGR8888_LUT	video/SDL_blit_N.c	/^static const Uint32 RGB565_ABGR8888_LUT[512] = {$/;"	v	file:
RGB565_ARGB8888_LUT	video/SDL_blit_N.c	/^static const Uint32 RGB565_ARGB8888_LUT[512] = {$/;"	v	file:
RGB565_BGRA8888_LUT	video/SDL_blit_N.c	/^static const Uint32 RGB565_BGRA8888_LUT[512] = {$/;"	v	file:
RGB565_FROM_RGB	video/SDL_blit.h	224;"	d
RGB565_RGBA8888_LUT	video/SDL_blit_N.c	/^static const Uint32 RGB565_RGBA8888_LUT[512] = {$/;"	v	file:
RGB888_FROM_RGB	video/SDL_blit.h	232;"	d
RGB888_RGB332	video/SDL_blit_N.c	887;"	d	file:
RGB888_RGB555	video/SDL_blit_N.c	1107;"	d	file:
RGB888_RGB555_TWO	video/SDL_blit_N.c	1112;"	d	file:
RGB888_RGB565	video/SDL_blit_N.c	1231;"	d	file:
RGB888_RGB565_TWO	video/SDL_blit_N.c	1236;"	d	file:
RGBA8888_FROM_RGBA	video/SDL_blit.h	240;"	d
RGBA_FROM_8888	video/SDL_blit.h	310;"	d
RGBA_FROM_ABGR8888	video/SDL_blit.h	331;"	d
RGBA_FROM_ARGB2101010	video/SDL_blit.h	345;"	d
RGBA_FROM_ARGB8888	video/SDL_blit.h	324;"	d
RGBA_FROM_BGRA8888	video/SDL_blit.h	338;"	d
RGBA_FROM_PIXEL	video/SDL_blit.h	303;"	d
RGBA_FROM_RGBA8888	video/SDL_blit.h	317;"	d
RGB_FROM_PIXEL	video/SDL_blit.h	121;"	d
RGB_FROM_RGB555	video/SDL_blit.h	133;"	d
RGB_FROM_RGB565	video/SDL_blit.h	127;"	d
RGB_FROM_RGB888	video/SDL_blit.h	139;"	d
RIFF	audio/SDL_wave.h	28;"	d
RLEALPHABLIT	video/SDL_RLEaccel.c	801;"	d	file:
RLEALPHACLIPBLIT	video/SDL_RLEaccel.c	632;"	d	file:
RLEAlphaClipBlit	video/SDL_RLEaccel.c	/^RLEAlphaClipBlit(int w, Uint8 * srcbuf, SDL_Surface * dst,$/;"	f	file:
RLEAlphaSurface	video/SDL_RLEaccel.c	/^RLEAlphaSurface(SDL_Surface * surface)$/;"	f	file:
RLEBLIT	video/SDL_RLEaccel.c	511;"	d	file:
RLEBLIT	video/SDL_RLEaccel.c	537;"	d	file:
RLECLIPBLIT	video/SDL_RLEaccel.c	384;"	d	file:
RLECLIPBLIT	video/SDL_RLEaccel.c	430;"	d	file:
RLEClipBlit	video/SDL_RLEaccel.c	/^RLEClipBlit(int w, Uint8 * srcbuf, SDL_Surface * dst,$/;"	f	file:
RLEColorkeySurface	video/SDL_RLEaccel.c	/^RLEColorkeySurface(SDL_Surface * surface)$/;"	f	file:
RLEDestFormat	video/SDL_RLEaccel.c	/^} RLEDestFormat;$/;"	t	typeref:struct:__anon36	file:
RLESKIP	video/SDL_RLEaccel.c	466;"	d	file:
RLESKIP	video/SDL_RLEaccel.c	499;"	d	file:
ROTATE_LEFT	test/SDL_test_md5.c	79;"	d	file:
ROUND_RESOLUTION	timer/SDL_timer_c.h	26;"	d
RTCHECK	stdlib/SDL_malloc.c	2448;"	d	file:
RTCHECK	stdlib/SDL_malloc.c	2450;"	d	file:
RTCHECK	stdlib/SDL_malloc.c	2453;"	d	file:
RTLD_DEFAULT	thread/pthread/SDL_systhread.c	42;"	d	file:
RaiseWindow	video/SDL_sysvideo.h	/^    void (*RaiseWindow) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
ReadChunk	audio/SDL_wave.c	/^ReadChunk(SDL_RWops * src, Chunk * chunk)$/;"	f	file:
Recurse	stdlib/SDL_qsort.c	196;"	d	file:
RecursivelyCalculateShapeTree	video/SDL_shape.c	/^RecursivelyCalculateShapeTree(SDL_WindowShapeMode mode,SDL_Surface* mask,SDL_Rect dimensions) {$/;"	f	file:
RegisterTouchWindow	video/windows/SDL_windowsvideo.h	/^    BOOL (WINAPI *RegisterTouchWindow)( HWND, ULONG );$/;"	m	struct:SDL_VideoData
Release	joystick/windows/SDL_dxjoystick.c	/^    ULONG (WINAPI *Release)(IWbemLocator *This);$/;"	m	struct:IWbemLocatorVtbl	file:
Release	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *Release)(ITfCandidateListUIElement *);$/;"	m	struct:ITfCandidateListUIElementVtbl
Release	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *Release)(ITfDocumentMgr *);$/;"	m	struct:ITfDocumentMgrVtbl
Release	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *Release)(ITfInputProcessorProfileActivationSink *);$/;"	m	struct:ITfInputProcessorProfileActivationSinkVtbl
Release	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *Release)(ITfReadingInformationUIElement *);$/;"	m	struct:ITfReadingInformationUIElementVtbl
Release	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *Release)(ITfSource *);$/;"	m	struct:ITfSourceVtbl
Release	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *Release)(ITfThreadMgr *);$/;"	m	struct:ITfThreadMgrVtbl
Release	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *Release)(ITfThreadMgrEx *);$/;"	m	struct:ITfThreadMgrExVtbl
Release	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *Release)(ITfUIElement *);$/;"	m	struct:ITfUIElementVtbl
Release	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *Release)(ITfUIElementMgr *);$/;"	m	struct:ITfUIElementMgrVtbl
Release	video/windows/SDL_msctf.h	/^    ULONG (STDMETHODCALLTYPE *Release)(ITfUIElementSink *);$/;"	m	struct:ITfUIElementSinkVtbl
RemoveGLView	video/bwindow/SDL_BWin.h	/^    virtual void RemoveGLView() {$/;"	f	class:SDL_BWin
RemovePendingMoveEvents	events/SDL_windowevents.c	/^RemovePendingMoveEvents(void * userdata, SDL_Event *event)$/;"	f	file:
RemovePendingResizedEvents	events/SDL_windowevents.c	/^RemovePendingResizedEvents(void * userdata, SDL_Event *event)$/;"	f	file:
RemovePendingSizeChangedEvents	events/SDL_windowevents.c	/^RemovePendingSizeChangedEvents(void * userdata, SDL_Event *event)$/;"	f	file:
RenderClear	render/SDL_sysrender.h	/^    int (*RenderClear) (SDL_Renderer * renderer);$/;"	m	struct:SDL_Renderer
RenderCopy	render/SDL_sysrender.h	/^    int (*RenderCopy) (SDL_Renderer * renderer, SDL_Texture * texture,$/;"	m	struct:SDL_Renderer
RenderCopyEx	render/SDL_sysrender.h	/^    int (*RenderCopyEx) (SDL_Renderer * renderer, SDL_Texture * texture,$/;"	m	struct:SDL_Renderer
RenderDrawLines	render/SDL_sysrender.h	/^    int (*RenderDrawLines) (SDL_Renderer * renderer, const SDL_FPoint * points,$/;"	m	struct:SDL_Renderer
RenderDrawLinesWithRects	render/SDL_render.c	/^RenderDrawLinesWithRects(SDL_Renderer * renderer,$/;"	f	file:
RenderDrawPoints	render/SDL_sysrender.h	/^    int (*RenderDrawPoints) (SDL_Renderer * renderer, const SDL_FPoint * points,$/;"	m	struct:SDL_Renderer
RenderDrawPointsWithRects	render/SDL_render.c	/^RenderDrawPointsWithRects(SDL_Renderer * renderer,$/;"	f	file:
RenderFillRects	render/SDL_sysrender.h	/^    int (*RenderFillRects) (SDL_Renderer * renderer, const SDL_FRect * rects,$/;"	m	struct:SDL_Renderer
RenderPresent	render/SDL_sysrender.h	/^    void (*RenderPresent) (SDL_Renderer * renderer);$/;"	m	struct:SDL_Renderer
RenderReadPixels	render/SDL_sysrender.h	/^    int (*RenderReadPixels) (SDL_Renderer * renderer, const SDL_Rect * rect,$/;"	m	struct:SDL_Renderer
ResizeWindowShape	video/SDL_sysvideo.h	/^    int (*ResizeWindowShape)(SDL_Window *window);$/;"	m	struct:SDL_ShapeDriver
RestoreWindow	video/SDL_sysvideo.h	/^    void (*RestoreWindow) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
Rloss	video/SDL_RLEaccel.c	/^    Uint8 Rloss;$/;"	m	struct:__anon36	file:
Rmask	video/SDL_RLEaccel.c	/^    Uint32 Rmask;$/;"	m	struct:__anon36	file:
Rshift	video/SDL_RLEaccel.c	/^    Uint8 Rshift;$/;"	m	struct:__anon36	file:
RunThread	thread/beos/SDL_systhread.c	/^RunThread(void *data)$/;"	f	file:
RunThread	thread/pthread/SDL_systhread.c	/^RunThread(void *data)$/;"	f	file:
RunThread	thread/windows/SDL_systhread.c	/^RunThread(void *data)$/;"	f	file:
RunThreadViaBeginThreadEx	thread/windows/SDL_systhread.c	/^RunThreadViaBeginThreadEx(void *data)$/;"	f	file:
RunThreadViaCreateThread	thread/windows/SDL_systhread.c	/^RunThreadViaCreateThread(LPVOID data)$/;"	f	file:
S1	libm/k_sin.c	/^    S1 = -1.66666666666666324348e-01,   \/* 0xBFC55555, 0x55555549 *\/$/;"	v	file:
S11	test/SDL_test_md5.c	239;"	d	file:
S12	test/SDL_test_md5.c	240;"	d	file:
S13	test/SDL_test_md5.c	241;"	d	file:
S14	test/SDL_test_md5.c	242;"	d	file:
S2	libm/k_sin.c	/^    S2 = 8.33333333332248946124e-03,    \/* 0x3F811111, 0x1110F8A6 *\/$/;"	v	file:
S21	test/SDL_test_md5.c	263;"	d	file:
S22	test/SDL_test_md5.c	264;"	d	file:
S23	test/SDL_test_md5.c	265;"	d	file:
S24	test/SDL_test_md5.c	266;"	d	file:
S3	libm/k_sin.c	/^    S3 = -1.98412698298579493134e-04,   \/* 0xBF2A01A0, 0x19C161D5 *\/$/;"	v	file:
S31	test/SDL_test_md5.c	287;"	d	file:
S32	test/SDL_test_md5.c	288;"	d	file:
S33	test/SDL_test_md5.c	289;"	d	file:
S34	test/SDL_test_md5.c	290;"	d	file:
S4	libm/k_sin.c	/^    S4 = 2.75573137070700676789e-06,    \/* 0x3EC71DE3, 0x57B1FE7D *\/$/;"	v	file:
S41	test/SDL_test_md5.c	311;"	d	file:
S42	test/SDL_test_md5.c	312;"	d	file:
S43	test/SDL_test_md5.c	313;"	d	file:
S44	test/SDL_test_md5.c	314;"	d	file:
S5	libm/k_sin.c	/^    S5 = -2.50507602534068634195e-08,   \/* 0xBE5AE5E6, 0x8A2B9CEB *\/$/;"	v	file:
S6	libm/k_sin.c	/^    S6 = 1.58969099521155010221e-10;    \/* 0x3DE5D93A, 0x5ACFD57C *\/$/;"	v	file:
SAFE_RELEASE	joystick/windows/SDL_dxjoystick.c	391;"	d	file:
SAFE_RELEASE	video/windows/SDL_windowskeyboard.c	1202;"	d	file:
SAVE_32BIT_BMP	video/SDL_bmp.c	39;"	d	file:
SDLTest_Assert	test/SDL_test_assert.c	/^void SDLTest_Assert(int assertCondition, const char *assertDescription, ...)$/;"	f
SDLTest_AssertCheck	test/SDL_test_assert.c	/^int SDLTest_AssertCheck(int assertCondition, const char *assertDescription, ...)$/;"	f
SDLTest_AssertCheckFormat	test/SDL_test_assert.c	/^const char *SDLTest_AssertCheckFormat = "Assert '%s': %s";$/;"	v
SDLTest_AssertPass	test/SDL_test_assert.c	/^void SDLTest_AssertPass(const char *assertDescription, ...)$/;"	f
SDLTest_AssertSummaryFormat	test/SDL_test_assert.c	/^const char *SDLTest_AssertSummaryFormat = "Assert Summary: Total=%d Passed=%d Failed=%d";$/;"	v
SDLTest_AssertSummaryToTestResult	test/SDL_test_assert.c	/^int SDLTest_AssertSummaryToTestResult()$/;"	f
SDLTest_AssertsFailed	test/SDL_test_assert.c	/^static Uint32 SDLTest_AssertsFailed = 0;$/;"	v	file:
SDLTest_AssertsPassed	test/SDL_test_assert.c	/^static Uint32 SDLTest_AssertsPassed = 0;$/;"	v	file:
SDLTest_BailOut	test/SDL_test_harness.c	/^    SDLTest_BailOut()$/;"	f
SDLTest_CharTextureCache	test/SDL_test_font.c	/^static SDL_Texture *SDLTest_CharTextureCache[256];$/;"	v	file:
SDLTest_CommonArg	test/SDL_test_common.c	/^SDLTest_CommonArg(SDLTest_CommonState * state, int index)$/;"	f
SDLTest_CommonCreateState	test/SDL_test_common.c	/^SDLTest_CommonCreateState(char **argv, Uint32 flags)$/;"	f
SDLTest_CommonEvent	test/SDL_test_common.c	/^SDLTest_CommonEvent(SDLTest_CommonState * state, SDL_Event * event, int *done)$/;"	f
SDLTest_CommonInit	test/SDL_test_common.c	/^SDLTest_CommonInit(SDLTest_CommonState * state)$/;"	f
SDLTest_CommonQuit	test/SDL_test_common.c	/^SDLTest_CommonQuit(SDLTest_CommonState * state)$/;"	f
SDLTest_CommonUsage	test/SDL_test_common.c	/^SDLTest_CommonUsage(SDLTest_CommonState * state)$/;"	f
SDLTest_CompareSurfaces	test/SDL_test_compare.c	/^int SDLTest_CompareSurfaces(SDL_Surface *surface, SDL_Surface *referenceSurface, int allowable_error)$/;"	f
SDLTest_Crc32Calc	test/SDL_test_crc32.c	/^int SDLTest_Crc32Calc(SDLTest_Crc32Context * crcContext, CrcUint8 *inBuf, CrcUint32 inLen, CrcUint32 *crc32)$/;"	f
SDLTest_Crc32CalcBuffer	test/SDL_test_crc32.c	/^int SDLTest_Crc32CalcBuffer(SDLTest_Crc32Context * crcContext, CrcUint8 *inBuf, CrcUint32 inLen, CrcUint32 *crc32)$/;"	f
SDLTest_Crc32CalcEnd	test/SDL_test_crc32.c	/^int SDLTest_Crc32CalcEnd(SDLTest_Crc32Context * crcContext, CrcUint32 *crc32)$/;"	f
SDLTest_Crc32CalcStart	test/SDL_test_crc32.c	/^int SDLTest_Crc32CalcStart(SDLTest_Crc32Context * crcContext, CrcUint32 *crc32)$/;"	f
SDLTest_Crc32Done	test/SDL_test_crc32.c	/^int SDLTest_Crc32Done(SDLTest_Crc32Context * crcContext)$/;"	f
SDLTest_Crc32Init	test/SDL_test_crc32.c	/^int SDLTest_Crc32Init(SDLTest_Crc32Context *crcContext)$/;"	f
SDLTest_DrawCharacter	test/SDL_test_font.c	/^int SDLTest_DrawCharacter(SDL_Renderer *renderer, int x, int y, char c)$/;"	f
SDLTest_DrawString	test/SDL_test_font.c	/^int SDLTest_DrawString(SDL_Renderer * renderer, int x, int y, const char *s)$/;"	f
SDLTest_FinalResultFormat	test/SDL_test_harness.c	/^const char *SDLTest_FinalResultFormat = ">>> %s '%s': %s\\n";$/;"	v
SDLTest_FontData	test/SDL_test_font.c	/^static unsigned char SDLTest_FontData[SDL_TESTFONTDATAMAX] = {$/;"	v	file:
SDLTest_FuzzerInit	test/SDL_test_fuzzer.c	/^SDLTest_FuzzerInit(Uint64 execKey)$/;"	f
SDLTest_GenerateExecKey	test/SDL_test_harness.c	/^SDLTest_GenerateExecKey(char *runSeed, char *suiteName, char *testName, int iteration)$/;"	f
SDLTest_GenerateRunSeed	test/SDL_test_harness.c	/^SDLTest_GenerateRunSeed(const int length)$/;"	f
SDLTest_GenerateSignedBoundaryValues	test/SDL_test_fuzzer.c	/^SDLTest_GenerateSignedBoundaryValues(const Sint64 minValue, const Sint64 maxValue, Sint64 boundary1, Sint64 boundary2, SDL_bool validDomain)$/;"	f
SDLTest_GenerateUnsignedBoundaryValues	test/SDL_test_fuzzer.c	/^SDLTest_GenerateUnsignedBoundaryValues(const Uint64 maxValue, Uint64 boundary1, Uint64 boundary2, SDL_bool validDomain)$/;"	f
SDLTest_GetFuzzerInvocationCount	test/SDL_test_fuzzer.c	/^SDLTest_GetFuzzerInvocationCount()$/;"	f
SDLTest_ImageBlit	test/SDL_test_imageBlit.c	/^SDL_Surface *SDLTest_ImageBlit()$/;"	f
SDLTest_ImageBlitAlpha	test/SDL_test_imageBlit.c	/^SDL_Surface *SDLTest_ImageBlitAlpha()$/;"	f
SDLTest_ImageBlitBlend	test/SDL_test_imageBlitBlend.c	/^SDL_Surface *SDLTest_ImageBlitBlend()$/;"	f
SDLTest_ImageBlitBlendAdd	test/SDL_test_imageBlitBlend.c	/^SDL_Surface *SDLTest_ImageBlitBlendAdd()$/;"	f
SDLTest_ImageBlitBlendAll	test/SDL_test_imageBlitBlend.c	/^SDL_Surface *SDLTest_ImageBlitBlendAll()$/;"	f
SDLTest_ImageBlitBlendMod	test/SDL_test_imageBlitBlend.c	/^SDL_Surface *SDLTest_ImageBlitBlendMod()$/;"	f
SDLTest_ImageBlitBlendNone	test/SDL_test_imageBlitBlend.c	/^SDL_Surface *SDLTest_ImageBlitBlendNone()$/;"	f
SDLTest_ImageBlitColor	test/SDL_test_imageBlit.c	/^SDL_Surface *SDLTest_ImageBlitColor()$/;"	f
SDLTest_ImageFace	test/SDL_test_imageFace.c	/^SDL_Surface *SDLTest_ImageFace()$/;"	f
SDLTest_ImagePrimitives	test/SDL_test_imagePrimitives.c	/^SDL_Surface *SDLTest_ImagePrimitives()$/;"	f
SDLTest_ImagePrimitivesBlend	test/SDL_test_imagePrimitivesBlend.c	/^SDL_Surface *SDLTest_ImagePrimitivesBlend()$/;"	f
SDLTest_InvalidNameFormat	test/SDL_test_harness.c	/^const char *SDLTest_InvalidNameFormat = "(Invalid)";$/;"	v
SDLTest_LoadIcon	test/SDL_test_common.c	/^SDLTest_LoadIcon(const char *file)$/;"	f	file:
SDLTest_Log	test/SDL_test_log.c	/^void SDLTest_Log(const char *fmt, ...)$/;"	f
SDLTest_LogAssertSummary	test/SDL_test_assert.c	/^void SDLTest_LogAssertSummary()$/;"	f
SDLTest_LogError	test/SDL_test_log.c	/^void SDLTest_LogError(const char *fmt, ...)$/;"	f
SDLTest_LogSummaryFormat	test/SDL_test_harness.c	/^const char *SDLTest_LogSummaryFormat = "%s Summary: Total=%d Passed=%d Failed=%d Skipped=%d";$/;"	v
SDLTest_LogTestSuiteSummary	test/SDL_test_harness.c	/^void SDLTest_LogTestSuiteSummary(SDLTest_TestSuiteReference *testSuites)$/;"	f
SDLTest_Md5Final	test/SDL_test_md5.c	/^void SDLTest_Md5Final(SDLTest_Md5Context * mdContext)$/;"	f
SDLTest_Md5Init	test/SDL_test_md5.c	/^void SDLTest_Md5Init(SDLTest_Md5Context * mdContext)$/;"	f
SDLTest_Md5Transform	test/SDL_test_md5.c	/^static void SDLTest_Md5Transform(MD5UINT4 * buf, MD5UINT4 * in)$/;"	f	file:
SDLTest_Md5Update	test/SDL_test_md5.c	/^void SDLTest_Md5Update(SDLTest_Md5Context * mdContext, unsigned char *inBuf,$/;"	f
SDLTest_PrintEvent	test/SDL_test_common.c	/^SDLTest_PrintEvent(SDL_Event * event)$/;"	f	file:
SDLTest_PrintPixelFormat	test/SDL_test_common.c	/^SDLTest_PrintPixelFormat(Uint32 format)$/;"	f	file:
SDLTest_PrintRenderer	test/SDL_test_common.c	/^SDLTest_PrintRenderer(SDL_RendererInfo * info)$/;"	f	file:
SDLTest_PrintRendererFlag	test/SDL_test_common.c	/^SDLTest_PrintRendererFlag(Uint32 flag)$/;"	f	file:
SDLTest_Random	test/SDL_test_random.c	/^unsigned int SDLTest_Random(SDLTest_RandomContext * rndContext)$/;"	f
SDLTest_RandomAsciiString	test/SDL_test_fuzzer.c	/^SDLTest_RandomAsciiString()$/;"	f
SDLTest_RandomAsciiStringOfSize	test/SDL_test_fuzzer.c	/^SDLTest_RandomAsciiStringOfSize(int size)$/;"	f
SDLTest_RandomAsciiStringWithMaximumLength	test/SDL_test_fuzzer.c	/^SDLTest_RandomAsciiStringWithMaximumLength(int maxLength)$/;"	f
SDLTest_RandomDouble	test/SDL_test_fuzzer.c	/^SDLTest_RandomDouble()$/;"	f
SDLTest_RandomFloat	test/SDL_test_fuzzer.c	/^SDLTest_RandomFloat()$/;"	f
SDLTest_RandomInit	test/SDL_test_random.c	/^void SDLTest_RandomInit(SDLTest_RandomContext * rndContext, unsigned int xi, unsigned int ci)$/;"	f
SDLTest_RandomInitTime	test/SDL_test_random.c	/^void SDLTest_RandomInitTime(SDLTest_RandomContext * rndContext)$/;"	f
SDLTest_RandomIntegerInRange	test/SDL_test_fuzzer.c	/^SDLTest_RandomIntegerInRange(Sint32 pMin, Sint32 pMax)$/;"	f
SDLTest_RandomSint16	test/SDL_test_fuzzer.c	/^SDLTest_RandomSint16()$/;"	f
SDLTest_RandomSint16BoundaryValue	test/SDL_test_fuzzer.c	/^SDLTest_RandomSint16BoundaryValue(Sint16 boundary1, Sint16 boundary2, SDL_bool validDomain)$/;"	f
SDLTest_RandomSint32	test/SDL_test_fuzzer.c	/^SDLTest_RandomSint32()$/;"	f
SDLTest_RandomSint32BoundaryValue	test/SDL_test_fuzzer.c	/^SDLTest_RandomSint32BoundaryValue(Sint32 boundary1, Sint32 boundary2, SDL_bool validDomain)$/;"	f
SDLTest_RandomSint64	test/SDL_test_fuzzer.c	/^SDLTest_RandomSint64()$/;"	f
SDLTest_RandomSint64BoundaryValue	test/SDL_test_fuzzer.c	/^SDLTest_RandomSint64BoundaryValue(Sint64 boundary1, Sint64 boundary2, SDL_bool validDomain)$/;"	f
SDLTest_RandomSint8	test/SDL_test_fuzzer.c	/^SDLTest_RandomSint8()$/;"	f
SDLTest_RandomSint8BoundaryValue	test/SDL_test_fuzzer.c	/^SDLTest_RandomSint8BoundaryValue(Sint8 boundary1, Sint8 boundary2, SDL_bool validDomain)$/;"	f
SDLTest_RandomUint16	test/SDL_test_fuzzer.c	/^SDLTest_RandomUint16()$/;"	f
SDLTest_RandomUint16BoundaryValue	test/SDL_test_fuzzer.c	/^SDLTest_RandomUint16BoundaryValue(Uint16 boundary1, Uint16 boundary2, SDL_bool validDomain)$/;"	f
SDLTest_RandomUint32	test/SDL_test_fuzzer.c	/^SDLTest_RandomUint32()$/;"	f
SDLTest_RandomUint32BoundaryValue	test/SDL_test_fuzzer.c	/^SDLTest_RandomUint32BoundaryValue(Uint32 boundary1, Uint32 boundary2, SDL_bool validDomain)$/;"	f
SDLTest_RandomUint64	test/SDL_test_fuzzer.c	/^SDLTest_RandomUint64()$/;"	f
SDLTest_RandomUint64BoundaryValue	test/SDL_test_fuzzer.c	/^SDLTest_RandomUint64BoundaryValue(Uint64 boundary1, Uint64 boundary2, SDL_bool validDomain)$/;"	f
SDLTest_RandomUint8	test/SDL_test_fuzzer.c	/^SDLTest_RandomUint8()$/;"	f
SDLTest_RandomUint8BoundaryValue	test/SDL_test_fuzzer.c	/^SDLTest_RandomUint8BoundaryValue(Uint8 boundary1, Uint8 boundary2, SDL_bool validDomain)$/;"	f
SDLTest_RandomUnitDouble	test/SDL_test_fuzzer.c	/^SDLTest_RandomUnitDouble()$/;"	f
SDLTest_RandomUnitFloat	test/SDL_test_fuzzer.c	/^SDLTest_RandomUnitFloat()$/;"	f
SDLTest_ResetAssertSummary	test/SDL_test_assert.c	/^void SDLTest_ResetAssertSummary()$/;"	f
SDLTest_RunSuites	test/SDL_test_harness.c	/^int SDLTest_RunSuites(SDLTest_TestSuiteReference *testSuites[], const char *userRunSeed, Uint64 userExecKey, const char *filter, int testIterations)$/;"	f
SDLTest_RunTest	test/SDL_test_harness.c	/^SDLTest_RunTest(SDLTest_TestSuiteReference *testSuite, SDLTest_TestCaseReference *testCase, Uint64 execKey)$/;"	f
SDLTest_ScreenShot	test/SDL_test_common.c	/^SDLTest_ScreenShot(SDL_Renderer *renderer)$/;"	f	file:
SDLTest_SetTestTimeout	test/SDL_test_harness.c	/^SDLTest_SetTestTimeout(int timeout, void (*callback)())$/;"	f
SDLTest_TestCaseTimeout	test/SDL_test_harness.c	/^static Uint32 SDLTest_TestCaseTimeout = 3600;$/;"	v	file:
SDLTest_TimestampToString	test/SDL_test_log.c	/^char *SDLTest_TimestampToString(const time_t timestamp)$/;"	f
SDLTest_imageBlit	test/SDL_test_imageBlit.c	/^const SDLTest_SurfaceImage_t SDLTest_imageBlit = {$/;"	v
SDLTest_imageBlitAlpha	test/SDL_test_imageBlit.c	/^const SDLTest_SurfaceImage_t SDLTest_imageBlitAlpha = {$/;"	v
SDLTest_imageBlitBlend	test/SDL_test_imageBlitBlend.c	/^const SDLTest_SurfaceImage_t SDLTest_imageBlitBlend = {$/;"	v
SDLTest_imageBlitBlendAdd	test/SDL_test_imageBlitBlend.c	/^const SDLTest_SurfaceImage_t SDLTest_imageBlitBlendAdd = {$/;"	v
SDLTest_imageBlitBlendAll	test/SDL_test_imageBlitBlend.c	/^const SDLTest_SurfaceImage_t SDLTest_imageBlitBlendAll = {$/;"	v
SDLTest_imageBlitBlendMod	test/SDL_test_imageBlitBlend.c	/^const SDLTest_SurfaceImage_t SDLTest_imageBlitBlendMod = {$/;"	v
SDLTest_imageBlitBlendNone	test/SDL_test_imageBlitBlend.c	/^const SDLTest_SurfaceImage_t SDLTest_imageBlitBlendNone = {$/;"	v
SDLTest_imageBlitColor	test/SDL_test_imageBlit.c	/^const SDLTest_SurfaceImage_t SDLTest_imageBlitColor = {$/;"	v
SDLTest_imageFace	test/SDL_test_imageFace.c	/^const SDLTest_SurfaceImage_t SDLTest_imageFace = {$/;"	v
SDLTest_imagePrimitives	test/SDL_test_imagePrimitives.c	/^const SDLTest_SurfaceImage_t SDLTest_imagePrimitives = {$/;"	v
SDLTest_imagePrimitivesBlend	test/SDL_test_imagePrimitivesBlend.c	/^const SDLTest_SurfaceImage_t SDLTest_imagePrimitivesBlend = {$/;"	v
SDL_ALSA_SYM	audio/alsa/SDL_alsa_audio.c	109;"	d	file:
SDL_ALSA_SYM	audio/alsa/SDL_alsa_audio.c	112;"	d	file:
SDL_ALSA_SYM	audio/alsa/SDL_alsa_audio.c	150;"	d	file:
SDL_ANDROID_BLOCK_ON_PAUSE	video/android/SDL_androidevents.c	26;"	d	file:
SDL_ARTS_SYM	audio/arts/SDL_artsaudio.c	68;"	d	file:
SDL_ARTS_SYM	audio/arts/SDL_artsaudio.c	88;"	d	file:
SDL_AbortAssertion	SDL_assert.c	/^static void SDL_AbortAssertion(void)$/;"	f	file:
SDL_AddAssertionToReport	SDL_assert.c	/^static void SDL_AddAssertionToReport(SDL_assert_data *data)$/;"	f	file:
SDL_AddAudioDevice	audio/SDL_sysaudio.h	/^typedef void (*SDL_AddAudioDevice)(const char *name);$/;"	t
SDL_AddBasicVideoDisplay	video/SDL_video.c	/^SDL_AddBasicVideoDisplay(const SDL_DisplayMode * desktop_mode)$/;"	f
SDL_AddCaptureAudioDevice	audio/SDL_audio.c	/^void SDL_AddCaptureAudioDevice(const char *_name)$/;"	f	file:
SDL_AddDisplayMode	video/SDL_video.c	/^SDL_AddDisplayMode(SDL_VideoDisplay * display,  const SDL_DisplayMode * mode)$/;"	f
SDL_AddDollarGesture	events/SDL_gesture.c	/^static int SDL_AddDollarGesture(SDL_GestureTouch* inTouch, SDL_FloatPoint* path)$/;"	f	file:
SDL_AddDollarGesture_one	events/SDL_gesture.c	/^static int SDL_AddDollarGesture_one(SDL_GestureTouch* inTouch, SDL_FloatPoint* path)$/;"	f	file:
SDL_AddEvent	events/SDL_events.c	/^SDL_AddEvent(SDL_Event * event)$/;"	f	file:
SDL_AddEventWatch	events/SDL_events.c	/^SDL_AddEventWatch(SDL_EventFilter filter, void *userdata)$/;"	f
SDL_AddFinger	events/SDL_touch.c	/^SDL_AddFinger(SDL_Touch *touch, SDL_FingerID fingerid, float x, float y, float pressure)$/;"	f	file:
SDL_AddHintCallback	SDL_hints.c	/^SDL_AddHintCallback(const char *name, SDL_HintCallback callback, void *userdata)$/;"	f
SDL_AddOutputAudioDevice	audio/SDL_audio.c	/^void SDL_AddOutputAudioDevice(const char *_name)$/;"	f	file:
SDL_AddTimer	timer/SDL_timer.c	/^SDL_AddTimer(Uint32 interval, SDL_TimerCallback callback, void *param)$/;"	f
SDL_AddTimerInternal	timer/SDL_timer.c	/^SDL_AddTimerInternal(SDL_TimerData *data, SDL_Timer *timer)$/;"	f	file:
SDL_AddTouch	events/SDL_touch.c	/^SDL_AddTouch(SDL_TouchID touchID, const char *name)$/;"	f
SDL_AddVideoDisplay	video/SDL_video.c	/^SDL_AddVideoDisplay(const SDL_VideoDisplay * display)$/;"	f
SDL_AllocAudioMem	audio/SDL_audiomem.h	23;"	d
SDL_AllocBlitMap	video/SDL_pixels.c	/^SDL_AllocBlitMap(void)$/;"	f
SDL_AllocFormat	video/SDL_pixels.c	/^SDL_AllocFormat(Uint32 pixel_format)$/;"	f
SDL_AllocPalette	video/SDL_pixels.c	/^SDL_AllocPalette(int ncolors)$/;"	f
SDL_AllocRW	file/SDL_rwops.c	/^SDL_AllocRW(void)$/;"	f
SDL_AndroidGetActivity	core/android/SDL_android.c	/^void *SDL_AndroidGetActivity()$/;"	f
SDL_AndroidGetExternalStoragePath	core/android/SDL_android.c	/^const char * SDL_AndroidGetExternalStoragePath()$/;"	f
SDL_AndroidGetExternalStorageState	core/android/SDL_android.c	/^int SDL_AndroidGetExternalStorageState()$/;"	f
SDL_AndroidGetInternalStoragePath	core/android/SDL_android.c	/^const char * SDL_AndroidGetInternalStoragePath()$/;"	f
SDL_AndroidGetJNIEnv	core/android/SDL_android.c	/^void *SDL_AndroidGetJNIEnv()$/;"	f
SDL_Android_Init	core/android/SDL_android.c	/^void SDL_Android_Init(JNIEnv* mEnv, jclass cls)$/;"	f
SDL_AppThread	main/beos/SDL_BeApp.cc	/^static SDL_Thread *SDL_AppThread = NULL;$/;"	v	file:
SDL_Appname	video/windows/SDL_windowsevents.c	/^LPTSTR SDL_Appname = NULL;$/;"	v
SDL_Appstyle	video/windows/SDL_windowsevents.c	/^Uint32 SDL_Appstyle = 0;$/;"	v
SDL_AssertionsQuit	SDL_assert.c	/^void SDL_AssertionsQuit(void)$/;"	f
SDL_AtomicCAS	atomic/SDL_atomic.c	/^SDL_AtomicCAS(SDL_atomic_t *a, int oldval, int newval)$/;"	f
SDL_AtomicCAS	atomic/SDL_atomic.c	30;"	d	file:
SDL_AtomicCASPtr	atomic/SDL_atomic.c	/^SDL_AtomicCASPtr(void **a, void *oldval, void *newval)$/;"	f
SDL_AtomicCASPtr	atomic/SDL_atomic.c	31;"	d	file:
SDL_AtomicLock	atomic/SDL_spinlock.c	/^SDL_AtomicLock(SDL_SpinLock *lock)$/;"	f
SDL_AtomicTryLock	atomic/SDL_spinlock.c	/^SDL_AtomicTryLock(SDL_SpinLock *lock)$/;"	f
SDL_AtomicUnlock	atomic/SDL_spinlock.c	/^SDL_AtomicUnlock(SDL_SpinLock *lock)$/;"	f
SDL_AudioCloseDevice_Default	audio/SDL_audio.c	/^SDL_AudioCloseDevice_Default(_THIS)$/;"	f	file:
SDL_AudioDeinitialize_Default	audio/SDL_audio.c	/^SDL_AudioDeinitialize_Default(void)$/;"	f	file:
SDL_AudioDetectDevices_Default	audio/SDL_audio.c	/^SDL_AudioDetectDevices_Default(int iscapture, SDL_AddAudioDevice addfn)$/;"	f	file:
SDL_AudioDevice	audio/SDL_sysaudio.h	/^struct SDL_AudioDevice$/;"	s
SDL_AudioDevice	audio/SDL_sysaudio.h	/^typedef struct SDL_AudioDevice SDL_AudioDevice;$/;"	t	typeref:struct:SDL_AudioDevice
SDL_AudioDriver	audio/SDL_sysaudio.h	/^typedef struct SDL_AudioDriver$/;"	s
SDL_AudioDriver	audio/SDL_sysaudio.h	/^} SDL_AudioDriver;$/;"	t	typeref:struct:SDL_AudioDriver
SDL_AudioDriverImpl	audio/SDL_sysaudio.h	/^typedef struct SDL_AudioDriverImpl$/;"	s
SDL_AudioDriverImpl	audio/SDL_sysaudio.h	/^} SDL_AudioDriverImpl;$/;"	t	typeref:struct:SDL_AudioDriverImpl
SDL_AudioGetDeviceBuf_Default	audio/SDL_audio.c	/^SDL_AudioGetDeviceBuf_Default(_THIS)$/;"	f	file:
SDL_AudioInit	audio/SDL_audio.c	/^SDL_AudioInit(const char *driver_name)$/;"	f
SDL_AudioLockDevice_Default	audio/SDL_audio.c	/^SDL_AudioLockDevice_Default(SDL_AudioDevice * device)$/;"	f	file:
SDL_AudioOpenDevice_Default	audio/SDL_audio.c	/^SDL_AudioOpenDevice_Default(_THIS, const char *devname, int iscapture)$/;"	f	file:
SDL_AudioPlayDevice_Default	audio/SDL_audio.c	/^SDL_AudioPlayDevice_Default(_THIS)$/;"	f	file:
SDL_AudioQuit	audio/SDL_audio.c	/^SDL_AudioQuit(void)$/;"	f
SDL_AudioRateFilters	audio/SDL_audio_c.h	/^} SDL_AudioRateFilters;$/;"	t	typeref:struct:__anon113
SDL_AudioStreamer	audio/SDL_sysaudio.h	/^} SDL_AudioStreamer;$/;"	t	typeref:struct:__anon107
SDL_AudioThreadInit_Default	audio/SDL_audio.c	/^SDL_AudioThreadInit_Default(_THIS)$/;"	f	file:
SDL_AudioTypeFilters	audio/SDL_audio_c.h	/^} SDL_AudioTypeFilters;$/;"	t	typeref:struct:__anon112
SDL_AudioUnlockDevice_Default	audio/SDL_audio.c	/^SDL_AudioUnlockDevice_Default(SDL_AudioDevice * device)$/;"	f	file:
SDL_AudioWaitDevice_Default	audio/SDL_audio.c	/^SDL_AudioWaitDevice_Default(_THIS)$/;"	f	file:
SDL_AudioWaitDone_Default	audio/SDL_audio.c	/^SDL_AudioWaitDone_Default(_THIS)$/;"	f	file:
SDL_BAPP_H	main/beos/SDL_BApp.h	22;"	d
SDL_BApp	main/beos/SDL_BApp.h	/^    SDL_BApp(const char* signature) :$/;"	f	class:SDL_BApp
SDL_BApp	main/beos/SDL_BApp.h	/^class SDL_BApp : public BApplication {$/;"	c
SDL_BCLIPBOARD_H	video/bwindow/SDL_bclipboard.h	25;"	d
SDL_BEVENTS_H	video/bwindow/SDL_bevents.h	23;"	d
SDL_BFRAMEBUFFER_H	video/bwindow/SDL_bframebuffer.h	23;"	d
SDL_BKEYBOARD_H	video/bwindow/SDL_bkeyboard.h	23;"	d
SDL_BMODES_H	video/bwindow/SDL_bmodes.h	23;"	d
SDL_BOPENGL_H	video/bwindow/SDL_bopengl.h	23;"	d
SDL_BWINDOW_H	video/bwindow/SDL_bwindow.h	23;"	d
SDL_BWin	video/bwindow/SDL_BWin.h	/^    SDL_BWin(BRect bounds, window_look look, uint32 flags)$/;"	f	class:SDL_BWin
SDL_BWin	video/bwindow/SDL_BWin.h	/^class SDL_BWin:public BDirectWindow$/;"	c
SDL_BeAppActive	main/beos/SDL_BeApp.cc	/^int SDL_BeAppActive = 0;$/;"	v
SDL_BlendFillRect	render/software/SDL_blendfillrect.c	/^SDL_BlendFillRect(SDL_Surface * dst, const SDL_Rect * rect,$/;"	f
SDL_BlendFillRect_ARGB8888	render/software/SDL_blendfillrect.c	/^SDL_BlendFillRect_ARGB8888(SDL_Surface * dst, const SDL_Rect * rect,$/;"	f	file:
SDL_BlendFillRect_RGB	render/software/SDL_blendfillrect.c	/^SDL_BlendFillRect_RGB(SDL_Surface * dst, const SDL_Rect * rect,$/;"	f	file:
SDL_BlendFillRect_RGB555	render/software/SDL_blendfillrect.c	/^SDL_BlendFillRect_RGB555(SDL_Surface * dst, const SDL_Rect * rect,$/;"	f	file:
SDL_BlendFillRect_RGB565	render/software/SDL_blendfillrect.c	/^SDL_BlendFillRect_RGB565(SDL_Surface * dst, const SDL_Rect * rect,$/;"	f	file:
SDL_BlendFillRect_RGB888	render/software/SDL_blendfillrect.c	/^SDL_BlendFillRect_RGB888(SDL_Surface * dst, const SDL_Rect * rect,$/;"	f	file:
SDL_BlendFillRect_RGBA	render/software/SDL_blendfillrect.c	/^SDL_BlendFillRect_RGBA(SDL_Surface * dst, const SDL_Rect * rect,$/;"	f	file:
SDL_BlendFillRects	render/software/SDL_blendfillrect.c	/^SDL_BlendFillRects(SDL_Surface * dst, const SDL_Rect * rects, int count,$/;"	f
SDL_BlendLine	render/software/SDL_blendline.c	/^SDL_BlendLine(SDL_Surface * dst, int x1, int y1, int x2, int y2,$/;"	f
SDL_BlendLine_ARGB8888	render/software/SDL_blendline.c	/^SDL_BlendLine_ARGB8888(SDL_Surface * dst, int x1, int y1, int x2, int y2,$/;"	f	file:
SDL_BlendLine_RGB2	render/software/SDL_blendline.c	/^SDL_BlendLine_RGB2(SDL_Surface * dst, int x1, int y1, int x2, int y2,$/;"	f	file:
SDL_BlendLine_RGB4	render/software/SDL_blendline.c	/^SDL_BlendLine_RGB4(SDL_Surface * dst, int x1, int y1, int x2, int y2,$/;"	f	file:
SDL_BlendLine_RGB555	render/software/SDL_blendline.c	/^SDL_BlendLine_RGB555(SDL_Surface * dst, int x1, int y1, int x2, int y2,$/;"	f	file:
SDL_BlendLine_RGB565	render/software/SDL_blendline.c	/^SDL_BlendLine_RGB565(SDL_Surface * dst, int x1, int y1, int x2, int y2,$/;"	f	file:
SDL_BlendLine_RGB888	render/software/SDL_blendline.c	/^SDL_BlendLine_RGB888(SDL_Surface * dst, int x1, int y1, int x2, int y2,$/;"	f	file:
SDL_BlendLine_RGBA4	render/software/SDL_blendline.c	/^SDL_BlendLine_RGBA4(SDL_Surface * dst, int x1, int y1, int x2, int y2,$/;"	f	file:
SDL_BlendLines	render/software/SDL_blendline.c	/^SDL_BlendLines(SDL_Surface * dst, const SDL_Point * points, int count,$/;"	f
SDL_BlendPoint	render/software/SDL_blendpoint.c	/^SDL_BlendPoint(SDL_Surface * dst, int x, int y, SDL_BlendMode blendMode, Uint8 r,$/;"	f
SDL_BlendPoint_ARGB8888	render/software/SDL_blendpoint.c	/^SDL_BlendPoint_ARGB8888(SDL_Surface * dst, int x, int y, SDL_BlendMode blendMode,$/;"	f	file:
SDL_BlendPoint_RGB	render/software/SDL_blendpoint.c	/^SDL_BlendPoint_RGB(SDL_Surface * dst, int x, int y, SDL_BlendMode blendMode, Uint8 r,$/;"	f	file:
SDL_BlendPoint_RGB555	render/software/SDL_blendpoint.c	/^SDL_BlendPoint_RGB555(SDL_Surface * dst, int x, int y, SDL_BlendMode blendMode, Uint8 r,$/;"	f	file:
SDL_BlendPoint_RGB565	render/software/SDL_blendpoint.c	/^SDL_BlendPoint_RGB565(SDL_Surface * dst, int x, int y, SDL_BlendMode blendMode, Uint8 r,$/;"	f	file:
SDL_BlendPoint_RGB888	render/software/SDL_blendpoint.c	/^SDL_BlendPoint_RGB888(SDL_Surface * dst, int x, int y, SDL_BlendMode blendMode, Uint8 r,$/;"	f	file:
SDL_BlendPoint_RGBA	render/software/SDL_blendpoint.c	/^SDL_BlendPoint_RGBA(SDL_Surface * dst, int x, int y, SDL_BlendMode blendMode, Uint8 r,$/;"	f	file:
SDL_BlendPoints	render/software/SDL_blendpoint.c	/^SDL_BlendPoints(SDL_Surface * dst, const SDL_Point * points, int count,$/;"	f
SDL_BlitCopy	video/SDL_blit_copy.c	/^SDL_BlitCopy(SDL_BlitInfo * info)$/;"	f
SDL_BlitFunc	video/SDL_blit.h	/^typedef void (SDLCALL * SDL_BlitFunc) (SDL_BlitInfo * info);$/;"	t
SDL_BlitFuncEntry	video/SDL_blit.h	/^} SDL_BlitFuncEntry;$/;"	t	typeref:struct:__anon38
SDL_BlitInfo	video/SDL_blit.h	/^} SDL_BlitInfo;$/;"	t	typeref:struct:__anon37
SDL_BlitMap	video/SDL_blit.h	/^typedef struct SDL_BlitMap$/;"	s
SDL_BlitMap	video/SDL_blit.h	/^} SDL_BlitMap;$/;"	t	typeref:struct:SDL_BlitMap
SDL_Blit_ABGR8888_ARGB8888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_ARGB8888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_ARGB8888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_ARGB8888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_ARGB8888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_ARGB8888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_ARGB8888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_ARGB8888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_ARGB8888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_ARGB8888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_BGR888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_BGR888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_BGR888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_BGR888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_BGR888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_BGR888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_BGR888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_BGR888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_BGR888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_BGR888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_BGR888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_BGR888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_BGR888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_BGR888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_RGB888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_RGB888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_RGB888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_RGB888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_RGB888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_RGB888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_RGB888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_RGB888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_RGB888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_RGB888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_RGB888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_RGB888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ABGR8888_RGB888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ABGR8888_RGB888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_ARGB8888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_ARGB8888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_ARGB8888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_ARGB8888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_ARGB8888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_ARGB8888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_ARGB8888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_ARGB8888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_ARGB8888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_ARGB8888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_BGR888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_BGR888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_BGR888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_BGR888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_BGR888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_BGR888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_BGR888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_BGR888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_BGR888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_BGR888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_BGR888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_BGR888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_BGR888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_BGR888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_RGB888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_RGB888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_RGB888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_RGB888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_RGB888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_RGB888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_RGB888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_RGB888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_RGB888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_RGB888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_RGB888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_RGB888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_ARGB8888_RGB888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_ARGB8888_RGB888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_ARGB8888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_ARGB8888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_ARGB8888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_ARGB8888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_ARGB8888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_ARGB8888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_ARGB8888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_ARGB8888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_ARGB8888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_ARGB8888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_ARGB8888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_ARGB8888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_ARGB8888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_ARGB8888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_BGR888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_BGR888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_BGR888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_BGR888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_BGR888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_BGR888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_BGR888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_BGR888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_BGR888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_BGR888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_BGR888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_BGR888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_BGR888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_BGR888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_RGB888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_RGB888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_RGB888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_RGB888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_RGB888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_RGB888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_RGB888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_RGB888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_RGB888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_RGB888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_RGB888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_RGB888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGR888_RGB888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGR888_RGB888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_ARGB8888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_ARGB8888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_ARGB8888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_ARGB8888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_ARGB8888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_ARGB8888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_ARGB8888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_ARGB8888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_ARGB8888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_ARGB8888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_BGR888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_BGR888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_BGR888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_BGR888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_BGR888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_BGR888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_BGR888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_BGR888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_BGR888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_BGR888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_BGR888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_BGR888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_BGR888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_BGR888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_RGB888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_RGB888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_RGB888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_RGB888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_RGB888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_RGB888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_RGB888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_RGB888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_RGB888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_RGB888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_RGB888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_RGB888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_BGRA8888_RGB888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_BGRA8888_RGB888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_ARGB8888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_ARGB8888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_ARGB8888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_ARGB8888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_ARGB8888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_ARGB8888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_ARGB8888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_ARGB8888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_ARGB8888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_ARGB8888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_ARGB8888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_ARGB8888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_ARGB8888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_ARGB8888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_BGR888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_BGR888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_BGR888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_BGR888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_BGR888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_BGR888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_BGR888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_BGR888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_BGR888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_BGR888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_BGR888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_BGR888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_BGR888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_BGR888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_RGB888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_RGB888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_RGB888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_RGB888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_RGB888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_RGB888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_RGB888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_RGB888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_RGB888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_RGB888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_RGB888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_RGB888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGB888_RGB888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGB888_RGB888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_ARGB8888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_ARGB8888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_ARGB8888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_ARGB8888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_ARGB8888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_ARGB8888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_ARGB8888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_ARGB8888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_ARGB8888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_ARGB8888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_BGR888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_BGR888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_BGR888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_BGR888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_BGR888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_BGR888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_BGR888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_BGR888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_BGR888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_BGR888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_BGR888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_BGR888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_BGR888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_BGR888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_RGB888_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_RGB888_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_RGB888_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_RGB888_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_RGB888_Modulate	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_RGB888_Modulate(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_RGB888_Modulate_Blend	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_RGB888_Modulate_Blend(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_RGB888_Modulate_Blend_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_RGB888_Modulate_Blend_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_RGB888_Modulate_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_RGB888_Modulate_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_RGBA8888_RGB888_Scale	video/SDL_blit_auto.c	/^static void SDL_Blit_RGBA8888_RGB888_Scale(SDL_BlitInfo *info)$/;"	f	file:
SDL_Blit_Slow	video/SDL_blit_slow.c	/^SDL_Blit_Slow(SDL_BlitInfo * info)$/;"	f
SDL_BuildAudioCVT	audio/SDL_audiocvt.c	/^SDL_BuildAudioCVT(SDL_AudioCVT * cvt,$/;"	f
SDL_BuildAudioResampleCVT	audio/SDL_audiocvt.c	/^SDL_BuildAudioResampleCVT(SDL_AudioCVT * cvt, int dst_channels,$/;"	f	file:
SDL_BuildAudioTypeCVT	audio/SDL_audiocvt.c	/^SDL_BuildAudioTypeCVT(SDL_AudioCVT * cvt,$/;"	f	file:
SDL_COPY_ADD	video/SDL_blit.h	37;"	d
SDL_COPY_BLEND	video/SDL_blit.h	36;"	d
SDL_COPY_COLORKEY	video/SDL_blit.h	39;"	d
SDL_COPY_MOD	video/SDL_blit.h	38;"	d
SDL_COPY_MODULATE_ALPHA	video/SDL_blit.h	35;"	d
SDL_COPY_MODULATE_COLOR	video/SDL_blit.h	34;"	d
SDL_COPY_NEAREST	video/SDL_blit.h	40;"	d
SDL_COPY_RLE_ALPHAKEY	video/SDL_blit.h	43;"	d
SDL_COPY_RLE_COLORKEY	video/SDL_blit.h	42;"	d
SDL_COPY_RLE_DESIRED	video/SDL_blit.h	41;"	d
SDL_COPY_RLE_MASK	video/SDL_blit.h	44;"	d
SDL_CPUCount	cpuinfo/SDL_cpuinfo.c	/^static int SDL_CPUCount = 0;$/;"	v	file:
SDL_CPUFeatures	cpuinfo/SDL_cpuinfo.c	/^static Uint32 SDL_CPUFeatures = 0xFFFFFFFF;$/;"	v	file:
SDL_CPU_3DNOW	video/SDL_blit.h	49;"	d
SDL_CPU_ALTIVEC_NOPREFETCH	video/SDL_blit.h	53;"	d
SDL_CPU_ALTIVEC_PREFETCH	video/SDL_blit.h	52;"	d
SDL_CPU_ANY	video/SDL_blit.h	47;"	d
SDL_CPU_MMX	video/SDL_blit.h	48;"	d
SDL_CPU_SSE	video/SDL_blit.h	50;"	d
SDL_CPU_SSE2	video/SDL_blit.h	51;"	d
SDL_CalculateAudioSpec	audio/SDL_audio.c	/^SDL_CalculateAudioSpec(SDL_AudioSpec * spec)$/;"	f
SDL_CalculateBlendLineFunc	render/software/SDL_blendline.c	/^SDL_CalculateBlendLineFunc(const SDL_PixelFormat * fmt)$/;"	f	file:
SDL_CalculateBlit	video/SDL_blit.c	/^SDL_CalculateBlit(SDL_Surface * surface)$/;"	f
SDL_CalculateBlit0	video/SDL_blit_0.c	/^SDL_CalculateBlit0(SDL_Surface * surface)$/;"	f
SDL_CalculateBlit1	video/SDL_blit_1.c	/^SDL_CalculateBlit1(SDL_Surface * surface)$/;"	f
SDL_CalculateBlitA	video/SDL_blit_A.c	/^SDL_CalculateBlitA(SDL_Surface * surface)$/;"	f
SDL_CalculateBlitN	video/SDL_blit_N.c	/^SDL_CalculateBlitN(SDL_Surface * surface)$/;"	f
SDL_CalculateDrawLineFunc	render/software/SDL_drawline.c	/^SDL_CalculateDrawLineFunc(const SDL_PixelFormat * fmt)$/;"	f	file:
SDL_CalculateGammaRamp	video/SDL_pixels.c	/^SDL_CalculateGammaRamp(float gamma, Uint16 * ramp)$/;"	f
SDL_CalculatePitch	video/SDL_pixels.c	/^SDL_CalculatePitch(SDL_Surface * surface)$/;"	f
SDL_CalculateShapeBitmap	video/SDL_shape.c	/^SDL_CalculateShapeBitmap(SDL_WindowShapeMode mode,SDL_Surface *shape,Uint8* bitmap,Uint8 ppb)$/;"	f
SDL_CalculateShapeTree	video/SDL_shape.c	/^SDL_CalculateShapeTree(SDL_WindowShapeMode mode,SDL_Surface* shape)$/;"	f
SDL_ChooseBlitFunc	video/SDL_blit.c	/^SDL_ChooseBlitFunc(Uint32 src_format, Uint32 dst_format, int flags,$/;"	f	file:
SDL_ClearError	SDL_error.c	/^SDL_ClearError(void)$/;"	f
SDL_ClearHints	SDL_hints.c	/^void SDL_ClearHints(void)$/;"	f
SDL_CloseAudio	audio/SDL_audio.c	/^SDL_CloseAudio(void)$/;"	f
SDL_CloseAudioDevice	audio/SDL_audio.c	/^SDL_CloseAudioDevice(SDL_AudioDeviceID devid)$/;"	f
SDL_CondBroadcast	thread/generic/SDL_syscond.c	/^SDL_CondBroadcast(SDL_cond * cond)$/;"	f
SDL_CondBroadcast	thread/psp/SDL_syscond.c	/^SDL_CondBroadcast(SDL_cond * cond)$/;"	f
SDL_CondBroadcast	thread/pthread/SDL_syscond.c	/^SDL_CondBroadcast(SDL_cond * cond)$/;"	f
SDL_CondSignal	thread/generic/SDL_syscond.c	/^SDL_CondSignal(SDL_cond * cond)$/;"	f
SDL_CondSignal	thread/psp/SDL_syscond.c	/^SDL_CondSignal(SDL_cond * cond)$/;"	f
SDL_CondSignal	thread/pthread/SDL_syscond.c	/^SDL_CondSignal(SDL_cond * cond)$/;"	f
SDL_CondWait	thread/generic/SDL_syscond.c	/^SDL_CondWait(SDL_cond * cond, SDL_mutex * mutex)$/;"	f
SDL_CondWait	thread/psp/SDL_syscond.c	/^SDL_CondWait(SDL_cond * cond, SDL_mutex * mutex)$/;"	f
SDL_CondWait	thread/pthread/SDL_syscond.c	/^SDL_CondWait(SDL_cond * cond, SDL_mutex * mutex)$/;"	f
SDL_CondWaitTimeout	thread/generic/SDL_syscond.c	/^SDL_CondWaitTimeout(SDL_cond * cond, SDL_mutex * mutex, Uint32 ms)$/;"	f
SDL_CondWaitTimeout	thread/psp/SDL_syscond.c	/^SDL_CondWaitTimeout(SDL_cond * cond, SDL_mutex * mutex, Uint32 ms)$/;"	f
SDL_CondWaitTimeout	thread/pthread/SDL_syscond.c	/^SDL_CondWaitTimeout(SDL_cond * cond, SDL_mutex * mutex, Uint32 ms)$/;"	f
SDL_ConvertAudio	audio/SDL_audiocvt.c	/^SDL_ConvertAudio(SDL_AudioCVT * cvt)$/;"	f
SDL_ConvertColorkeyToAlpha	video/SDL_surface.c	/^SDL_ConvertColorkeyToAlpha(SDL_Surface * surface)$/;"	f	file:
SDL_ConvertMono	audio/SDL_audiocvt.c	/^SDL_ConvertMono(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_ConvertPixels	video/SDL_surface.c	/^int SDL_ConvertPixels(int width, int height,$/;"	f
SDL_ConvertStereo	audio/SDL_audiocvt.c	/^SDL_ConvertStereo(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_ConvertStrip	audio/SDL_audiocvt.c	/^SDL_ConvertStrip(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_ConvertStrip_2	audio/SDL_audiocvt.c	/^SDL_ConvertStrip_2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_ConvertSurface	video/SDL_surface.c	/^SDL_ConvertSurface(SDL_Surface * surface, SDL_PixelFormat * format,$/;"	f
SDL_ConvertSurfaceFormat	video/SDL_surface.c	/^SDL_ConvertSurfaceFormat(SDL_Surface * surface, Uint32 pixel_format,$/;"	f
SDL_ConvertSurround	audio/SDL_audiocvt.c	/^SDL_ConvertSurround(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_ConvertSurround_4	audio/SDL_audiocvt.c	/^SDL_ConvertSurround_4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32LSB_to_F32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32LSB_to_F32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32LSB_to_S16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32LSB_to_S16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32LSB_to_S16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32LSB_to_S16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32LSB_to_S32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32LSB_to_S32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32LSB_to_S32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32LSB_to_S32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32LSB_to_S8	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32LSB_to_S8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32LSB_to_U16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32LSB_to_U16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32LSB_to_U16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32LSB_to_U16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32LSB_to_U8	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32LSB_to_U8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32MSB_to_F32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32MSB_to_F32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32MSB_to_S16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32MSB_to_S16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32MSB_to_S16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32MSB_to_S16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32MSB_to_S32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32MSB_to_S32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32MSB_to_S32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32MSB_to_S32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32MSB_to_S8	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32MSB_to_S8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32MSB_to_U16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32MSB_to_U16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32MSB_to_U16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32MSB_to_U16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_F32MSB_to_U8	audio/SDL_audiotypecvt.c	/^SDL_Convert_F32MSB_to_U8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16LSB_to_F32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16LSB_to_F32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16LSB_to_F32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16LSB_to_F32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16LSB_to_S16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16LSB_to_S16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16LSB_to_S32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16LSB_to_S32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16LSB_to_S32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16LSB_to_S32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16LSB_to_S8	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16LSB_to_S8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16LSB_to_U16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16LSB_to_U16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16LSB_to_U16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16LSB_to_U16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16LSB_to_U8	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16LSB_to_U8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16MSB_to_F32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16MSB_to_F32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16MSB_to_F32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16MSB_to_F32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16MSB_to_S16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16MSB_to_S16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16MSB_to_S32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16MSB_to_S32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16MSB_to_S32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16MSB_to_S32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16MSB_to_S8	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16MSB_to_S8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16MSB_to_U16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16MSB_to_U16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16MSB_to_U16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16MSB_to_U16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S16MSB_to_U8	audio/SDL_audiotypecvt.c	/^SDL_Convert_S16MSB_to_U8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32LSB_to_F32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32LSB_to_F32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32LSB_to_F32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32LSB_to_F32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32LSB_to_S16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32LSB_to_S16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32LSB_to_S16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32LSB_to_S16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32LSB_to_S32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32LSB_to_S32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32LSB_to_S8	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32LSB_to_S8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32LSB_to_U16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32LSB_to_U16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32LSB_to_U16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32LSB_to_U16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32LSB_to_U8	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32LSB_to_U8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32MSB_to_F32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32MSB_to_F32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32MSB_to_F32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32MSB_to_F32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32MSB_to_S16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32MSB_to_S16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32MSB_to_S16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32MSB_to_S16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32MSB_to_S32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32MSB_to_S32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32MSB_to_S8	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32MSB_to_S8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32MSB_to_U16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32MSB_to_U16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32MSB_to_U16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32MSB_to_U16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S32MSB_to_U8	audio/SDL_audiotypecvt.c	/^SDL_Convert_S32MSB_to_U8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S8_to_F32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S8_to_F32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S8_to_F32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S8_to_F32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S8_to_S16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S8_to_S16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S8_to_S16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S8_to_S16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S8_to_S32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S8_to_S32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S8_to_S32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S8_to_S32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S8_to_U16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S8_to_U16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S8_to_U16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_S8_to_U16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_S8_to_U8	audio/SDL_audiotypecvt.c	/^SDL_Convert_S8_to_U8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16LSB_to_F32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16LSB_to_F32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16LSB_to_F32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16LSB_to_F32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16LSB_to_S16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16LSB_to_S16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16LSB_to_S16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16LSB_to_S16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16LSB_to_S32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16LSB_to_S32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16LSB_to_S32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16LSB_to_S32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16LSB_to_S8	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16LSB_to_S8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16LSB_to_U16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16LSB_to_U16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16LSB_to_U8	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16LSB_to_U8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16MSB_to_F32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16MSB_to_F32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16MSB_to_F32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16MSB_to_F32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16MSB_to_S16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16MSB_to_S16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16MSB_to_S16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16MSB_to_S16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16MSB_to_S32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16MSB_to_S32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16MSB_to_S32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16MSB_to_S32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16MSB_to_S8	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16MSB_to_S8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16MSB_to_U16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16MSB_to_U16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U16MSB_to_U8	audio/SDL_audiotypecvt.c	/^SDL_Convert_U16MSB_to_U8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U8_to_F32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U8_to_F32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U8_to_F32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U8_to_F32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U8_to_S16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U8_to_S16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U8_to_S16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U8_to_S16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U8_to_S32LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U8_to_S32LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U8_to_S32MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U8_to_S32MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U8_to_S8	audio/SDL_audiotypecvt.c	/^SDL_Convert_U8_to_S8(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U8_to_U16LSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U8_to_U16LSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Convert_U8_to_U16MSB	audio/SDL_audiotypecvt.c	/^SDL_Convert_U8_to_U16MSB(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_CreateColorCursor	events/SDL_mouse.c	/^SDL_CreateColorCursor(SDL_Surface *surface, int hot_x, int hot_y)$/;"	f
SDL_CreateCond	thread/generic/SDL_syscond.c	/^SDL_CreateCond(void)$/;"	f
SDL_CreateCond	thread/psp/SDL_syscond.c	/^SDL_CreateCond(void)$/;"	f
SDL_CreateCond	thread/pthread/SDL_syscond.c	/^SDL_CreateCond(void)$/;"	f
SDL_CreateCursor	events/SDL_mouse.c	/^SDL_CreateCursor(const Uint8 * data, const Uint8 * mask,$/;"	f
SDL_CreateMutex	thread/generic/SDL_sysmutex.c	/^SDL_CreateMutex(void)$/;"	f
SDL_CreateMutex	thread/psp/SDL_sysmutex.c	/^SDL_CreateMutex(void)$/;"	f
SDL_CreateMutex	thread/pthread/SDL_sysmutex.c	/^SDL_CreateMutex(void)$/;"	f
SDL_CreateMutex	thread/windows/SDL_sysmutex.c	/^SDL_CreateMutex(void)$/;"	f
SDL_CreateRGBSurface	video/SDL_surface.c	/^SDL_CreateRGBSurface(Uint32 flags,$/;"	f
SDL_CreateRGBSurfaceFrom	video/SDL_surface.c	/^SDL_CreateRGBSurfaceFrom(void *pixels,$/;"	f
SDL_CreateRenderer	render/SDL_render.c	/^SDL_CreateRenderer(SDL_Window * window, int index, Uint32 flags)$/;"	f
SDL_CreateSemaphore	thread/beos/SDL_syssem.c	/^SDL_CreateSemaphore(Uint32 initial_value)$/;"	f
SDL_CreateSemaphore	thread/generic/SDL_syssem.c	/^SDL_CreateSemaphore(Uint32 initial_value)$/;"	f
SDL_CreateSemaphore	thread/psp/SDL_syssem.c	/^SDL_sem *SDL_CreateSemaphore(Uint32 initial_value)$/;"	f
SDL_CreateSemaphore	thread/pthread/SDL_syssem.c	/^SDL_CreateSemaphore(Uint32 initial_value)$/;"	f
SDL_CreateSemaphore	thread/windows/SDL_syssem.c	/^SDL_CreateSemaphore(Uint32 initial_value)$/;"	f
SDL_CreateShapedWindow	video/SDL_shape.c	/^SDL_CreateShapedWindow(const char *title,unsigned int x,unsigned int y,unsigned int w,unsigned int h,Uint32 flags)$/;"	f
SDL_CreateSoftwareRenderer	render/SDL_render.c	/^SDL_CreateSoftwareRenderer(SDL_Surface * surface)$/;"	f
SDL_CreateSurfaceOnStack	video/SDL_surface.c	/^SDL_CreateSurfaceOnStack(int width, int height, Uint32 pixel_format,$/;"	f	file:
SDL_CreateSystemCursor	events/SDL_mouse.c	/^SDL_CreateSystemCursor(SDL_SystemCursor id)$/;"	f
SDL_CreateTexture	render/SDL_render.c	/^SDL_CreateTexture(SDL_Renderer * renderer, Uint32 format, int access, int w, int h)$/;"	f
SDL_CreateTextureFromSurface	render/SDL_render.c	/^SDL_CreateTextureFromSurface(SDL_Renderer * renderer, SDL_Surface * surface)$/;"	f
SDL_CreateThread	audio/SDL_audio.c	1038;"	d	file:
SDL_CreateThread	haptic/windows/SDL_syshaptic.c	430;"	d	file:
SDL_CreateThread	joystick/windows/SDL_dxjoystick.c	747;"	d	file:
SDL_CreateThread	thread/SDL_thread.c	/^SDL_CreateThread(int (SDLCALL * fn) (void *),$/;"	f
SDL_CreateThread	thread/SDL_thread.c	283;"	d	file:
SDL_CreateThread	timer/SDL_timer.c	239;"	d	file:
SDL_CreateWindow	video/SDL_video.c	/^SDL_CreateWindow(const char *title, int x, int y, int w, int h, Uint32 flags)$/;"	f
SDL_CreateWindowAndRenderer	render/SDL_render.c	/^SDL_CreateWindowAndRenderer(int width, int height, Uint32 window_flags,$/;"	f
SDL_CreateWindowFramebuffer	video/SDL_video.c	/^SDL_CreateWindowFramebuffer(SDL_Window * window)$/;"	f	file:
SDL_CreateWindowFrom	video/SDL_video.c	/^SDL_CreateWindowFrom(const void *data)$/;"	f
SDL_CreateWindowTexture	video/SDL_video.c	/^SDL_CreateWindowTexture(_THIS, SDL_Window * window, Uint32 * format, void ** pixels, int *pitch)$/;"	f	file:
SDL_CurrentContext	render/opengl/SDL_render_gl.c	/^static SDL_GLContext SDL_CurrentContext = NULL;$/;"	v	file:
SDL_CurrentContext	render/opengles/SDL_render_gles.c	/^static SDL_GLContext SDL_CurrentContext = NULL;$/;"	v	file:
SDL_CurrentContext	render/opengles2/SDL_render_gles2.c	/^static SDL_GLContext SDL_CurrentContext = NULL;$/;"	v	file:
SDL_Cursor	events/SDL_mouse_c.h	/^struct SDL_Cursor$/;"	s
SDL_CutEvent	events/SDL_events.c	/^SDL_CutEvent(SDL_EventEntry *entry)$/;"	f	file:
SDL_DBUS_SYM	video/x11/SDL_x11video.c	79;"	d	file:
SDL_DBUS_SYM	video/x11/SDL_x11video.c	94;"	d	file:
SDL_DFB_ALLOC_CLEAR	video/directfb/SDL_DirectFB_video.h	122;"	d
SDL_DFB_CALLOC	video/directfb/SDL_DirectFB_video.h	112;"	d
SDL_DFB_CHECK	video/directfb/SDL_DirectFB_render.c	44;"	d	file:
SDL_DFB_CHECK	video/directfb/SDL_DirectFB_video.h	104;"	d
SDL_DFB_CHECK	video/directfb/SDL_DirectFB_video.h	99;"	d
SDL_DFB_CHECKERR	video/directfb/SDL_DirectFB_video.h	100;"	d
SDL_DFB_CHECKERR	video/directfb/SDL_DirectFB_video.h	105;"	d
SDL_DFB_CONTEXT	video/directfb/SDL_DirectFB_video.h	82;"	d
SDL_DFB_CURSORDATA	video/directfb/SDL_DirectFB_mouse.h	37;"	d
SDL_DFB_DEBUG	video/directfb/SDL_DirectFB_video.h	107;"	d
SDL_DFB_DEBUG	video/directfb/SDL_DirectFB_video.h	89;"	d
SDL_DFB_DEVICEDATA	video/directfb/SDL_DirectFB_video.h	126;"	d
SDL_DFB_DISPLAYDATA	video/directfb/SDL_DirectFB_modes.h	29;"	d
SDL_DFB_ERR	video/directfb/SDL_DirectFB_video.h	84;"	d
SDL_DFB_FREE	video/directfb/SDL_DirectFB_video.h	79;"	d
SDL_DFB_LOG	video/directfb/SDL_DirectFB_video.h	106;"	d
SDL_DFB_LOG	video/directfb/SDL_DirectFB_video.h	87;"	d
SDL_DFB_RELEASE	video/directfb/SDL_DirectFB_video.h	78;"	d
SDL_DFB_RENDERERDATA	video/directfb/SDL_DirectFB_render.c	52;"	d	file:
SDL_DFB_UNLOCK	video/directfb/SDL_DirectFB_video.h	80;"	d
SDL_DFB_WINDOWDATA	video/directfb/SDL_DirectFB_window.h	28;"	d
SDL_DFB_WINDOWSURFACE	video/directfb/SDL_DirectFB_render.c	122;"	d	file:
SDL_DIRECTFB_OPENGL	video/directfb/SDL_DirectFB_video.h	47;"	d
SDL_DUMMY_CreateWindowFramebuffer	video/dummy/SDL_nullframebuffer.c	/^int SDL_DUMMY_CreateWindowFramebuffer(_THIS, SDL_Window * window, Uint32 * format, void ** pixels, int *pitch)$/;"	f
SDL_DUMMY_DestroyWindowFramebuffer	video/dummy/SDL_nullframebuffer.c	/^void SDL_DUMMY_DestroyWindowFramebuffer(_THIS, SDL_Window * window)$/;"	f
SDL_DUMMY_UpdateWindowFramebuffer	video/dummy/SDL_nullframebuffer.c	/^int SDL_DUMMY_UpdateWindowFramebuffer(_THIS, SDL_Window * window, const SDL_Rect * rects, int numrects)$/;"	f
SDL_DYNX11FN_XCreateIC	video/x11/SDL_x11dyn.c	/^typedef XIC(*SDL_DYNX11FN_XCreateIC) (XIM,...);$/;"	t	file:
SDL_DYNX11FN_XGetICValues	video/x11/SDL_x11dyn.c	/^typedef char *(*SDL_DYNX11FN_XGetICValues) (XIC, ...);$/;"	t	file:
SDL_DelEventWatch	events/SDL_events.c	/^SDL_DelEventWatch(SDL_EventFilter filter, void *userdata)$/;"	f
SDL_DelFinger	events/SDL_touch.c	/^SDL_DelFinger(SDL_Touch* touch, SDL_FingerID fingerid)$/;"	f	file:
SDL_DelHintCallback	SDL_hints.c	/^SDL_DelHintCallback(const char *name, SDL_HintCallback callback, void *userdata)$/;"	f
SDL_DelTouch	events/SDL_touch.c	/^SDL_DelTouch(SDL_TouchID id)$/;"	f
SDL_Delay	timer/beos/SDL_systimer.c	/^SDL_Delay(Uint32 ms)$/;"	f
SDL_Delay	timer/dummy/SDL_systimer.c	/^SDL_Delay(Uint32 ms)$/;"	f
SDL_Delay	timer/psp/SDL_systimer.c	/^void SDL_Delay(Uint32 ms)$/;"	f
SDL_Delay	timer/unix/SDL_systimer.c	/^SDL_Delay(Uint32 ms)$/;"	f
SDL_Delay	timer/windows/SDL_systimer.c	/^SDL_Delay(Uint32 ms)$/;"	f
SDL_DestroyCond	thread/generic/SDL_syscond.c	/^SDL_DestroyCond(SDL_cond * cond)$/;"	f
SDL_DestroyCond	thread/psp/SDL_syscond.c	/^SDL_DestroyCond(SDL_cond * cond)$/;"	f
SDL_DestroyCond	thread/pthread/SDL_syscond.c	/^SDL_DestroyCond(SDL_cond * cond)$/;"	f
SDL_DestroyMutex	thread/generic/SDL_sysmutex.c	/^SDL_DestroyMutex(SDL_mutex * mutex)$/;"	f
SDL_DestroyMutex	thread/psp/SDL_sysmutex.c	/^SDL_DestroyMutex(SDL_mutex * mutex)$/;"	f
SDL_DestroyMutex	thread/pthread/SDL_sysmutex.c	/^SDL_DestroyMutex(SDL_mutex * mutex)$/;"	f
SDL_DestroyMutex	thread/windows/SDL_sysmutex.c	/^SDL_DestroyMutex(SDL_mutex * mutex)$/;"	f
SDL_DestroyRenderer	render/SDL_render.c	/^SDL_DestroyRenderer(SDL_Renderer * renderer)$/;"	f
SDL_DestroySemaphore	thread/beos/SDL_syssem.c	/^SDL_DestroySemaphore(SDL_sem * sem)$/;"	f
SDL_DestroySemaphore	thread/generic/SDL_syssem.c	/^SDL_DestroySemaphore(SDL_sem * sem)$/;"	f
SDL_DestroySemaphore	thread/psp/SDL_syssem.c	/^void SDL_DestroySemaphore(SDL_sem *sem)$/;"	f
SDL_DestroySemaphore	thread/pthread/SDL_syssem.c	/^SDL_DestroySemaphore(SDL_sem * sem)$/;"	f
SDL_DestroySemaphore	thread/windows/SDL_syssem.c	/^SDL_DestroySemaphore(SDL_sem * sem)$/;"	f
SDL_DestroyTexture	render/SDL_render.c	/^SDL_DestroyTexture(SDL_Texture * texture)$/;"	f
SDL_DestroyWindow	video/SDL_video.c	/^SDL_DestroyWindow(SDL_Window * window)$/;"	f
SDL_DestroyWindowTexture	video/SDL_video.c	/^SDL_DestroyWindowTexture(_THIS, SDL_Window * window)$/;"	f	file:
SDL_DirectFB_LoadLibrary	video/directfb/SDL_DirectFB_dyn.c	/^SDL_DirectFB_LoadLibrary(void)$/;"	f
SDL_DirectFB_Symbols	video/directfb/SDL_DirectFB_dyn.c	/^} SDL_DirectFB_Symbols;$/;"	v	typeref:struct:_SDL_DirectFB_Symbols	file:
SDL_DirectFB_UnLoadLibrary	video/directfb/SDL_DirectFB_dyn.c	/^SDL_DirectFB_UnLoadLibrary(void)$/;"	f
SDL_DisableScreenSaver	video/SDL_video.c	/^SDL_DisableScreenSaver()$/;"	f
SDL_DisabledEventBlock	events/SDL_events.c	/^} SDL_DisabledEventBlock;$/;"	t	typeref:struct:__anon59	file:
SDL_DisplayData	video/cocoa/SDL_cocoamodes.h	/^} SDL_DisplayData;$/;"	t	typeref:struct:__anon41
SDL_DisplayData	video/pandora/SDL_pandora.h	/^typedef struct SDL_DisplayData$/;"	s
SDL_DisplayData	video/pandora/SDL_pandora.h	/^} SDL_DisplayData;$/;"	t	typeref:struct:SDL_DisplayData
SDL_DisplayData	video/psp/SDL_pspvideo.h	/^typedef struct SDL_DisplayData$/;"	s
SDL_DisplayData	video/psp/SDL_pspvideo.h	/^} SDL_DisplayData;$/;"	t	typeref:struct:SDL_DisplayData
SDL_DisplayData	video/uikit/SDL_uikitmodes.h	/^} SDL_DisplayData;$/;"	t	typeref:struct:__anon29
SDL_DisplayData	video/windows/SDL_windowsmodes.h	/^} SDL_DisplayData;$/;"	t	typeref:struct:__anon50
SDL_DisplayData	video/x11/SDL_x11modes.h	/^} SDL_DisplayData;$/;"	t	typeref:struct:__anon18
SDL_DisplayModeData	video/bwindow/SDL_bmodes.cc	/^typedef struct SDL_DisplayModeData {$/;"	s	file:
SDL_DisplayModeData	video/cocoa/SDL_cocoamodes.h	/^} SDL_DisplayModeData;$/;"	t	typeref:struct:__anon42
SDL_DisplayModeData	video/uikit/SDL_uikitmodes.h	/^} SDL_DisplayModeData;$/;"	t	typeref:struct:__anon30
SDL_DisplayModeData	video/windows/SDL_windowsmodes.h	/^} SDL_DisplayModeData;$/;"	t	typeref:struct:__anon51
SDL_DisplayModeData	video/x11/SDL_x11modes.h	/^} SDL_DisplayModeData;$/;"	t	typeref:struct:__anon19
SDL_DitherColors	video/SDL_pixels.c	/^SDL_DitherColors(SDL_Color * colors, int bpp)$/;"	f
SDL_DollarPath	events/SDL_gesture.c	/^} SDL_DollarPath;$/;"	t	typeref:struct:__anon62	file:
SDL_DollarTemplate	events/SDL_gesture.c	/^} SDL_DollarTemplate;$/;"	t	typeref:struct:__anon63	file:
SDL_Downsample_F32LSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32LSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32LSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32LSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32LSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32LSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32LSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32LSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32LSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32LSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32LSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32LSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32LSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32LSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32LSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32LSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32LSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32LSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32LSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32LSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32LSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32LSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32LSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32LSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32LSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32LSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32LSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32LSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32LSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32LSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32MSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32MSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32MSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32MSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32MSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32MSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32MSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32MSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32MSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32MSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32MSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32MSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32MSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32MSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32MSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32MSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32MSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32MSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32MSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32MSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32MSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32MSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32MSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32MSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32MSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32MSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32MSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32MSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_F32MSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_F32MSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16LSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16LSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16LSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16LSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16LSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16LSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16LSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16LSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16LSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16LSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16LSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16LSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16LSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16LSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16LSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16LSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16LSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16LSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16LSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16LSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16LSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16LSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16LSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16LSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16LSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16LSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16LSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16LSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16LSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16LSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16MSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16MSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16MSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16MSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16MSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16MSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16MSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16MSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16MSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16MSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16MSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16MSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16MSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16MSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16MSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16MSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16MSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16MSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16MSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16MSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16MSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16MSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16MSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16MSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16MSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16MSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16MSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16MSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S16MSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S16MSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32LSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32LSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32LSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32LSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32LSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32LSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32LSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32LSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32LSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32LSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32LSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32LSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32LSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32LSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32LSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32LSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32LSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32LSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32LSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32LSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32LSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32LSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32LSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32LSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32LSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32LSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32LSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32LSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32LSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32LSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32MSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32MSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32MSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32MSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32MSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32MSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32MSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32MSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32MSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32MSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32MSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32MSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32MSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32MSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32MSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32MSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32MSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32MSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32MSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32MSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32MSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32MSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32MSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32MSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32MSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32MSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32MSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32MSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S32MSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S32MSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S8_1c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S8_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S8_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S8_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S8_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S8_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S8_2c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S8_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S8_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S8_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S8_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S8_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S8_4c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S8_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S8_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S8_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S8_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S8_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S8_6c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S8_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S8_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S8_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S8_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S8_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S8_8c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S8_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S8_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S8_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_S8_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_S8_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16LSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16LSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16LSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16LSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16LSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16LSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16LSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16LSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16LSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16LSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16LSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16LSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16LSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16LSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16LSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16LSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16LSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16LSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16LSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16LSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16LSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16LSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16LSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16LSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16LSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16LSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16LSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16LSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16LSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16LSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16MSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16MSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16MSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16MSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16MSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16MSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16MSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16MSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16MSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16MSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16MSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16MSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16MSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16MSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16MSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16MSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16MSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16MSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16MSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16MSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16MSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16MSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16MSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16MSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16MSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16MSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16MSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16MSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U16MSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U16MSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U8_1c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U8_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U8_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U8_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U8_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U8_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U8_2c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U8_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U8_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U8_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U8_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U8_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U8_4c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U8_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U8_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U8_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U8_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U8_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U8_6c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U8_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U8_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U8_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U8_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U8_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U8_8c	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U8_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U8_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U8_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Downsample_U8_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Downsample_U8_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_DrawLine	render/software/SDL_drawline.c	/^SDL_DrawLine(SDL_Surface * dst, int x1, int y1, int x2, int y2, Uint32 color)$/;"	f
SDL_DrawLine1	render/software/SDL_drawline.c	/^SDL_DrawLine1(SDL_Surface * dst, int x1, int y1, int x2, int y2, Uint32 color,$/;"	f	file:
SDL_DrawLine2	render/software/SDL_drawline.c	/^SDL_DrawLine2(SDL_Surface * dst, int x1, int y1, int x2, int y2, Uint32 color,$/;"	f	file:
SDL_DrawLine4	render/software/SDL_drawline.c	/^SDL_DrawLine4(SDL_Surface * dst, int x1, int y1, int x2, int y2, Uint32 color,$/;"	f	file:
SDL_DrawLines	render/software/SDL_drawline.c	/^SDL_DrawLines(SDL_Surface * dst, const SDL_Point * points, int count,$/;"	f
SDL_DrawPoint	render/software/SDL_drawpoint.c	/^SDL_DrawPoint(SDL_Surface * dst, int x, int y, Uint32 color)$/;"	f
SDL_DrawPoints	render/software/SDL_drawpoint.c	/^SDL_DrawPoints(SDL_Surface * dst, const SDL_Point * points, int count,$/;"	f
SDL_ERRBUFIZE	SDL_error.c	39;"	d	file:
SDL_ESD_SYM	audio/esd/SDL_esdaudio.c	56;"	d	file:
SDL_ESD_SYM	audio/esd/SDL_esdaudio.c	66;"	d	file:
SDL_EnableScreenSaver	video/SDL_video.c	/^SDL_EnableScreenSaver()$/;"	f
SDL_EnclosePoints	video/SDL_rect.c	/^SDL_EnclosePoints(const SDL_Point * points, int count, const SDL_Rect * clip,$/;"	f
SDL_EnumUnixAudioDevices	audio/SDL_audiodev.c	/^SDL_EnumUnixAudioDevices(int iscapture, int classic, int (*test)(int fd),$/;"	f
SDL_Error	SDL_error.c	/^SDL_Error(SDL_errorcode code)$/;"	f
SDL_EventEntry	events/SDL_events.c	/^} SDL_EventEntry;$/;"	t	typeref:struct:_SDL_EventEntry	file:
SDL_EventOK	events/SDL_events.c	/^SDL_EventFilter SDL_EventOK = NULL;$/;"	v
SDL_EventOKParam	events/SDL_events.c	/^void *SDL_EventOKParam;$/;"	v
SDL_EventQ	events/SDL_events.c	/^} SDL_EventQ = { NULL, SDL_TRUE };$/;"	v	typeref:struct:__anon60	file:
SDL_EventState	events/SDL_events.c	/^SDL_EventState(Uint32 type, int state)$/;"	f
SDL_EventWatcher	events/SDL_events.c	/^typedef struct SDL_EventWatcher {$/;"	s	file:
SDL_EventWatcher	events/SDL_events.c	/^} SDL_EventWatcher;$/;"	t	typeref:struct:SDL_EventWatcher	file:
SDL_ExitProcess	SDL_assert.c	/^static void SDL_ExitProcess(int exitcode)$/;"	f	file:
SDL_FORK_MESSAGEBOX	video/x11/SDL_x11messagebox.c	34;"	d	file:
SDL_FPoint	render/SDL_sysrender.h	/^} SDL_FPoint;$/;"	t	typeref:struct:__anon74
SDL_FRect	render/SDL_sysrender.h	/^} SDL_FRect;$/;"	t	typeref:struct:__anon75
SDL_FS_CloseDevice	audio/fusionsound/SDL_fsaudio.c	/^SDL_FS_CloseDevice(_THIS)$/;"	f	file:
SDL_FS_Deinitialize	audio/fusionsound/SDL_fsaudio.c	/^SDL_FS_Deinitialize(void)$/;"	f	file:
SDL_FS_GetDeviceBuf	audio/fusionsound/SDL_fsaudio.c	/^SDL_FS_GetDeviceBuf(_THIS)$/;"	f	file:
SDL_FS_Init	audio/fusionsound/SDL_fsaudio.c	/^SDL_FS_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
SDL_FS_OpenDevice	audio/fusionsound/SDL_fsaudio.c	/^SDL_FS_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
SDL_FS_PlayDevice	audio/fusionsound/SDL_fsaudio.c	/^SDL_FS_PlayDevice(_THIS)$/;"	f	file:
SDL_FS_SYM	audio/fusionsound/SDL_fsaudio.c	65;"	d	file:
SDL_FS_SYM	audio/fusionsound/SDL_fsaudio.c	77;"	d	file:
SDL_FS_WaitDevice	audio/fusionsound/SDL_fsaudio.c	/^SDL_FS_WaitDevice(_THIS)$/;"	f	file:
SDL_FS_WaitDone	audio/fusionsound/SDL_fsaudio.c	/^SDL_FS_WaitDone(_THIS)$/;"	f	file:
SDL_FillRect	video/SDL_fillrect.c	/^SDL_FillRect(SDL_Surface * dst, const SDL_Rect * rect, Uint32 color)$/;"	f
SDL_FillRect1	video/SDL_fillrect.c	/^SDL_FillRect1(Uint8 * pixels, int pitch, Uint32 color, int w, int h)$/;"	f	file:
SDL_FillRect1MMX	video/SDL_fillrect.c	/^SDL_FillRect1MMX(Uint8 *pixels, int pitch, Uint32 color, int w, int h)$/;"	f	file:
SDL_FillRect1SSE	video/SDL_fillrect.c	/^SDL_FillRect1SSE(Uint8 *pixels, int pitch, Uint32 color, int w, int h)$/;"	f	file:
SDL_FillRect2	video/SDL_fillrect.c	/^SDL_FillRect2(Uint8 * pixels, int pitch, Uint32 color, int w, int h)$/;"	f	file:
SDL_FillRect3	video/SDL_fillrect.c	/^SDL_FillRect3(Uint8 * pixels, int pitch, Uint32 color, int w, int h)$/;"	f	file:
SDL_FillRect4	video/SDL_fillrect.c	/^SDL_FillRect4(Uint8 * pixels, int pitch, Uint32 color, int w, int h)$/;"	f	file:
SDL_FillRects	video/SDL_fillrect.c	/^SDL_FillRects(SDL_Surface * dst, const SDL_Rect * rects, int count,$/;"	f
SDL_FilterEvents	events/SDL_events.c	/^SDL_FilterEvents(SDL_EventFilter filter, void *userdata)$/;"	f
SDL_FindColor	video/SDL_pixels.c	/^SDL_FindColor(SDL_Palette * pal, Uint8 r, Uint8 g, Uint8 b, Uint8 a)$/;"	f
SDL_FindFrequencyMultiple	audio/SDL_audiocvt.c	/^SDL_FindFrequencyMultiple(const int src_rate, const int dst_rate)$/;"	f	file:
SDL_FinishWindowCreation	video/SDL_video.c	/^SDL_FinishWindowCreation(SDL_Window *window, Uint32 flags)$/;"	f	file:
SDL_FirstAudioFormat	audio/SDL_audio.c	/^SDL_FirstAudioFormat(SDL_AudioFormat format)$/;"	f
SDL_FloatPoint	events/SDL_gesture.c	/^} SDL_FloatPoint;$/;"	t	typeref:struct:__anon61	file:
SDL_FlushEvent	events/SDL_events.c	/^SDL_FlushEvent(Uint32 type)$/;"	f
SDL_FlushEvents	events/SDL_events.c	/^SDL_FlushEvents(Uint32 minType, Uint32 maxType)$/;"	f
SDL_FormatInfo	stdlib/SDL_string.c	/^} SDL_FormatInfo;$/;"	t	typeref:struct:__anon4	file:
SDL_FreeAudioMem	audio/SDL_audiomem.h	24;"	d
SDL_FreeBlitMap	video/SDL_pixels.c	/^SDL_FreeBlitMap(SDL_BlitMap * map)$/;"	f
SDL_FreeCursor	events/SDL_mouse.c	/^SDL_FreeCursor(SDL_Cursor * cursor)$/;"	f
SDL_FreeFormat	video/SDL_pixels.c	/^SDL_FreeFormat(SDL_PixelFormat *format)$/;"	f
SDL_FreePalette	video/SDL_pixels.c	/^SDL_FreePalette(SDL_Palette * palette)$/;"	f
SDL_FreeRW	file/SDL_rwops.c	/^SDL_FreeRW(SDL_RWops * area)$/;"	f
SDL_FreeShapeTree	video/SDL_shape.c	/^SDL_FreeShapeTree(SDL_ShapeTree** shape_tree)$/;"	f
SDL_FreeSurface	video/SDL_surface.c	/^SDL_FreeSurface(SDL_Surface * surface)$/;"	f
SDL_FreeWAV	audio/SDL_wave.c	/^SDL_FreeWAV(Uint8 * audio_buf)$/;"	f
SDL_GLDriverData	video/cocoa/SDL_cocoaopengl.h	/^struct SDL_GLDriverData$/;"	s
SDL_GLDriverData	video/directfb/SDL_DirectFB_opengl.c	/^struct SDL_GLDriverData$/;"	s	file:
SDL_GLDriverData	video/psp/SDL_pspgl_c.h	/^typedef struct SDL_GLDriverData {$/;"	s
SDL_GLDriverData	video/psp/SDL_pspgl_c.h	/^}SDL_GLDriverData;$/;"	t	typeref:struct:SDL_GLDriverData
SDL_GLDriverData	video/windows/SDL_windowsopengl.h	/^struct SDL_GLDriverData$/;"	s
SDL_GLDriverData	video/x11/SDL_x11opengl.h	/^struct SDL_GLDriverData$/;"	s
SDL_GL_BindTexture	render/SDL_render.c	/^int SDL_GL_BindTexture(SDL_Texture *texture, float *texw, float *texh)$/;"	f
SDL_GL_CreateContext	video/SDL_video.c	/^SDL_GL_CreateContext(SDL_Window * window)$/;"	f
SDL_GL_DeleteContext	video/SDL_video.c	/^SDL_GL_DeleteContext(SDL_GLContext context)$/;"	f
SDL_GL_ExtensionSupported	video/SDL_video.c	/^SDL_GL_ExtensionSupported(const char *extension)$/;"	f
SDL_GL_GetAttribute	video/SDL_video.c	/^SDL_GL_GetAttribute(SDL_GLattr attr, int *value)$/;"	f
SDL_GL_GetCurrentContext	video/SDL_video.c	/^SDL_GL_GetCurrentContext(void)$/;"	f
SDL_GL_GetCurrentWindow	video/SDL_video.c	/^SDL_GL_GetCurrentWindow(void)$/;"	f
SDL_GL_GetProcAddress	video/SDL_video.c	/^SDL_GL_GetProcAddress(const char *proc)$/;"	f
SDL_GL_GetSwapInterval	video/SDL_video.c	/^SDL_GL_GetSwapInterval(void)$/;"	f
SDL_GL_LoadLibrary	video/SDL_video.c	/^SDL_GL_LoadLibrary(const char *path)$/;"	f
SDL_GL_MakeCurrent	video/SDL_video.c	/^SDL_GL_MakeCurrent(SDL_Window * window, SDL_GLContext ctx)$/;"	f
SDL_GL_SetAttribute	video/SDL_video.c	/^SDL_GL_SetAttribute(SDL_GLattr attr, int value)$/;"	f
SDL_GL_SetSwapInterval	video/SDL_video.c	/^SDL_GL_SetSwapInterval(int interval)$/;"	f
SDL_GL_SwapWindow	video/SDL_video.c	/^SDL_GL_SwapWindow(SDL_Window * window)$/;"	f
SDL_GL_UnbindTexture	render/SDL_render.c	/^int SDL_GL_UnbindTexture(SDL_Texture *texture)$/;"	f
SDL_GL_UnloadLibrary	video/SDL_video.c	/^SDL_GL_UnloadLibrary(void)$/;"	f
SDL_GameControllerAddMapping	joystick/SDL_gamecontroller.c	/^SDL_GameControllerAddMapping( const char *mappingString )$/;"	f
SDL_GameControllerClose	joystick/SDL_gamecontroller.c	/^SDL_GameControllerClose(SDL_GameController * gamecontroller)$/;"	f
SDL_GameControllerEventState	joystick/SDL_gamecontroller.c	/^SDL_GameControllerEventState(int state)$/;"	f
SDL_GameControllerEventWatcher	joystick/SDL_gamecontroller.c	/^int SDL_GameControllerEventWatcher(void *userdata, SDL_Event * event)$/;"	f
SDL_GameControllerGetAttached	joystick/SDL_gamecontroller.c	/^SDL_GameControllerGetAttached( SDL_GameController * gamecontroller )$/;"	f
SDL_GameControllerGetAxis	joystick/SDL_gamecontroller.c	/^SDL_GameControllerGetAxis(SDL_GameController * gamecontroller, SDL_GameControllerAxis axis)$/;"	f
SDL_GameControllerGetAxisFromString	joystick/SDL_gamecontroller.c	/^SDL_GameControllerAxis SDL_GameControllerGetAxisFromString( const char *pchString )$/;"	f
SDL_GameControllerGetBindForAxis	joystick/SDL_gamecontroller.c	/^SDL_GameControllerButtonBind SDL_GameControllerGetBindForAxis(SDL_GameController * gamecontroller, SDL_GameControllerAxis axis)$/;"	f
SDL_GameControllerGetBindForButton	joystick/SDL_gamecontroller.c	/^SDL_GameControllerButtonBind SDL_GameControllerGetBindForButton(SDL_GameController * gamecontroller, SDL_GameControllerButton button)$/;"	f
SDL_GameControllerGetButton	joystick/SDL_gamecontroller.c	/^SDL_GameControllerGetButton(SDL_GameController * gamecontroller, SDL_GameControllerButton button)$/;"	f
SDL_GameControllerGetButtonFromString	joystick/SDL_gamecontroller.c	/^SDL_GameControllerButton SDL_GameControllerGetButtonFromString( const char *pchString )$/;"	f
SDL_GameControllerGetJoystick	joystick/SDL_gamecontroller.c	/^SDL_Joystick *SDL_GameControllerGetJoystick(SDL_GameController * gamecontroller)$/;"	f
SDL_GameControllerGetStringForAxis	joystick/SDL_gamecontroller.c	/^const char* SDL_GameControllerGetStringForAxis( SDL_GameControllerAxis axis )$/;"	f
SDL_GameControllerGetStringForButton	joystick/SDL_gamecontroller.c	/^const char* SDL_GameControllerGetStringForButton( SDL_GameControllerButton axis )$/;"	f
SDL_GameControllerInit	joystick/SDL_gamecontroller.c	/^SDL_GameControllerInit(void)$/;"	f
SDL_GameControllerLoadHints	joystick/SDL_gamecontroller.c	/^SDL_GameControllerLoadHints()$/;"	f	file:
SDL_GameControllerMapping	joystick/SDL_gamecontroller.c	/^SDL_GameControllerMapping( SDL_GameController * gamecontroller )$/;"	f
SDL_GameControllerMappingForGUID	joystick/SDL_gamecontroller.c	/^SDL_GameControllerMappingForGUID( SDL_JoystickGUID guid )$/;"	f
SDL_GameControllerName	joystick/SDL_gamecontroller.c	/^SDL_GameControllerName(SDL_GameController * gamecontroller)$/;"	f
SDL_GameControllerNameForIndex	joystick/SDL_gamecontroller.c	/^SDL_GameControllerNameForIndex(int device_index)$/;"	f
SDL_GameControllerOpen	joystick/SDL_gamecontroller.c	/^SDL_GameControllerOpen(int device_index)$/;"	f
SDL_GameControllerQuit	joystick/SDL_gamecontroller.c	/^SDL_GameControllerQuit(void)$/;"	f
SDL_GameControllerUpdate	joystick/SDL_gamecontroller.c	/^SDL_GameControllerUpdate(void)$/;"	f
SDL_GenerateAssertionReport	SDL_assert.c	/^static void SDL_GenerateAssertionReport(void)$/;"	f	file:
SDL_GeneratedBlitFuncTable	video/SDL_blit_auto.c	/^SDL_BlitFuncEntry SDL_GeneratedBlitFuncTable[] = {$/;"	v
SDL_Generic_GetTLSData	thread/SDL_thread.c	/^SDL_Generic_GetTLSData()$/;"	f
SDL_Generic_SetTLSData	thread/SDL_thread.c	/^SDL_Generic_SetTLSData(SDL_TLSData *storage)$/;"	f
SDL_GestureAddTouch	events/SDL_gesture.c	/^int SDL_GestureAddTouch(SDL_TouchID touchId)$/;"	f
SDL_GestureProcessEvent	events/SDL_gesture.c	/^void SDL_GestureProcessEvent(SDL_Event* event)$/;"	f
SDL_GestureTouch	events/SDL_gesture.c	/^} SDL_GestureTouch;$/;"	t	typeref:struct:__anon64	file:
SDL_GetAssertionReport	SDL_assert.c	/^const SDL_assert_data *SDL_GetAssertionReport(void)$/;"	f
SDL_GetAudioDeviceName	audio/SDL_audio.c	/^SDL_GetAudioDeviceName(int index, int iscapture)$/;"	f
SDL_GetAudioDeviceStatus	audio/SDL_audio.c	/^SDL_GetAudioDeviceStatus(SDL_AudioDeviceID devid)$/;"	f
SDL_GetAudioDriver	audio/SDL_audio.c	/^SDL_GetAudioDriver(int index)$/;"	f
SDL_GetAudioStatus	audio/SDL_audio.c	/^SDL_GetAudioStatus(void)$/;"	f
SDL_GetCPUCacheLineSize	cpuinfo/SDL_cpuinfo.c	/^SDL_GetCPUCacheLineSize(void)$/;"	f
SDL_GetCPUCount	cpuinfo/SDL_cpuinfo.c	/^SDL_GetCPUCount(void)$/;"	f
SDL_GetCPUFeatures	cpuinfo/SDL_cpuinfo.c	/^SDL_GetCPUFeatures(void)$/;"	f	file:
SDL_GetCPUName	cpuinfo/SDL_cpuinfo.c	/^SDL_GetCPUName(void)$/;"	f	file:
SDL_GetCPUType	cpuinfo/SDL_cpuinfo.c	/^SDL_GetCPUType(void)$/;"	f	file:
SDL_GetClipRect	video/SDL_surface.c	/^SDL_GetClipRect(SDL_Surface * surface, SDL_Rect * rect)$/;"	f
SDL_GetClipboardText	video/SDL_clipboard.c	/^SDL_GetClipboardText(void)$/;"	f
SDL_GetClosestDisplayMode	video/SDL_video.c	/^SDL_GetClosestDisplayMode(int displayIndex,$/;"	f
SDL_GetClosestDisplayModeForDisplay	video/SDL_video.c	/^SDL_GetClosestDisplayModeForDisplay(SDL_VideoDisplay * display,$/;"	f	file:
SDL_GetColorKey	video/SDL_surface.c	/^SDL_GetColorKey(SDL_Surface * surface, Uint32 * key)$/;"	f
SDL_GetCurrentAudioDriver	audio/SDL_audio.c	/^SDL_GetCurrentAudioDriver()$/;"	f
SDL_GetCurrentDisplayMode	video/SDL_video.c	/^SDL_GetCurrentDisplayMode(int displayIndex, SDL_DisplayMode * mode)$/;"	f
SDL_GetCurrentVideoDriver	video/SDL_video.c	/^SDL_GetCurrentVideoDriver()$/;"	f
SDL_GetCursor	events/SDL_mouse.c	/^SDL_GetCursor(void)$/;"	f
SDL_GetDefaultCursor	events/SDL_mouse.c	/^SDL_GetDefaultCursor(void)$/;"	f
SDL_GetDefaultKeymap	events/SDL_keyboard.c	/^SDL_GetDefaultKeymap(SDL_Keycode * keymap)$/;"	f
SDL_GetDesktopDisplayMode	video/SDL_video.c	/^SDL_GetDesktopDisplayMode(int displayIndex, SDL_DisplayMode * mode)$/;"	f
SDL_GetDisplayBounds	video/SDL_video.c	/^SDL_GetDisplayBounds(int displayIndex, SDL_Rect * rect)$/;"	f
SDL_GetDisplayForWindow	video/SDL_video.c	/^SDL_GetDisplayForWindow(SDL_Window *window)$/;"	f
SDL_GetDisplayMode	video/SDL_video.c	/^SDL_GetDisplayMode(int displayIndex, int index, SDL_DisplayMode * mode)$/;"	f
SDL_GetDisplayName	video/SDL_video.c	/^SDL_GetDisplayName(int displayIndex)$/;"	f
SDL_GetErrBuf	SDL_error.c	34;"	d	file:
SDL_GetErrBuf	thread/SDL_thread.c	/^SDL_GetErrBuf(void)$/;"	f
SDL_GetError	SDL_error.c	/^SDL_GetError(void)$/;"	f
SDL_GetErrorMsg	SDL_error.c	/^SDL_GetErrorMsg(char *errstr, unsigned int maxlen)$/;"	f	file:
SDL_GetEventFilter	events/SDL_events.c	/^SDL_GetEventFilter(SDL_EventFilter * filter, void **userdata)$/;"	f
SDL_GetFinger	events/SDL_touch.c	/^SDL_GetFinger(const SDL_Touch * touch, SDL_FingerID id)$/;"	f
SDL_GetFingerIndex	events/SDL_touch.c	/^SDL_GetFingerIndex(const SDL_Touch * touch, SDL_FingerID fingerid)$/;"	f	file:
SDL_GetFocusWindow	video/SDL_video.c	/^SDL_GetFocusWindow(void)$/;"	f
SDL_GetGestureTouch	events/SDL_gesture.c	/^static SDL_GestureTouch * SDL_GetGestureTouch(SDL_TouchID id)$/;"	f	file:
SDL_GetHint	SDL_hints.c	/^SDL_GetHint(const char *name)$/;"	f
SDL_GetIndexOfDisplay	video/SDL_video.c	/^SDL_GetIndexOfDisplay(SDL_VideoDisplay *display)$/;"	f	file:
SDL_GetKeyFromName	events/SDL_keyboard.c	/^SDL_GetKeyFromName(const char *name)$/;"	f
SDL_GetKeyFromScancode	events/SDL_keyboard.c	/^SDL_GetKeyFromScancode(SDL_Scancode scancode)$/;"	f
SDL_GetKeyName	events/SDL_keyboard.c	/^SDL_GetKeyName(SDL_Keycode key)$/;"	f
SDL_GetKeyboardFocus	events/SDL_keyboard.c	/^SDL_GetKeyboardFocus(void)$/;"	f
SDL_GetKeyboardState	events/SDL_keyboard.c	/^SDL_GetKeyboardState(int *numkeys)$/;"	f
SDL_GetModState	events/SDL_keyboard.c	/^SDL_GetModState(void)$/;"	f
SDL_GetMouse	events/SDL_mouse.c	/^SDL_GetMouse(void)$/;"	f
SDL_GetMouseFocus	events/SDL_mouse.c	/^SDL_GetMouseFocus(void)$/;"	f
SDL_GetMouseState	events/SDL_mouse.c	/^SDL_GetMouseState(int *x, int *y)$/;"	f
SDL_GetNumAudioDevices	audio/SDL_audio.c	/^SDL_GetNumAudioDevices(int iscapture)$/;"	f
SDL_GetNumAudioDrivers	audio/SDL_audio.c	/^SDL_GetNumAudioDrivers(void)$/;"	f
SDL_GetNumDisplayModes	video/SDL_video.c	/^SDL_GetNumDisplayModes(int displayIndex)$/;"	f
SDL_GetNumDisplayModesForDisplay	video/SDL_video.c	/^SDL_GetNumDisplayModesForDisplay(SDL_VideoDisplay * display)$/;"	f	file:
SDL_GetNumRenderDrivers	render/SDL_render.c	/^SDL_GetNumRenderDrivers(void)$/;"	f
SDL_GetNumTouchDevices	events/SDL_touch.c	/^SDL_GetNumTouchDevices(void)$/;"	f
SDL_GetNumTouchFingers	events/SDL_touch.c	/^SDL_GetNumTouchFingers(SDL_TouchID touchID)$/;"	f
SDL_GetNumVideoDisplays	video/SDL_video.c	/^SDL_GetNumVideoDisplays(void)$/;"	f
SDL_GetNumVideoDrivers	video/SDL_video.c	/^SDL_GetNumVideoDrivers(void)$/;"	f
SDL_GetPerformanceCounter	timer/beos/SDL_systimer.c	/^SDL_GetPerformanceCounter(void)$/;"	f
SDL_GetPerformanceCounter	timer/dummy/SDL_systimer.c	/^SDL_GetPerformanceCounter(void)$/;"	f
SDL_GetPerformanceCounter	timer/psp/SDL_systimer.c	/^SDL_GetPerformanceCounter(void)$/;"	f
SDL_GetPerformanceCounter	timer/unix/SDL_systimer.c	/^SDL_GetPerformanceCounter(void)$/;"	f
SDL_GetPerformanceCounter	timer/windows/SDL_systimer.c	/^SDL_GetPerformanceCounter(void)$/;"	f
SDL_GetPerformanceFrequency	timer/beos/SDL_systimer.c	/^SDL_GetPerformanceFrequency(void)$/;"	f
SDL_GetPerformanceFrequency	timer/dummy/SDL_systimer.c	/^SDL_GetPerformanceFrequency(void)$/;"	f
SDL_GetPerformanceFrequency	timer/psp/SDL_systimer.c	/^SDL_GetPerformanceFrequency(void)$/;"	f
SDL_GetPerformanceFrequency	timer/unix/SDL_systimer.c	/^SDL_GetPerformanceFrequency(void)$/;"	f
SDL_GetPerformanceFrequency	timer/windows/SDL_systimer.c	/^SDL_GetPerformanceFrequency(void)$/;"	f
SDL_GetPixelFormatName	video/SDL_pixels.c	/^SDL_GetPixelFormatName(Uint32 format)$/;"	f
SDL_GetPlatform	SDL.c	/^SDL_GetPlatform()$/;"	f
SDL_GetPowerInfo	power/SDL_power.c	/^SDL_GetPowerInfo(int *seconds, int *percent)$/;"	f
SDL_GetPowerInfo_Android	power/android/SDL_syspower.c	/^SDL_GetPowerInfo_Android(SDL_PowerState * state, int *seconds, int *percent)$/;"	f
SDL_GetPowerInfo_BeOS	power/beos/SDL_syspower.c	/^SDL_GetPowerInfo_BeOS(SDL_PowerState * state, int *seconds, int *percent)$/;"	f
SDL_GetPowerInfo_Hardwired	power/SDL_power.c	/^SDL_GetPowerInfo_Hardwired(SDL_PowerState * state, int *seconds, int *percent)$/;"	f	file:
SDL_GetPowerInfo_Impl	power/SDL_power.c	/^    (*SDL_GetPowerInfo_Impl) (SDL_PowerState * state, int *seconds,$/;"	t	file:
SDL_GetPowerInfo_Linux_proc_acpi	power/linux/SDL_syspower.c	/^SDL_GetPowerInfo_Linux_proc_acpi(SDL_PowerState * state,$/;"	f
SDL_GetPowerInfo_Linux_proc_apm	power/linux/SDL_syspower.c	/^SDL_GetPowerInfo_Linux_proc_apm(SDL_PowerState * state,$/;"	f
SDL_GetPowerInfo_MacOSX	power/macosx/SDL_syspower.c	/^SDL_GetPowerInfo_MacOSX(SDL_PowerState * state, int *seconds, int *percent)$/;"	f
SDL_GetPowerInfo_PSP	power/psp/SDL_syspower.c	/^SDL_GetPowerInfo_PSP(SDL_PowerState * state, int *seconds,$/;"	f
SDL_GetPowerInfo_Windows	power/windows/SDL_syspower.c	/^SDL_GetPowerInfo_Windows(SDL_PowerState * state, int *seconds, int *percent)$/;"	f
SDL_GetRGB	video/SDL_pixels.c	/^SDL_GetRGB(Uint32 pixel, const SDL_PixelFormat * format, Uint8 * r, Uint8 * g,$/;"	f
SDL_GetRGBA	video/SDL_pixels.c	/^SDL_GetRGBA(Uint32 pixel, const SDL_PixelFormat * format,$/;"	f
SDL_GetRelativeMouseMode	events/SDL_mouse.c	/^SDL_GetRelativeMouseMode()$/;"	f
SDL_GetRelativeMouseState	events/SDL_mouse.c	/^SDL_GetRelativeMouseState(int *x, int *y)$/;"	f
SDL_GetRenderDrawBlendMode	render/SDL_render.c	/^SDL_GetRenderDrawBlendMode(SDL_Renderer * renderer, SDL_BlendMode *blendMode)$/;"	f
SDL_GetRenderDrawColor	render/SDL_render.c	/^SDL_GetRenderDrawColor(SDL_Renderer * renderer,$/;"	f
SDL_GetRenderDriverInfo	render/SDL_render.c	/^SDL_GetRenderDriverInfo(int index, SDL_RendererInfo * info)$/;"	f
SDL_GetRenderTarget	render/SDL_render.c	/^SDL_GetRenderTarget(SDL_Renderer *renderer)$/;"	f
SDL_GetRenderer	render/SDL_render.c	/^SDL_GetRenderer(SDL_Window * window)$/;"	f
SDL_GetRendererInfo	render/SDL_render.c	/^SDL_GetRendererInfo(SDL_Renderer * renderer, SDL_RendererInfo * info)$/;"	f
SDL_GetRendererOutputSize	render/SDL_render.c	/^SDL_GetRendererOutputSize(SDL_Renderer * renderer, int *w, int *h)$/;"	f
SDL_GetRevision	SDL.c	/^SDL_GetRevision(void)$/;"	f
SDL_GetRevisionNumber	SDL.c	/^SDL_GetRevisionNumber(void)$/;"	f
SDL_GetScancodeFromKey	events/SDL_keyboard.c	/^SDL_GetScancodeFromKey(SDL_Keycode key)$/;"	f
SDL_GetScancodeFromName	events/SDL_keyboard.c	/^SDL_Scancode SDL_GetScancodeFromName(const char *name)$/;"	f
SDL_GetScancodeName	events/SDL_keyboard.c	/^SDL_GetScancodeName(SDL_Scancode scancode)$/;"	f
SDL_GetShapedWindowMode	video/SDL_shape.c	/^SDL_GetShapedWindowMode(SDL_Window *window,SDL_WindowShapeMode *shape_mode)$/;"	f
SDL_GetSpanEnclosingRect	video/SDL_rect.c	/^SDL_GetSpanEnclosingRect(int width, int height,$/;"	f
SDL_GetSurfaceAlphaMod	video/SDL_surface.c	/^SDL_GetSurfaceAlphaMod(SDL_Surface * surface, Uint8 * alpha)$/;"	f
SDL_GetSurfaceBlendMode	video/SDL_surface.c	/^SDL_GetSurfaceBlendMode(SDL_Surface * surface, SDL_BlendMode *blendMode)$/;"	f
SDL_GetSurfaceColorMod	video/SDL_surface.c	/^SDL_GetSurfaceColorMod(SDL_Surface * surface, Uint8 * r, Uint8 * g, Uint8 * b)$/;"	f
SDL_GetTextureAlphaMod	render/SDL_render.c	/^SDL_GetTextureAlphaMod(SDL_Texture * texture, Uint8 * alpha)$/;"	f
SDL_GetTextureBlendMode	render/SDL_render.c	/^SDL_GetTextureBlendMode(SDL_Texture * texture, SDL_BlendMode *blendMode)$/;"	f
SDL_GetTextureColorMod	render/SDL_render.c	/^SDL_GetTextureColorMod(SDL_Texture * texture, Uint8 * r, Uint8 * g,$/;"	f
SDL_GetThreadID	thread/SDL_thread.c	/^SDL_GetThreadID(SDL_Thread * thread)$/;"	f
SDL_GetThreadName	thread/SDL_thread.c	/^SDL_GetThreadName(SDL_Thread * thread)$/;"	f
SDL_GetTicks	timer/beos/SDL_systimer.c	/^SDL_GetTicks(void)$/;"	f
SDL_GetTicks	timer/dummy/SDL_systimer.c	/^SDL_GetTicks(void)$/;"	f
SDL_GetTicks	timer/psp/SDL_systimer.c	/^Uint32 SDL_GetTicks(void)$/;"	f
SDL_GetTicks	timer/unix/SDL_systimer.c	/^SDL_GetTicks(void)$/;"	f
SDL_GetTicks	timer/windows/SDL_systimer.c	/^SDL_GetTicks(void)$/;"	f
SDL_GetTouch	events/SDL_touch.c	/^SDL_GetTouch(SDL_TouchID id)$/;"	f
SDL_GetTouchDevice	events/SDL_touch.c	/^SDL_GetTouchDevice(int index)$/;"	f
SDL_GetTouchFinger	events/SDL_touch.c	/^SDL_GetTouchFinger(SDL_TouchID touchID, int index)$/;"	f
SDL_GetTouchIndex	events/SDL_touch.c	/^SDL_GetTouchIndex(SDL_TouchID id)$/;"	f	file:
SDL_GetVersion	SDL.c	/^SDL_GetVersion(SDL_version * ver)$/;"	f
SDL_GetVideoDevice	video/SDL_video.c	/^SDL_GetVideoDevice(void)$/;"	f
SDL_GetVideoDriver	video/SDL_video.c	/^SDL_GetVideoDriver(int index)$/;"	f
SDL_GetWindowBrightness	video/SDL_video.c	/^SDL_GetWindowBrightness(SDL_Window * window)$/;"	f
SDL_GetWindowData	video/SDL_video.c	/^SDL_GetWindowData(SDL_Window * window, const char *name)$/;"	f
SDL_GetWindowDisplayIndex	video/SDL_video.c	/^SDL_GetWindowDisplayIndex(SDL_Window * window)$/;"	f
SDL_GetWindowDisplayMode	video/SDL_video.c	/^SDL_GetWindowDisplayMode(SDL_Window * window, SDL_DisplayMode * mode)$/;"	f
SDL_GetWindowFlags	video/SDL_video.c	/^SDL_GetWindowFlags(SDL_Window * window)$/;"	f
SDL_GetWindowFromID	video/SDL_video.c	/^SDL_GetWindowFromID(Uint32 id)$/;"	f
SDL_GetWindowGammaRamp	video/SDL_video.c	/^SDL_GetWindowGammaRamp(SDL_Window * window, Uint16 * red,$/;"	f
SDL_GetWindowGrab	video/SDL_video.c	/^SDL_GetWindowGrab(SDL_Window * window)$/;"	f
SDL_GetWindowID	video/SDL_video.c	/^SDL_GetWindowID(SDL_Window * window)$/;"	f
SDL_GetWindowMaximumSize	video/SDL_video.c	/^SDL_GetWindowMaximumSize(SDL_Window * window, int *max_w, int *max_h)$/;"	f
SDL_GetWindowMinimumSize	video/SDL_video.c	/^SDL_GetWindowMinimumSize(SDL_Window * window, int *min_w, int *min_h)$/;"	f
SDL_GetWindowPixelFormat	video/SDL_video.c	/^SDL_GetWindowPixelFormat(SDL_Window * window)$/;"	f
SDL_GetWindowPosition	video/SDL_video.c	/^SDL_GetWindowPosition(SDL_Window * window, int *x, int *y)$/;"	f
SDL_GetWindowSize	video/SDL_video.c	/^SDL_GetWindowSize(SDL_Window * window, int *w, int *h)$/;"	f
SDL_GetWindowSurface	video/SDL_video.c	/^SDL_GetWindowSurface(SDL_Window * window)$/;"	f
SDL_GetWindowTitle	video/SDL_video.c	/^SDL_GetWindowTitle(SDL_Window * window)$/;"	f
SDL_GetWindowWMInfo	video/SDL_video.c	/^SDL_GetWindowWMInfo(SDL_Window * window, struct SDL_SysWMinfo *info)$/;"	f
SDL_HandTunedResampleCVT	audio/SDL_audiocvt.c	/^SDL_HandTunedResampleCVT(SDL_AudioCVT * cvt, int dst_channels,$/;"	f	file:
SDL_HandTunedTypeCVT	audio/SDL_audiocvt.c	/^SDL_HandTunedTypeCVT(SDL_AudioFormat src_fmt, SDL_AudioFormat dst_fmt)$/;"	f	file:
SDL_HandleSIG	events/SDL_quit.c	/^SDL_HandleSIG(int sig)$/;"	f	file:
SDL_HapticClose	haptic/SDL_haptic.c	/^SDL_HapticClose(SDL_Haptic * haptic)$/;"	f
SDL_HapticDestroyEffect	haptic/SDL_haptic.c	/^SDL_HapticDestroyEffect(SDL_Haptic * haptic, int effect)$/;"	f
SDL_HapticEffectSupported	haptic/SDL_haptic.c	/^SDL_HapticEffectSupported(SDL_Haptic * haptic, SDL_HapticEffect * effect)$/;"	f
SDL_HapticGetEffectStatus	haptic/SDL_haptic.c	/^SDL_HapticGetEffectStatus(SDL_Haptic * haptic, int effect)$/;"	f
SDL_HapticIndex	haptic/SDL_haptic.c	/^SDL_HapticIndex(SDL_Haptic * haptic)$/;"	f
SDL_HapticInit	haptic/SDL_haptic.c	/^SDL_HapticInit(void)$/;"	f
SDL_HapticName	haptic/SDL_haptic.c	/^SDL_HapticName(int device_index)$/;"	f
SDL_HapticNewEffect	haptic/SDL_haptic.c	/^SDL_HapticNewEffect(SDL_Haptic * haptic, SDL_HapticEffect * effect)$/;"	f
SDL_HapticNumAxes	haptic/SDL_haptic.c	/^SDL_HapticNumAxes(SDL_Haptic * haptic)$/;"	f
SDL_HapticNumEffects	haptic/SDL_haptic.c	/^SDL_HapticNumEffects(SDL_Haptic * haptic)$/;"	f
SDL_HapticNumEffectsPlaying	haptic/SDL_haptic.c	/^SDL_HapticNumEffectsPlaying(SDL_Haptic * haptic)$/;"	f
SDL_HapticOpen	haptic/SDL_haptic.c	/^SDL_HapticOpen(int device_index)$/;"	f
SDL_HapticOpenFromJoystick	haptic/SDL_haptic.c	/^SDL_HapticOpenFromJoystick(SDL_Joystick * joystick)$/;"	f
SDL_HapticOpenFromMouse	haptic/SDL_haptic.c	/^SDL_HapticOpenFromMouse(void)$/;"	f
SDL_HapticOpened	haptic/SDL_haptic.c	/^SDL_HapticOpened(int device_index)$/;"	f
SDL_HapticPause	haptic/SDL_haptic.c	/^SDL_HapticPause(SDL_Haptic * haptic)$/;"	f
SDL_HapticQuery	haptic/SDL_haptic.c	/^SDL_HapticQuery(SDL_Haptic * haptic)$/;"	f
SDL_HapticQuit	haptic/SDL_haptic.c	/^SDL_HapticQuit(void)$/;"	f
SDL_HapticRumbleInit	haptic/SDL_haptic.c	/^SDL_HapticRumbleInit(SDL_Haptic * haptic)$/;"	f
SDL_HapticRumblePlay	haptic/SDL_haptic.c	/^SDL_HapticRumblePlay(SDL_Haptic * haptic, float strength, Uint32 length)$/;"	f
SDL_HapticRumbleStop	haptic/SDL_haptic.c	/^SDL_HapticRumbleStop(SDL_Haptic * haptic)$/;"	f
SDL_HapticRumbleSupported	haptic/SDL_haptic.c	/^SDL_HapticRumbleSupported(SDL_Haptic * haptic)$/;"	f
SDL_HapticRunEffect	haptic/SDL_haptic.c	/^SDL_HapticRunEffect(SDL_Haptic * haptic, int effect, Uint32 iterations)$/;"	f
SDL_HapticSetAutocenter	haptic/SDL_haptic.c	/^SDL_HapticSetAutocenter(SDL_Haptic * haptic, int autocenter)$/;"	f
SDL_HapticSetGain	haptic/SDL_haptic.c	/^SDL_HapticSetGain(SDL_Haptic * haptic, int gain)$/;"	f
SDL_HapticStopAll	haptic/SDL_haptic.c	/^SDL_HapticStopAll(SDL_Haptic * haptic)$/;"	f
SDL_HapticStopEffect	haptic/SDL_haptic.c	/^SDL_HapticStopEffect(SDL_Haptic * haptic, int effect)$/;"	f
SDL_HapticUnpause	haptic/SDL_haptic.c	/^SDL_HapticUnpause(SDL_Haptic * haptic)$/;"	f
SDL_HapticUpdateEffect	haptic/SDL_haptic.c	/^SDL_HapticUpdateEffect(SDL_Haptic * haptic, int effect,$/;"	f
SDL_Has3DNow	cpuinfo/SDL_cpuinfo.c	/^SDL_Has3DNow(void)$/;"	f
SDL_HasAltiVec	cpuinfo/SDL_cpuinfo.c	/^SDL_HasAltiVec(void)$/;"	f
SDL_HasClipboardText	video/SDL_clipboard.c	/^SDL_HasClipboardText(void)$/;"	f
SDL_HasEvent	events/SDL_events.c	/^SDL_HasEvent(Uint32 type)$/;"	f
SDL_HasEvents	events/SDL_events.c	/^SDL_HasEvents(Uint32 minType, Uint32 maxType)$/;"	f
SDL_HasIntersection	video/SDL_rect.c	/^SDL_HasIntersection(const SDL_Rect * A, const SDL_Rect * B)$/;"	f
SDL_HasMMX	cpuinfo/SDL_cpuinfo.c	/^SDL_HasMMX(void)$/;"	f
SDL_HasRDTSC	cpuinfo/SDL_cpuinfo.c	/^SDL_HasRDTSC(void)$/;"	f
SDL_HasSSE	cpuinfo/SDL_cpuinfo.c	/^SDL_HasSSE(void)$/;"	f
SDL_HasSSE2	cpuinfo/SDL_cpuinfo.c	/^SDL_HasSSE2(void)$/;"	f
SDL_HasSSE3	cpuinfo/SDL_cpuinfo.c	/^SDL_HasSSE3(void)$/;"	f
SDL_HasSSE41	cpuinfo/SDL_cpuinfo.c	/^SDL_HasSSE41(void)$/;"	f
SDL_HasSSE42	cpuinfo/SDL_cpuinfo.c	/^SDL_HasSSE42(void)$/;"	f
SDL_HasScreenKeyboardSupport	video/SDL_video.c	/^SDL_HasScreenKeyboardSupport(void)$/;"	f
SDL_HashDollar	events/SDL_gesture.c	/^static unsigned long SDL_HashDollar(SDL_FloatPoint* points)$/;"	f	file:
SDL_HelperWindow	video/windows/SDL_windowswindow.c	/^HWND SDL_HelperWindow = NULL;$/;"	v
SDL_HelperWindowClass	video/windows/SDL_windowswindow.c	/^static ATOM SDL_HelperWindowClass = 0;$/;"	v	file:
SDL_HelperWindowClassName	video/windows/SDL_windowswindow.c	/^static WCHAR *SDL_HelperWindowClassName = TEXT("SDLHelperWindowInputCatcher");$/;"	v	file:
SDL_HelperWindowCreate	video/windows/SDL_windowswindow.c	/^SDL_HelperWindowCreate(void)$/;"	f
SDL_HelperWindowDestroy	video/windows/SDL_windowswindow.c	/^SDL_HelperWindowDestroy(void)$/;"	f
SDL_HelperWindowName	video/windows/SDL_windowswindow.c	/^static WCHAR *SDL_HelperWindowName = TEXT("SDLHelperWindowInputMsgWindow");$/;"	v	file:
SDL_HideWindow	video/SDL_video.c	/^SDL_HideWindow(SDL_Window * window)$/;"	f
SDL_Hint	SDL_hints.c	/^typedef struct SDL_Hint {$/;"	s	file:
SDL_Hint	SDL_hints.c	/^} SDL_Hint;$/;"	t	typeref:struct:SDL_Hint	file:
SDL_HintWatch	SDL_hints.c	/^typedef struct SDL_HintWatch {$/;"	s	file:
SDL_HintWatch	SDL_hints.c	/^} SDL_HintWatch;$/;"	t	typeref:struct:SDL_HintWatch	file:
SDL_INCLUDED_XLIBINT_H	video/x11/SDL_x11dyn.h	36;"	d
SDL_Init	SDL.c	/^SDL_Init(Uint32 flags)$/;"	f
SDL_InitBeApp	main/beos/SDL_BeApp.cc	/^SDL_InitBeApp(void)$/;"	f
SDL_InitFormat	video/SDL_pixels.c	/^SDL_InitFormat(SDL_PixelFormat * format, Uint32 pixel_format)$/;"	f
SDL_InitSubSystem	SDL.c	/^SDL_InitSubSystem(Uint32 flags)$/;"	f
SDL_InitTicks	timer/SDL_timer.c	/^SDL_InitTicks(void)$/;"	f
SDL_Instance	video/windows/SDL_windowsevents.c	/^HINSTANCE SDL_Instance = NULL;$/;"	v
SDL_IntersectRect	video/SDL_rect.c	/^SDL_IntersectRect(const SDL_Rect * A, const SDL_Rect * B, SDL_Rect * result)$/;"	f
SDL_IntersectRectAndLine	video/SDL_rect.c	/^SDL_IntersectRectAndLine(const SDL_Rect * rect, int *X1, int *Y1, int *X2,$/;"	f
SDL_InvalidateMap	video/SDL_pixels.c	/^SDL_InvalidateMap(SDL_BlitMap * map)$/;"	f
SDL_IsEqualGUID	video/windows/SDL_windowskeyboard.c	273;"	d	file:
SDL_IsEqualIID	video/windows/SDL_windowskeyboard.c	272;"	d	file:
SDL_IsGameController	joystick/SDL_gamecontroller.c	/^SDL_IsGameController(int device_index)$/;"	f
SDL_IsScreenKeyboardShown	video/SDL_video.c	/^SDL_IsScreenKeyboardShown(SDL_Window *window)$/;"	f
SDL_IsScreenSaverEnabled	video/SDL_video.c	/^SDL_IsScreenSaverEnabled()$/;"	f
SDL_IsShapedWindow	video/SDL_shape.c	/^SDL_IsShapedWindow(const SDL_Window *window)$/;"	f
SDL_IsTextInputActive	video/SDL_video.c	/^SDL_IsTextInputActive(void)$/;"	f
SDL_JoystickAllowBackgroundEventsChanged	joystick/SDL_joystick.c	/^SDL_JoystickAllowBackgroundEventsChanged(void *userdata, const char *name, const char *oldValue, const char *hint)$/;"	f	file:
SDL_JoystickClose	joystick/SDL_joystick.c	/^SDL_JoystickClose(SDL_Joystick * joystick)$/;"	f
SDL_JoystickEventState	joystick/SDL_joystick.c	/^SDL_JoystickEventState(int state)$/;"	f
SDL_JoystickGetAttached	joystick/SDL_joystick.c	/^SDL_JoystickGetAttached(SDL_Joystick * joystick)$/;"	f
SDL_JoystickGetAxis	joystick/SDL_joystick.c	/^SDL_JoystickGetAxis(SDL_Joystick * joystick, int axis)$/;"	f
SDL_JoystickGetBall	joystick/SDL_joystick.c	/^SDL_JoystickGetBall(SDL_Joystick * joystick, int ball, int *dx, int *dy)$/;"	f
SDL_JoystickGetButton	joystick/SDL_joystick.c	/^SDL_JoystickGetButton(SDL_Joystick * joystick, int button)$/;"	f
SDL_JoystickGetDeviceGUID	joystick/SDL_joystick.c	/^SDL_JoystickGUID SDL_JoystickGetDeviceGUID(int device_index)$/;"	f
SDL_JoystickGetGUID	joystick/SDL_joystick.c	/^SDL_JoystickGUID SDL_JoystickGetGUID(SDL_Joystick * joystick)$/;"	f
SDL_JoystickGetGUIDFromString	joystick/SDL_joystick.c	/^SDL_JoystickGUID SDL_JoystickGetGUIDFromString(const char *pchGUID)$/;"	f
SDL_JoystickGetGUIDString	joystick/SDL_joystick.c	/^void SDL_JoystickGetGUIDString( SDL_JoystickGUID guid, char *pszGUID, int cbGUID )$/;"	f
SDL_JoystickGetHat	joystick/SDL_joystick.c	/^SDL_JoystickGetHat(SDL_Joystick * joystick, int hat)$/;"	f
SDL_JoystickInit	joystick/SDL_joystick.c	/^SDL_JoystickInit(void)$/;"	f
SDL_JoystickInstanceID	joystick/SDL_joystick.c	/^SDL_JoystickInstanceID(SDL_Joystick * joystick)$/;"	f
SDL_JoystickIsHaptic	haptic/SDL_haptic.c	/^SDL_JoystickIsHaptic(SDL_Joystick * joystick)$/;"	f
SDL_JoystickName	joystick/SDL_joystick.c	/^SDL_JoystickName(SDL_Joystick * joystick)$/;"	f
SDL_JoystickNameForIndex	joystick/SDL_joystick.c	/^SDL_JoystickNameForIndex(int device_index)$/;"	f
SDL_JoystickNumAxes	joystick/SDL_joystick.c	/^SDL_JoystickNumAxes(SDL_Joystick * joystick)$/;"	f
SDL_JoystickNumBalls	joystick/SDL_joystick.c	/^SDL_JoystickNumBalls(SDL_Joystick * joystick)$/;"	f
SDL_JoystickNumButtons	joystick/SDL_joystick.c	/^SDL_JoystickNumButtons(SDL_Joystick * joystick)$/;"	f
SDL_JoystickNumHats	joystick/SDL_joystick.c	/^SDL_JoystickNumHats(SDL_Joystick * joystick)$/;"	f
SDL_JoystickOpen	joystick/SDL_joystick.c	/^SDL_JoystickOpen(int device_index)$/;"	f
SDL_JoystickQuit	joystick/SDL_joystick.c	/^SDL_JoystickQuit(void)$/;"	f
SDL_JoystickThread	joystick/windows/SDL_dxjoystick.c	/^SDL_JoystickThread(void *_data)$/;"	f	file:
SDL_JoystickUpdate	joystick/SDL_joystick.c	/^SDL_JoystickUpdate(void)$/;"	f
SDL_Keyboard	events/SDL_keyboard.c	/^struct SDL_Keyboard$/;"	s	file:
SDL_Keyboard	events/SDL_keyboard.c	/^typedef struct SDL_Keyboard SDL_Keyboard;$/;"	t	typeref:struct:SDL_Keyboard	file:
SDL_KeyboardInit	events/SDL_keyboard.c	/^SDL_KeyboardInit(void)$/;"	f
SDL_KeyboardQuit	events/SDL_keyboard.c	/^SDL_KeyboardQuit(void)$/;"	f
SDL_LoadBMP_RW	video/SDL_bmp.c	/^SDL_LoadBMP_RW(SDL_RWops * src, int freesrc)$/;"	f
SDL_LoadDollarTemplates	events/SDL_gesture.c	/^int SDL_LoadDollarTemplates(SDL_TouchID touchId, SDL_RWops *src)$/;"	f
SDL_LoadFunction	loadso/beos/SDL_sysloadso.c	/^SDL_LoadFunction(void *handle, const char *name)$/;"	f
SDL_LoadFunction	loadso/dlopen/SDL_sysloadso.c	/^SDL_LoadFunction(void *handle, const char *name)$/;"	f
SDL_LoadFunction	loadso/dummy/SDL_sysloadso.c	/^SDL_LoadFunction(void *handle, const char *name)$/;"	f
SDL_LoadFunction	loadso/windows/SDL_sysloadso.c	/^SDL_LoadFunction(void *handle, const char *name)$/;"	f
SDL_LoadObject	loadso/beos/SDL_sysloadso.c	/^SDL_LoadObject(const char *sofile)$/;"	f
SDL_LoadObject	loadso/dlopen/SDL_sysloadso.c	/^SDL_LoadObject(const char *sofile)$/;"	f
SDL_LoadObject	loadso/dummy/SDL_sysloadso.c	/^SDL_LoadObject(const char *sofile)$/;"	f
SDL_LoadObject	loadso/windows/SDL_sysloadso.c	/^SDL_LoadObject(const char *sofile)$/;"	f
SDL_LoadWAV_RW	audio/SDL_wave.c	/^SDL_LoadWAV_RW(SDL_RWops * src, int freesrc,$/;"	f
SDL_LockAudio	audio/SDL_audio.c	/^SDL_LockAudio(void)$/;"	f
SDL_LockAudioDevice	audio/SDL_audio.c	/^SDL_LockAudioDevice(SDL_AudioDeviceID devid)$/;"	f
SDL_LockMutex	thread/generic/SDL_sysmutex.c	/^SDL_LockMutex(SDL_mutex * mutex)$/;"	f
SDL_LockMutex	thread/pthread/SDL_sysmutex.c	/^SDL_LockMutex(SDL_mutex * mutex)$/;"	f
SDL_LockMutex	thread/windows/SDL_sysmutex.c	/^SDL_LockMutex(SDL_mutex * mutex)$/;"	f
SDL_LockSurface	video/SDL_surface.c	/^SDL_LockSurface(SDL_Surface * surface)$/;"	f
SDL_LockTexture	render/SDL_render.c	/^SDL_LockTexture(SDL_Texture * texture, const SDL_Rect * rect,$/;"	f
SDL_LockTextureNative	render/SDL_render.c	/^SDL_LockTextureNative(SDL_Texture * texture, const SDL_Rect * rect,$/;"	f	file:
SDL_LockTextureYUV	render/SDL_render.c	/^SDL_LockTextureYUV(SDL_Texture * texture, const SDL_Rect * rect,$/;"	f	file:
SDL_Log	SDL_log.c	/^SDL_Log(const char *fmt, ...)$/;"	f
SDL_LogCritical	SDL_log.c	/^SDL_LogCritical(int category, const char *fmt, ...)$/;"	f
SDL_LogDebug	SDL_log.c	/^SDL_LogDebug(int category, const char *fmt, ...)$/;"	f
SDL_LogError	SDL_log.c	/^SDL_LogError(int category, const char *fmt, ...)$/;"	f
SDL_LogGetOutputFunction	SDL_log.c	/^SDL_LogGetOutputFunction(SDL_LogOutputFunction *callback, void **userdata)$/;"	f
SDL_LogGetPriority	SDL_log.c	/^SDL_LogGetPriority(int category)$/;"	f
SDL_LogInfo	SDL_log.c	/^SDL_LogInfo(int category, const char *fmt, ...)$/;"	f
SDL_LogLevel	SDL_log.c	/^typedef struct SDL_LogLevel$/;"	s	file:
SDL_LogLevel	SDL_log.c	/^} SDL_LogLevel;$/;"	t	typeref:struct:SDL_LogLevel	file:
SDL_LogMessage	SDL_log.c	/^SDL_LogMessage(int category, SDL_LogPriority priority, const char *fmt, ...)$/;"	f
SDL_LogMessageV	SDL_log.c	/^SDL_LogMessageV(int category, SDL_LogPriority priority, const char *fmt, va_list ap)$/;"	f
SDL_LogOutput	SDL_log.c	/^SDL_LogOutput(void *userdata, int category, SDL_LogPriority priority,$/;"	f	file:
SDL_LogResetPriorities	SDL_log.c	/^SDL_LogResetPriorities(void)$/;"	f
SDL_LogSetAllPriority	SDL_log.c	/^SDL_LogSetAllPriority(SDL_LogPriority priority)$/;"	f
SDL_LogSetOutputFunction	SDL_log.c	/^SDL_LogSetOutputFunction(SDL_LogOutputFunction callback, void *userdata)$/;"	f
SDL_LogSetPriority	SDL_log.c	/^SDL_LogSetPriority(int category, SDL_LogPriority priority)$/;"	f
SDL_LogVerbose	SDL_log.c	/^SDL_LogVerbose(int category, const char *fmt, ...)$/;"	f
SDL_LogWarn	SDL_log.c	/^SDL_LogWarn(int category, const char *fmt, ...)$/;"	f
SDL_LookupString	SDL_error.c	/^SDL_LookupString(const char *key)$/;"	f	file:
SDL_LowerBlit	video/SDL_surface.c	/^SDL_LowerBlit(SDL_Surface * src, SDL_Rect * srcrect,$/;"	f
SDL_LowerBlitScaled	video/SDL_surface.c	/^SDL_LowerBlitScaled(SDL_Surface * src, SDL_Rect * srcrect,$/;"	f
SDL_MAKE_RGB	video/x11/SDL_x11messagebox.c	61;"	d	file:
SDL_MAX_QUEUED_EVENTS	events/SDL_events.c	37;"	d	file:
SDL_MainIsReady	SDL.c	/^static SDL_bool SDL_MainIsReady = SDL_FALSE;$/;"	v	file:
SDL_MainIsReady	SDL.c	/^static SDL_bool SDL_MainIsReady = SDL_TRUE;$/;"	v	file:
SDL_MapRGB	video/SDL_pixels.c	/^SDL_MapRGB(const SDL_PixelFormat * format, Uint8 r, Uint8 g, Uint8 b)$/;"	f
SDL_MapRGBA	video/SDL_pixels.c	/^SDL_MapRGBA(const SDL_PixelFormat * format, Uint8 r, Uint8 g, Uint8 b,$/;"	f
SDL_MapSurface	video/SDL_pixels.c	/^SDL_MapSurface(SDL_Surface * src, SDL_Surface * dst)$/;"	f
SDL_MaskSignals	thread/beos/SDL_systhread.c	/^SDL_MaskSignals(sigset_t * omask)$/;"	f
SDL_MasksToPixelFormatEnum	video/SDL_pixels.c	/^SDL_MasksToPixelFormatEnum(int bpp, Uint32 Rmask, Uint32 Gmask, Uint32 Bmask,$/;"	f
SDL_MaximizeWindow	video/SDL_video.c	/^SDL_MaximizeWindow(SDL_Window * window)$/;"	f
SDL_MessageBoxButtonDataX11	video/x11/SDL_x11messagebox.c	/^typedef struct SDL_MessageBoxButtonDataX11 {$/;"	s	file:
SDL_MessageBoxButtonDataX11	video/x11/SDL_x11messagebox.c	/^} SDL_MessageBoxButtonDataX11;$/;"	t	typeref:struct:SDL_MessageBoxButtonDataX11	file:
SDL_MessageBoxDataX11	video/x11/SDL_x11messagebox.c	/^typedef struct SDL_MessageBoxDataX11$/;"	s	file:
SDL_MessageBoxDataX11	video/x11/SDL_x11messagebox.c	/^} SDL_MessageBoxDataX11;$/;"	t	typeref:struct:SDL_MessageBoxDataX11	file:
SDL_MessageboxValidForDriver	video/SDL_video.c	/^static SDL_bool SDL_MessageboxValidForDriver(const SDL_MessageBoxData *messageboxdata, SDL_SYSWM_TYPE drivertype)$/;"	f	file:
SDL_MinimizeWindow	video/SDL_video.c	/^SDL_MinimizeWindow(SDL_Window * window)$/;"	f
SDL_MixAudio	audio/SDL_audio.c	/^SDL_MixAudio(Uint8 * dst, const Uint8 * src, Uint32 len, int volume)$/;"	f
SDL_MixAudioFormat	audio/SDL_mixer.c	/^SDL_MixAudioFormat(Uint8 * dst, const Uint8 * src, SDL_AudioFormat format,$/;"	f
SDL_Mouse	events/SDL_mouse_c.h	/^} SDL_Mouse;$/;"	t	typeref:struct:__anon65
SDL_MouseData	video/cocoa/SDL_cocoamouse.h	/^} SDL_MouseData;$/;"	t	typeref:struct:__anon40
SDL_MouseID	events/SDL_mouse_c.h	/^typedef Uint32 SDL_MouseID;$/;"	t
SDL_MouseInit	events/SDL_mouse.c	/^SDL_MouseInit(void)$/;"	f
SDL_MouseIsHaptic	haptic/SDL_haptic.c	/^SDL_MouseIsHaptic(void)$/;"	f
SDL_MouseQuit	events/SDL_mouse.c	/^SDL_MouseQuit(void)$/;"	f
SDL_NAME	audio/arts/SDL_artsaudio.c	43;"	d	file:
SDL_NAME	audio/esd/SDL_esdaudio.c	43;"	d	file:
SDL_NAME	audio/fusionsound/SDL_fsaudio.c	46;"	d	file:
SDL_NAS_SYM	audio/nas/SDL_nasaudio.c	71;"	d	file:
SDL_NAS_SYM	audio/nas/SDL_nasaudio.c	74;"	d	file:
SDL_NAS_SYM	audio/nas/SDL_nasaudio.c	92;"	d	file:
SDL_NextAudioFormat	audio/SDL_audio.c	/^SDL_NextAudioFormat(void)$/;"	f
SDL_NumHaptics	haptic/SDL_haptic.c	/^SDL_NumHaptics(void)$/;"	f
SDL_NumJoysticks	joystick/SDL_joystick.c	/^SDL_NumJoysticks(void)$/;"	f
SDL_OnWindowEnter	video/SDL_video.c	/^SDL_OnWindowEnter(SDL_Window * window)$/;"	f
SDL_OnWindowFocusGained	video/SDL_video.c	/^SDL_OnWindowFocusGained(SDL_Window * window)$/;"	f
SDL_OnWindowFocusLost	video/SDL_video.c	/^SDL_OnWindowFocusLost(SDL_Window * window)$/;"	f
SDL_OnWindowHidden	video/SDL_video.c	/^SDL_OnWindowHidden(SDL_Window * window)$/;"	f
SDL_OnWindowLeave	video/SDL_video.c	/^SDL_OnWindowLeave(SDL_Window * window)$/;"	f
SDL_OnWindowMinimized	video/SDL_video.c	/^SDL_OnWindowMinimized(SDL_Window * window)$/;"	f
SDL_OnWindowResized	video/SDL_video.c	/^SDL_OnWindowResized(SDL_Window * window)$/;"	f
SDL_OnWindowRestored	video/SDL_video.c	/^SDL_OnWindowRestored(SDL_Window * window)$/;"	f
SDL_OnWindowShown	video/SDL_video.c	/^SDL_OnWindowShown(SDL_Window * window)$/;"	f
SDL_OpenAudio	audio/SDL_audio.c	/^SDL_OpenAudio(SDL_AudioSpec * desired, SDL_AudioSpec * obtained)$/;"	f
SDL_OpenAudioDevice	audio/SDL_audio.c	/^SDL_OpenAudioDevice(const char *device, int iscapture,$/;"	f
SDL_PROC	render/opengl/SDL_render_gl.c	122;"	d	file:
SDL_PROC	render/opengl/SDL_render_gl.c	124;"	d	file:
SDL_PROC	render/opengl/SDL_render_gl.c	257;"	d	file:
SDL_PROC	render/opengl/SDL_render_gl.c	269;"	d	file:
SDL_PROC	render/opengles/SDL_render_gles.c	115;"	d	file:
SDL_PROC	render/opengles/SDL_render_gles.c	117;"	d	file:
SDL_PROC	render/opengles/SDL_render_gles.c	185;"	d	file:
SDL_PROC	render/opengles/SDL_render_gles.c	197;"	d	file:
SDL_PROC	render/opengles2/SDL_render_gles2.c	146;"	d	file:
SDL_PROC	render/opengles2/SDL_render_gles2.c	148;"	d	file:
SDL_PROC	render/opengles2/SDL_render_gles2.c	186;"	d	file:
SDL_PROC	render/opengles2/SDL_render_gles2.c	198;"	d	file:
SDL_PROC_UNUSED	render/opengl/SDL_glfuncs.h	5;"	d
SDL_PULSEAUDIO_SYM	audio/pulseaudio/SDL_pulseaudio.c	128;"	d	file:
SDL_PULSEAUDIO_SYM	audio/pulseaudio/SDL_pulseaudio.c	161;"	d	file:
SDL_ParseAudioFormat	audio/SDL_audio.c	/^SDL_ParseAudioFormat(const char *string)$/;"	f	file:
SDL_PauseAudio	audio/SDL_audio.c	/^SDL_PauseAudio(int pause_on)$/;"	f
SDL_PauseAudioDevice	audio/SDL_audio.c	/^SDL_PauseAudioDevice(SDL_AudioDeviceID devid, int pause_on)$/;"	f
SDL_PeepEvents	events/SDL_events.c	/^SDL_PeepEvents(SDL_Event * events, int numevents, SDL_eventaction action,$/;"	f
SDL_PixelFormatEnumToMasks	video/SDL_pixels.c	/^SDL_PixelFormatEnumToMasks(Uint32 format, int *bpp, Uint32 * Rmask,$/;"	f
SDL_PollEvent	events/SDL_events.c	/^SDL_PollEvent(SDL_Event * event)$/;"	f
SDL_PrintFloat	stdlib/SDL_string.c	/^SDL_PrintFloat(char *text, size_t maxlen, SDL_FormatInfo *info, double arg)$/;"	f	file:
SDL_PrintLong	stdlib/SDL_string.c	/^SDL_PrintLong(char *text, size_t maxlen, SDL_FormatInfo *info, long value)$/;"	f	file:
SDL_PrintLongLong	stdlib/SDL_string.c	/^SDL_PrintLongLong(char *text, size_t maxlen, SDL_FormatInfo *info, Sint64 value)$/;"	f	file:
SDL_PrintString	stdlib/SDL_string.c	/^SDL_PrintString(char *text, size_t maxlen, SDL_FormatInfo *info, const char *string)$/;"	f	file:
SDL_PrintUnsignedLong	stdlib/SDL_string.c	/^SDL_PrintUnsignedLong(char *text, size_t maxlen, SDL_FormatInfo *info, unsigned long value)$/;"	f	file:
SDL_PrintUnsignedLongLong	stdlib/SDL_string.c	/^SDL_PrintUnsignedLongLong(char *text, size_t maxlen, SDL_FormatInfo *info, Uint64 value)$/;"	f	file:
SDL_PrivateAudioData	audio/alsa/SDL_alsa_audio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/android/SDL_androidaudio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/arts/SDL_artsaudio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/baudio/SDL_beaudio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/bsd/SDL_bsdaudio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/coreaudio/SDL_coreaudio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/directsound/SDL_directsound.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/disk/SDL_diskaudio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/dsp/SDL_dspaudio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/dummy/SDL_dummyaudio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/esd/SDL_esdaudio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/fusionsound/SDL_fsaudio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/nas/SDL_nasaudio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/paudio/SDL_paudio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/psp/SDL_pspaudio.h	/^struct SDL_PrivateAudioData {$/;"	s
SDL_PrivateAudioData	audio/pulseaudio/SDL_pulseaudio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/qsa/SDL_qsa_audio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/sndio/SDL_sndioaudio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/sun/SDL_sunaudio.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/winmm/SDL_winmm.h	/^struct SDL_PrivateAudioData$/;"	s
SDL_PrivateAudioData	audio/xaudio2/SDL_xaudio2.c	/^struct SDL_PrivateAudioData$/;"	s	file:
SDL_PrivateGLESData	video/x11/SDL_x11opengles.h	/^typedef struct SDL_PrivateGLESData$/;"	s
SDL_PrivateGLESData	video/x11/SDL_x11opengles.h	/^} SDL_PrivateGLESData;$/;"	t	typeref:struct:SDL_PrivateGLESData
SDL_PrivateGameControllerAxis	joystick/SDL_gamecontroller.c	/^SDL_PrivateGameControllerAxis(SDL_GameController * gamecontroller, SDL_GameControllerAxis axis, Sint16 value)$/;"	f
SDL_PrivateGameControllerButton	joystick/SDL_gamecontroller.c	/^SDL_PrivateGameControllerButton(SDL_GameController * gamecontroller, SDL_GameControllerButton button, Uint8 state)$/;"	f
SDL_PrivateGameControllerParseButton	joystick/SDL_gamecontroller.c	/^void SDL_PrivateGameControllerParseButton( const char *szGameButton, const char *szJoystickButton, struct _SDL_ControllerMapping *pMapping )$/;"	f
SDL_PrivateGameControllerParseControllerConfigString	joystick/SDL_gamecontroller.c	/^SDL_PrivateGameControllerParseControllerConfigString( struct _SDL_ControllerMapping *pMapping, const char *pchString )$/;"	f	file:
SDL_PrivateGameControllerRefreshMapping	joystick/SDL_gamecontroller.c	/^void SDL_PrivateGameControllerRefreshMapping( ControllerMapping_t *pControllerMapping )$/;"	f
SDL_PrivateGetControllerGUIDFromMappingString	joystick/SDL_gamecontroller.c	/^char *SDL_PrivateGetControllerGUIDFromMappingString( const char *pMapping )$/;"	f
SDL_PrivateGetControllerMapping	joystick/SDL_gamecontroller.c	/^ControllerMapping_t *SDL_PrivateGetControllerMapping(int device_index)$/;"	f
SDL_PrivateGetControllerMappingForGUID	joystick/SDL_gamecontroller.c	/^ControllerMapping_t *SDL_PrivateGetControllerMappingForGUID(SDL_JoystickGUID *guid)$/;"	f
SDL_PrivateGetControllerMappingFromMappingString	joystick/SDL_gamecontroller.c	/^char *SDL_PrivateGetControllerMappingFromMappingString( const char *pMapping )$/;"	f
SDL_PrivateGetControllerNameFromMappingString	joystick/SDL_gamecontroller.c	/^char *SDL_PrivateGetControllerNameFromMappingString( const char *pMapping )$/;"	f
SDL_PrivateJoystickAxis	joystick/SDL_joystick.c	/^SDL_PrivateJoystickAxis(SDL_Joystick * joystick, Uint8 axis, Sint16 value)$/;"	f
SDL_PrivateJoystickAxis_Int	joystick/windows/SDL_dxjoystick.c	/^SDL_PrivateJoystickAxis_Int(SDL_Joystick * joystick, Uint8 axis, Sint16 value)$/;"	f	file:
SDL_PrivateJoystickBall	joystick/SDL_joystick.c	/^SDL_PrivateJoystickBall(SDL_Joystick * joystick, Uint8 ball,$/;"	f
SDL_PrivateJoystickButton	joystick/SDL_joystick.c	/^SDL_PrivateJoystickButton(SDL_Joystick * joystick, Uint8 button, Uint8 state)$/;"	f
SDL_PrivateJoystickButton_Int	joystick/windows/SDL_dxjoystick.c	/^SDL_PrivateJoystickButton_Int(SDL_Joystick * joystick, Uint8 button,$/;"	f	file:
SDL_PrivateJoystickDetectProc	joystick/windows/SDL_dxjoystick.c	/^LRESULT CALLBACK SDL_PrivateJoystickDetectProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)    {$/;"	f
SDL_PrivateJoystickHat	joystick/SDL_joystick.c	/^SDL_PrivateJoystickHat(SDL_Joystick * joystick, Uint8 hat, Uint8 value)$/;"	f
SDL_PrivateJoystickHat_Int	joystick/windows/SDL_dxjoystick.c	/^SDL_PrivateJoystickHat_Int(SDL_Joystick * joystick, Uint8 hat, Uint8 value)$/;"	f	file:
SDL_PrivateJoystickNeedsPolling	joystick/SDL_joystick.c	/^SDL_PrivateJoystickNeedsPolling()$/;"	f
SDL_PrivateJoystickShouldIgnoreEvent	joystick/SDL_joystick.c	/^SDL_PrivateJoystickShouldIgnoreEvent()$/;"	f	file:
SDL_PrivateJoystickValid	joystick/SDL_joystick.c	/^SDL_PrivateJoystickValid(SDL_Joystick * joystick)$/;"	f
SDL_PrivateLoadButtonMapping	joystick/SDL_gamecontroller.c	/^void SDL_PrivateLoadButtonMapping( struct _SDL_ControllerMapping *pMapping, SDL_JoystickGUID guid, const char *pchName, const char *pchMapping )$/;"	f
SDL_PrivateSendMouseMotion	events/SDL_mouse.c	/^SDL_PrivateSendMouseMotion(SDL_Window * window, SDL_MouseID mouseID, int relative, int x, int y)$/;"	f	file:
SDL_PrivateShouldInitSubsystem	SDL.c	/^SDL_PrivateShouldInitSubsystem(Uint32 subsystem)$/;"	f	file:
SDL_PrivateShouldQuitSubsystem	SDL.c	/^SDL_PrivateShouldQuitSubsystem(Uint32 subsystem) {$/;"	f	file:
SDL_PrivateSubsystemRefCountDecr	SDL.c	/^SDL_PrivateSubsystemRefCountDecr(Uint32 subsystem)$/;"	f	file:
SDL_PrivateSubsystemRefCountIncr	SDL.c	/^SDL_PrivateSubsystemRefCountIncr(Uint32 subsystem)$/;"	f	file:
SDL_PromptAssertion	SDL_assert.c	/^SDL_PromptAssertion(const SDL_assert_data *data, void *userdata)$/;"	f	file:
SDL_PumpEvents	events/SDL_events.c	/^SDL_PumpEvents(void)$/;"	f
SDL_PushEvent	events/SDL_events.c	/^SDL_PushEvent(SDL_Event * event)$/;"	f
SDL_QuadTreeChildren	video/SDL_shape_internals.h	/^} SDL_QuadTreeChildren;$/;"	t	typeref:struct:__anon31
SDL_QueryTexture	render/SDL_render.c	/^SDL_QueryTexture(SDL_Texture * texture, Uint32 * format, int *access,$/;"	f
SDL_Quit	SDL.c	/^SDL_Quit(void)$/;"	f
SDL_QuitBeApp	main/beos/SDL_BeApp.cc	/^SDL_QuitBeApp(void)$/;"	f
SDL_QuitInit	events/SDL_quit.c	/^SDL_QuitInit(void)$/;"	f
SDL_QuitQuit	events/SDL_quit.c	/^SDL_QuitQuit(void)$/;"	f
SDL_QuitSubSystem	SDL.c	/^SDL_QuitSubSystem(Uint32 flags)$/;"	f
SDL_RLEAlphaBlit	video/SDL_RLEaccel.c	/^SDL_RLEAlphaBlit(SDL_Surface * src, SDL_Rect * srcrect,$/;"	f
SDL_RLEBlit	video/SDL_RLEaccel.c	/^SDL_RLEBlit(SDL_Surface * src, SDL_Rect * srcrect,$/;"	f
SDL_RLESurface	video/SDL_RLEaccel.c	/^SDL_RLESurface(SDL_Surface * surface)$/;"	f
SDL_RWFromConstMem	file/SDL_rwops.c	/^SDL_RWFromConstMem(const void *mem, int size)$/;"	f
SDL_RWFromFP	file/SDL_rwops.c	/^SDL_RWFromFP(FILE * fp, SDL_bool autoclose)$/;"	f
SDL_RWFromFP	file/SDL_rwops.c	/^SDL_RWFromFP(void * fp, SDL_bool autoclose)$/;"	f
SDL_RWFromFile	file/SDL_rwops.c	/^SDL_RWFromFile(const char *file, const char *mode)$/;"	f
SDL_RWFromMem	file/SDL_rwops.c	/^SDL_RWFromMem(void *mem, int size)$/;"	f
SDL_RaiseWindow	video/SDL_video.c	/^SDL_RaiseWindow(SDL_Window * window)$/;"	f
SDL_ReadBE16	file/SDL_rwops.c	/^SDL_ReadBE16(SDL_RWops * src)$/;"	f
SDL_ReadBE32	file/SDL_rwops.c	/^SDL_ReadBE32(SDL_RWops * src)$/;"	f
SDL_ReadBE64	file/SDL_rwops.c	/^SDL_ReadBE64(SDL_RWops * src)$/;"	f
SDL_ReadLE16	file/SDL_rwops.c	/^SDL_ReadLE16(SDL_RWops * src)$/;"	f
SDL_ReadLE32	file/SDL_rwops.c	/^SDL_ReadLE32(SDL_RWops * src)$/;"	f
SDL_ReadLE64	file/SDL_rwops.c	/^SDL_ReadLE64(SDL_RWops * src)$/;"	f
SDL_ReadU8	file/SDL_rwops.c	/^SDL_ReadU8(SDL_RWops * src)$/;"	f
SDL_RecordGesture	events/SDL_gesture.c	/^int SDL_RecordGesture(SDL_TouchID touchId)$/;"	f
SDL_RecreateWindow	video/SDL_video.c	/^SDL_RecreateWindow(SDL_Window * window, Uint32 flags)$/;"	f
SDL_RegisterApp	video/windows/SDL_windowsevents.c	/^SDL_RegisterApp(char *name, Uint32 style, void *hInst)$/;"	f
SDL_RegisterEvents	events/SDL_events.c	/^SDL_RegisterEvents(int numevents)$/;"	f
SDL_RemoveTimer	timer/SDL_timer.c	/^SDL_RemoveTimer(SDL_TimerID id)$/;"	f
SDL_RenderClear	render/SDL_render.c	/^SDL_RenderClear(SDL_Renderer * renderer)$/;"	f
SDL_RenderCopy	render/SDL_render.c	/^SDL_RenderCopy(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f
SDL_RenderCopyEx	render/SDL_render.c	/^SDL_RenderCopyEx(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f
SDL_RenderDrawLine	render/SDL_render.c	/^SDL_RenderDrawLine(SDL_Renderer * renderer, int x1, int y1, int x2, int y2)$/;"	f
SDL_RenderDrawLines	render/SDL_render.c	/^SDL_RenderDrawLines(SDL_Renderer * renderer,$/;"	f
SDL_RenderDrawPoint	render/SDL_render.c	/^SDL_RenderDrawPoint(SDL_Renderer * renderer, int x, int y)$/;"	f
SDL_RenderDrawPoints	render/SDL_render.c	/^SDL_RenderDrawPoints(SDL_Renderer * renderer,$/;"	f
SDL_RenderDrawRect	render/SDL_render.c	/^SDL_RenderDrawRect(SDL_Renderer * renderer, const SDL_Rect * rect)$/;"	f
SDL_RenderDrawRects	render/SDL_render.c	/^SDL_RenderDrawRects(SDL_Renderer * renderer,$/;"	f
SDL_RenderDriver	render/SDL_sysrender.h	/^struct SDL_RenderDriver$/;"	s
SDL_RenderDriver	render/SDL_sysrender.h	/^typedef struct SDL_RenderDriver SDL_RenderDriver;$/;"	t	typeref:struct:SDL_RenderDriver
SDL_RenderFillRect	render/SDL_render.c	/^SDL_RenderFillRect(SDL_Renderer * renderer, const SDL_Rect * rect)$/;"	f
SDL_RenderFillRects	render/SDL_render.c	/^SDL_RenderFillRects(SDL_Renderer * renderer,$/;"	f
SDL_RenderGetClipRect	render/SDL_render.c	/^SDL_RenderGetClipRect(SDL_Renderer * renderer, SDL_Rect * rect)$/;"	f
SDL_RenderGetLogicalSize	render/SDL_render.c	/^SDL_RenderGetLogicalSize(SDL_Renderer * renderer, int *w, int *h)$/;"	f
SDL_RenderGetScale	render/SDL_render.c	/^SDL_RenderGetScale(SDL_Renderer * renderer, float *scaleX, float *scaleY)$/;"	f
SDL_RenderGetViewport	render/SDL_render.c	/^SDL_RenderGetViewport(SDL_Renderer * renderer, SDL_Rect * rect)$/;"	f
SDL_RenderPresent	render/SDL_render.c	/^SDL_RenderPresent(SDL_Renderer * renderer)$/;"	f
SDL_RenderReadPixels	render/SDL_render.c	/^SDL_RenderReadPixels(SDL_Renderer * renderer, const SDL_Rect * rect,$/;"	f
SDL_RenderSetClipRect	render/SDL_render.c	/^SDL_RenderSetClipRect(SDL_Renderer * renderer, const SDL_Rect * rect)$/;"	f
SDL_RenderSetLogicalSize	render/SDL_render.c	/^SDL_RenderSetLogicalSize(SDL_Renderer * renderer, int w, int h)$/;"	f
SDL_RenderSetScale	render/SDL_render.c	/^SDL_RenderSetScale(SDL_Renderer * renderer, float scaleX, float scaleY)$/;"	f
SDL_RenderSetViewport	render/SDL_render.c	/^SDL_RenderSetViewport(SDL_Renderer * renderer, const SDL_Rect * rect)$/;"	f
SDL_RenderTargetSupported	render/SDL_render.c	/^SDL_RenderTargetSupported(SDL_Renderer *renderer)$/;"	f
SDL_Renderer	render/SDL_sysrender.h	/^struct SDL_Renderer$/;"	s
SDL_RendererEventWatch	render/SDL_render.c	/^SDL_RendererEventWatch(void *userdata, SDL_Event *event)$/;"	f	file:
SDL_ReportAssertion	SDL_assert.c	/^SDL_ReportAssertion(SDL_assert_data *data, const char *func, const char *file,$/;"	f
SDL_ResetAssertionReport	SDL_assert.c	/^void SDL_ResetAssertionReport(void)$/;"	f
SDL_ResetKeyboard	events/SDL_keyboard.c	/^SDL_ResetKeyboard(void)$/;"	f
SDL_ResetMouse	events/SDL_mouse.c	/^SDL_ResetMouse(void)$/;"	f
SDL_RestoreMousePosition	video/SDL_video.c	/^SDL_RestoreMousePosition(SDL_Window *window)$/;"	f	file:
SDL_RestoreWindow	video/SDL_video.c	/^SDL_RestoreWindow(SDL_Window * window)$/;"	f
SDL_RunAudio	audio/SDL_audio.c	/^SDL_RunAudio(void *devicep)$/;"	f
SDL_RunThread	thread/SDL_thread.c	/^SDL_RunThread(void *data)$/;"	f
SDL_RunXInputHaptic	haptic/windows/SDL_syshaptic.c	/^SDL_RunXInputHaptic(void *arg)$/;"	f	file:
SDL_SET_LOCALE	video/x11/SDL_x11messagebox.c	35;"	d	file:
SDL_SNDIO_SYM	audio/sndio/SDL_sndioaudio.c	74;"	d	file:
SDL_SNDIO_SYM	audio/sndio/SDL_sndioaudio.c	77;"	d	file:
SDL_SNDIO_SYM	audio/sndio/SDL_sndioaudio.c	95;"	d	file:
SDL_SW_CopyYUVToRGB	render/SDL_yuv_sw.c	/^SDL_SW_CopyYUVToRGB(SDL_SW_YUVTexture * swdata, const SDL_Rect * srcrect,$/;"	f
SDL_SW_CreateYUVTexture	render/SDL_yuv_sw.c	/^SDL_SW_CreateYUVTexture(Uint32 format, int w, int h)$/;"	f
SDL_SW_DestroyYUVTexture	render/SDL_yuv_sw.c	/^SDL_SW_DestroyYUVTexture(SDL_SW_YUVTexture * swdata)$/;"	f
SDL_SW_LockYUVTexture	render/SDL_yuv_sw.c	/^SDL_SW_LockYUVTexture(SDL_SW_YUVTexture * swdata, const SDL_Rect * rect,$/;"	f
SDL_SW_QueryYUVTexturePixels	render/SDL_yuv_sw.c	/^SDL_SW_QueryYUVTexturePixels(SDL_SW_YUVTexture * swdata, void **pixels,$/;"	f
SDL_SW_SetupYUVDisplay	render/SDL_yuv_sw.c	/^SDL_SW_SetupYUVDisplay(SDL_SW_YUVTexture * swdata, Uint32 target_format)$/;"	f	file:
SDL_SW_UnlockYUVTexture	render/SDL_yuv_sw.c	/^SDL_SW_UnlockYUVTexture(SDL_SW_YUVTexture * swdata)$/;"	f
SDL_SW_UpdateYUVTexture	render/SDL_yuv_sw.c	/^SDL_SW_UpdateYUVTexture(SDL_SW_YUVTexture * swdata, const SDL_Rect * rect,$/;"	f
SDL_SW_YUVTexture	render/SDL_yuv_sw_c.h	/^struct SDL_SW_YUVTexture$/;"	s
SDL_SW_YUVTexture	render/SDL_yuv_sw_c.h	/^typedef struct SDL_SW_YUVTexture SDL_SW_YUVTexture;$/;"	t	typeref:struct:SDL_SW_YUVTexture
SDL_SYS_CreateThread	thread/beos/SDL_systhread.c	/^SDL_SYS_CreateThread(SDL_Thread * thread, void *args)$/;"	f
SDL_SYS_CreateThread	thread/generic/SDL_systhread.c	/^SDL_SYS_CreateThread(SDL_Thread * thread, void *args,$/;"	f
SDL_SYS_CreateThread	thread/psp/SDL_systhread.c	/^int SDL_SYS_CreateThread(SDL_Thread *thread, void *args)$/;"	f
SDL_SYS_CreateThread	thread/pthread/SDL_systhread.c	/^SDL_SYS_CreateThread(SDL_Thread * thread, void *args)$/;"	f
SDL_SYS_CreateThread	thread/windows/SDL_systhread.c	/^SDL_SYS_CreateThread(SDL_Thread * thread, void *args,$/;"	f
SDL_SYS_GetInstanceIdOfDeviceIndex	joystick/android/SDL_sysjoystick.c	/^SDL_JoystickID SDL_SYS_GetInstanceIdOfDeviceIndex(int device_index)$/;"	f
SDL_SYS_GetInstanceIdOfDeviceIndex	joystick/beos/SDL_bejoystick.cc	/^    SDL_JoystickID SDL_SYS_GetInstanceIdOfDeviceIndex(int device_index)$/;"	f
SDL_SYS_GetInstanceIdOfDeviceIndex	joystick/bsd/SDL_sysjoystick.c	/^SDL_JoystickID SDL_SYS_GetInstanceIdOfDeviceIndex(int device_index)$/;"	f
SDL_SYS_GetInstanceIdOfDeviceIndex	joystick/darwin/SDL_sysjoystick.c	/^SDL_SYS_GetInstanceIdOfDeviceIndex(int device_index)$/;"	f
SDL_SYS_GetInstanceIdOfDeviceIndex	joystick/dummy/SDL_sysjoystick.c	/^SDL_JoystickID SDL_SYS_GetInstanceIdOfDeviceIndex(int device_index)$/;"	f
SDL_SYS_GetInstanceIdOfDeviceIndex	joystick/linux/SDL_sysjoystick.c	/^SDL_JoystickID SDL_SYS_GetInstanceIdOfDeviceIndex(int device_index)$/;"	f
SDL_SYS_GetInstanceIdOfDeviceIndex	joystick/psp/SDL_sysjoystick.c	/^SDL_JoystickID SDL_SYS_GetInstanceIdOfDeviceIndex(int device_index)$/;"	f
SDL_SYS_GetInstanceIdOfDeviceIndex	joystick/windows/SDL_dxjoystick.c	/^SDL_JoystickID SDL_SYS_GetInstanceIdOfDeviceIndex(int device_index)$/;"	f
SDL_SYS_GetInstanceIdOfDeviceIndex	joystick/windows/SDL_mmjoystick.c	/^SDL_JoystickID SDL_SYS_GetInstanceIdOfDeviceIndex(int device_index)$/;"	f
SDL_SYS_GetTLSData	thread/beos/SDL_systls.c	/^SDL_SYS_GetTLSData()$/;"	f
SDL_SYS_GetTLSData	thread/generic/SDL_systls.c	/^SDL_SYS_GetTLSData()$/;"	f
SDL_SYS_GetTLSData	thread/pthread/SDL_systls.c	/^SDL_SYS_GetTLSData()$/;"	f
SDL_SYS_GetTLSData	thread/windows/SDL_systls.c	/^SDL_SYS_GetTLSData()$/;"	f
SDL_SYS_HapticClose	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticClose(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticClose	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticClose(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticClose	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticClose(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticClose	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticClose(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticDestroyEffect	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticDestroyEffect(SDL_Haptic * haptic, struct haptic_effect *effect)$/;"	f
SDL_SYS_HapticDestroyEffect	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticDestroyEffect(SDL_Haptic * haptic, struct haptic_effect *effect)$/;"	f
SDL_SYS_HapticDestroyEffect	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticDestroyEffect(SDL_Haptic * haptic, struct haptic_effect *effect)$/;"	f
SDL_SYS_HapticDestroyEffect	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticDestroyEffect(SDL_Haptic * haptic, struct haptic_effect *effect)$/;"	f
SDL_SYS_HapticEffectType	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticEffectType(Uint16 type)$/;"	f
SDL_SYS_HapticEffectType	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticEffectType(SDL_HapticEffect * effect)$/;"	f	file:
SDL_SYS_HapticFreeDIEFFECT	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticFreeDIEFFECT(DIEFFECT * effect, int type)$/;"	f	file:
SDL_SYS_HapticFreeFFEFFECT	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticFreeFFEFFECT(FFEFFECT * effect, int type)$/;"	f	file:
SDL_SYS_HapticGetEffectStatus	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticGetEffectStatus(SDL_Haptic * haptic,$/;"	f
SDL_SYS_HapticGetEffectStatus	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticGetEffectStatus(SDL_Haptic * haptic,$/;"	f
SDL_SYS_HapticGetEffectStatus	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticGetEffectStatus(SDL_Haptic * haptic,$/;"	f
SDL_SYS_HapticGetEffectStatus	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticGetEffectStatus(SDL_Haptic * haptic,$/;"	f
SDL_SYS_HapticInit	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticInit(void)$/;"	f
SDL_SYS_HapticInit	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticInit(void)$/;"	f
SDL_SYS_HapticInit	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticInit(void)$/;"	f
SDL_SYS_HapticInit	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticInit(void)$/;"	f
SDL_SYS_HapticMouse	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticMouse(void)$/;"	f
SDL_SYS_HapticMouse	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticMouse(void)$/;"	f
SDL_SYS_HapticMouse	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticMouse(void)$/;"	f
SDL_SYS_HapticMouse	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticMouse(void)$/;"	f
SDL_SYS_HapticName	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticName(int index)$/;"	f
SDL_SYS_HapticName	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticName(int index)$/;"	f
SDL_SYS_HapticName	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticName(int index)$/;"	f
SDL_SYS_HapticName	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticName(int index)$/;"	f
SDL_SYS_HapticNameFromFD	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticNameFromFD(int fd)$/;"	f	file:
SDL_SYS_HapticNewEffect	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticNewEffect(SDL_Haptic * haptic, struct haptic_effect *effect,$/;"	f
SDL_SYS_HapticNewEffect	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticNewEffect(SDL_Haptic * haptic,$/;"	f
SDL_SYS_HapticNewEffect	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticNewEffect(SDL_Haptic * haptic, struct haptic_effect *effect,$/;"	f
SDL_SYS_HapticNewEffect	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticNewEffect(SDL_Haptic * haptic, struct haptic_effect *effect,$/;"	f
SDL_SYS_HapticOpen	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticOpen(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticOpen	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticOpen(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticOpen	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticOpen(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticOpen	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticOpen(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticOpenFromDevice8	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticOpenFromDevice8(SDL_Haptic * haptic,$/;"	f	file:
SDL_SYS_HapticOpenFromFD	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticOpenFromFD(SDL_Haptic * haptic, int fd)$/;"	f	file:
SDL_SYS_HapticOpenFromInstance	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticOpenFromInstance(SDL_Haptic * haptic, DIDEVICEINSTANCE instance)$/;"	f	file:
SDL_SYS_HapticOpenFromJoystick	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticOpenFromJoystick(SDL_Haptic * haptic, SDL_Joystick * joystick)$/;"	f
SDL_SYS_HapticOpenFromJoystick	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticOpenFromJoystick(SDL_Haptic * haptic, SDL_Joystick * joystick)$/;"	f
SDL_SYS_HapticOpenFromJoystick	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticOpenFromJoystick(SDL_Haptic * haptic, SDL_Joystick * joystick)$/;"	f
SDL_SYS_HapticOpenFromJoystick	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticOpenFromJoystick(SDL_Haptic * haptic, SDL_Joystick * joystick)$/;"	f
SDL_SYS_HapticOpenFromService	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticOpenFromService(SDL_Haptic * haptic, io_service_t service)$/;"	f	file:
SDL_SYS_HapticOpenFromXInput	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticOpenFromXInput(SDL_Haptic * haptic, Uint8 userid)$/;"	f	file:
SDL_SYS_HapticPause	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticPause(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticPause	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticPause(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticPause	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticPause(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticPause	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticPause(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticQuit	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticQuit(void)$/;"	f
SDL_SYS_HapticQuit	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticQuit(void)$/;"	f
SDL_SYS_HapticQuit	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticQuit(void)$/;"	f
SDL_SYS_HapticQuit	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticQuit(void)$/;"	f
SDL_SYS_HapticRunEffect	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticRunEffect(SDL_Haptic * haptic, struct haptic_effect *effect,$/;"	f
SDL_SYS_HapticRunEffect	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticRunEffect(SDL_Haptic * haptic, struct haptic_effect *effect,$/;"	f
SDL_SYS_HapticRunEffect	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticRunEffect(SDL_Haptic * haptic, struct haptic_effect *effect,$/;"	f
SDL_SYS_HapticRunEffect	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticRunEffect(SDL_Haptic * haptic, struct haptic_effect *effect,$/;"	f
SDL_SYS_HapticSetAutocenter	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticSetAutocenter(SDL_Haptic * haptic, int autocenter)$/;"	f
SDL_SYS_HapticSetAutocenter	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticSetAutocenter(SDL_Haptic * haptic, int autocenter)$/;"	f
SDL_SYS_HapticSetAutocenter	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticSetAutocenter(SDL_Haptic * haptic, int autocenter)$/;"	f
SDL_SYS_HapticSetAutocenter	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticSetAutocenter(SDL_Haptic * haptic, int autocenter)$/;"	f
SDL_SYS_HapticSetGain	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticSetGain(SDL_Haptic * haptic, int gain)$/;"	f
SDL_SYS_HapticSetGain	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticSetGain(SDL_Haptic * haptic, int gain)$/;"	f
SDL_SYS_HapticSetGain	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticSetGain(SDL_Haptic * haptic, int gain)$/;"	f
SDL_SYS_HapticSetGain	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticSetGain(SDL_Haptic * haptic, int gain)$/;"	f
SDL_SYS_HapticStopAll	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticStopAll(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticStopAll	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticStopAll(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticStopAll	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticStopAll(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticStopAll	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticStopAll(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticStopEffect	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticStopEffect(SDL_Haptic * haptic, struct haptic_effect *effect)$/;"	f
SDL_SYS_HapticStopEffect	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticStopEffect(SDL_Haptic * haptic, struct haptic_effect *effect)$/;"	f
SDL_SYS_HapticStopEffect	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticStopEffect(SDL_Haptic * haptic, struct haptic_effect *effect)$/;"	f
SDL_SYS_HapticStopEffect	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticStopEffect(SDL_Haptic * haptic, struct haptic_effect *effect)$/;"	f
SDL_SYS_HapticUnpause	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticUnpause(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticUnpause	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticUnpause(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticUnpause	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticUnpause(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticUnpause	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticUnpause(SDL_Haptic * haptic)$/;"	f
SDL_SYS_HapticUpdateEffect	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_HapticUpdateEffect(SDL_Haptic * haptic,$/;"	f
SDL_SYS_HapticUpdateEffect	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_HapticUpdateEffect(SDL_Haptic * haptic,$/;"	f
SDL_SYS_HapticUpdateEffect	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_HapticUpdateEffect(SDL_Haptic * haptic,$/;"	f
SDL_SYS_HapticUpdateEffect	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_HapticUpdateEffect(SDL_Haptic * haptic,$/;"	f
SDL_SYS_IsXInputDeviceIndex	joystick/windows/SDL_dxjoystick.c	/^SDL_bool SDL_SYS_IsXInputDeviceIndex(int device_index)$/;"	f
SDL_SYS_JoystickAttached	joystick/android/SDL_sysjoystick.c	/^SDL_bool SDL_SYS_JoystickAttached(SDL_Joystick *joystick)$/;"	f
SDL_SYS_JoystickAttached	joystick/beos/SDL_bejoystick.cc	/^    SDL_bool SDL_SYS_JoystickAttached(SDL_Joystick *joystick)$/;"	f
SDL_SYS_JoystickAttached	joystick/bsd/SDL_sysjoystick.c	/^SDL_bool SDL_SYS_JoystickAttached(SDL_Joystick *joystick)$/;"	f
SDL_SYS_JoystickAttached	joystick/darwin/SDL_sysjoystick.c	/^SDL_SYS_JoystickAttached(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickAttached	joystick/dummy/SDL_sysjoystick.c	/^SDL_bool SDL_SYS_JoystickAttached(SDL_Joystick *joystick)$/;"	f
SDL_SYS_JoystickAttached	joystick/linux/SDL_sysjoystick.c	/^SDL_bool SDL_SYS_JoystickAttached(SDL_Joystick *joystick)$/;"	f
SDL_SYS_JoystickAttached	joystick/psp/SDL_sysjoystick.c	/^SDL_bool SDL_SYS_JoystickAttached(SDL_Joystick *joystick)$/;"	f
SDL_SYS_JoystickAttached	joystick/windows/SDL_dxjoystick.c	/^SDL_bool SDL_SYS_JoystickAttached( SDL_Joystick * joystick )$/;"	f
SDL_SYS_JoystickAttached	joystick/windows/SDL_mmjoystick.c	/^SDL_bool SDL_SYS_JoystickAttached(SDL_Joystick *joystick)$/;"	f
SDL_SYS_JoystickClose	joystick/android/SDL_sysjoystick.c	/^SDL_SYS_JoystickClose(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickClose	joystick/beos/SDL_bejoystick.cc	/^    void SDL_SYS_JoystickClose(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickClose	joystick/bsd/SDL_sysjoystick.c	/^SDL_SYS_JoystickClose(SDL_Joystick * joy)$/;"	f
SDL_SYS_JoystickClose	joystick/darwin/SDL_sysjoystick.c	/^SDL_SYS_JoystickClose(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickClose	joystick/dummy/SDL_sysjoystick.c	/^SDL_SYS_JoystickClose(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickClose	joystick/linux/SDL_sysjoystick.c	/^SDL_SYS_JoystickClose(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickClose	joystick/psp/SDL_sysjoystick.c	/^void SDL_SYS_JoystickClose(SDL_Joystick *joystick)$/;"	f
SDL_SYS_JoystickClose	joystick/windows/SDL_dxjoystick.c	/^SDL_SYS_JoystickClose(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickClose	joystick/windows/SDL_mmjoystick.c	/^SDL_SYS_JoystickClose(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickDetect	joystick/android/SDL_sysjoystick.c	/^void SDL_SYS_JoystickDetect()$/;"	f
SDL_SYS_JoystickDetect	joystick/beos/SDL_bejoystick.cc	/^    void SDL_SYS_JoystickDetect()$/;"	f
SDL_SYS_JoystickDetect	joystick/bsd/SDL_sysjoystick.c	/^void SDL_SYS_JoystickDetect()$/;"	f
SDL_SYS_JoystickDetect	joystick/darwin/SDL_sysjoystick.c	/^SDL_SYS_JoystickDetect()$/;"	f
SDL_SYS_JoystickDetect	joystick/dummy/SDL_sysjoystick.c	/^void SDL_SYS_JoystickDetect()$/;"	f
SDL_SYS_JoystickDetect	joystick/linux/SDL_sysjoystick.c	/^void SDL_SYS_JoystickDetect()$/;"	f
SDL_SYS_JoystickDetect	joystick/psp/SDL_sysjoystick.c	/^void SDL_SYS_JoystickDetect()$/;"	f
SDL_SYS_JoystickDetect	joystick/windows/SDL_dxjoystick.c	/^void SDL_SYS_JoystickDetect()$/;"	f
SDL_SYS_JoystickDetect	joystick/windows/SDL_mmjoystick.c	/^void SDL_SYS_JoystickDetect()$/;"	f
SDL_SYS_JoystickGetDeviceGUID	joystick/android/SDL_sysjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetDeviceGUID( int device_index )$/;"	f
SDL_SYS_JoystickGetDeviceGUID	joystick/beos/SDL_bejoystick.cc	/^    SDL_JoystickGUID SDL_SYS_JoystickGetDeviceGUID( int device_index )$/;"	f
SDL_SYS_JoystickGetDeviceGUID	joystick/bsd/SDL_sysjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetDeviceGUID( int device_index )$/;"	f
SDL_SYS_JoystickGetDeviceGUID	joystick/darwin/SDL_sysjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetDeviceGUID( int device_index )$/;"	f
SDL_SYS_JoystickGetDeviceGUID	joystick/dummy/SDL_sysjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetDeviceGUID( int device_index )$/;"	f
SDL_SYS_JoystickGetDeviceGUID	joystick/linux/SDL_sysjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetDeviceGUID( int device_index )$/;"	f
SDL_SYS_JoystickGetDeviceGUID	joystick/psp/SDL_sysjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetDeviceGUID( int device_index )$/;"	f
SDL_SYS_JoystickGetDeviceGUID	joystick/windows/SDL_dxjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetDeviceGUID( int device_index )$/;"	f
SDL_SYS_JoystickGetDeviceGUID	joystick/windows/SDL_mmjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetDeviceGUID( int device_index )$/;"	f
SDL_SYS_JoystickGetGUID	joystick/android/SDL_sysjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetGUID(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickGetGUID	joystick/beos/SDL_bejoystick.cc	/^    SDL_JoystickGUID SDL_SYS_JoystickGetGUID(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickGetGUID	joystick/bsd/SDL_sysjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetGUID(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickGetGUID	joystick/darwin/SDL_sysjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetGUID(SDL_Joystick *joystick)$/;"	f
SDL_SYS_JoystickGetGUID	joystick/dummy/SDL_sysjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetGUID(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickGetGUID	joystick/linux/SDL_sysjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetGUID(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickGetGUID	joystick/psp/SDL_sysjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetGUID(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickGetGUID	joystick/windows/SDL_dxjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetGUID(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickGetGUID	joystick/windows/SDL_mmjoystick.c	/^SDL_JoystickGUID SDL_SYS_JoystickGetGUID(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickInit	joystick/android/SDL_sysjoystick.c	/^SDL_SYS_JoystickInit(void)$/;"	f
SDL_SYS_JoystickInit	joystick/beos/SDL_bejoystick.cc	/^    int SDL_SYS_JoystickInit(void)$/;"	f
SDL_SYS_JoystickInit	joystick/bsd/SDL_sysjoystick.c	/^SDL_SYS_JoystickInit(void)$/;"	f
SDL_SYS_JoystickInit	joystick/darwin/SDL_sysjoystick.c	/^SDL_SYS_JoystickInit(void)$/;"	f
SDL_SYS_JoystickInit	joystick/dummy/SDL_sysjoystick.c	/^SDL_SYS_JoystickInit(void)$/;"	f
SDL_SYS_JoystickInit	joystick/linux/SDL_sysjoystick.c	/^SDL_SYS_JoystickInit(void)$/;"	f
SDL_SYS_JoystickInit	joystick/psp/SDL_sysjoystick.c	/^int SDL_SYS_JoystickInit(void)$/;"	f
SDL_SYS_JoystickInit	joystick/windows/SDL_dxjoystick.c	/^SDL_SYS_JoystickInit(void)$/;"	f
SDL_SYS_JoystickInit	joystick/windows/SDL_mmjoystick.c	/^SDL_SYS_JoystickInit(void)$/;"	f
SDL_SYS_JoystickIsHaptic	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_JoystickIsHaptic(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickIsHaptic	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_JoystickIsHaptic(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickIsHaptic	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_JoystickIsHaptic(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickIsHaptic	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_JoystickIsHaptic(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickName	joystick/psp/SDL_sysjoystick.c	/^const char *SDL_SYS_JoystickName(int index)$/;"	f
SDL_SYS_JoystickNameForDeviceIndex	joystick/android/SDL_sysjoystick.c	/^SDL_SYS_JoystickNameForDeviceIndex(int device_index)$/;"	f
SDL_SYS_JoystickNameForDeviceIndex	joystick/beos/SDL_bejoystick.cc	/^    const char *SDL_SYS_JoystickNameForDeviceIndex(int device_index)$/;"	f
SDL_SYS_JoystickNameForDeviceIndex	joystick/bsd/SDL_sysjoystick.c	/^SDL_SYS_JoystickNameForDeviceIndex(int device_index)$/;"	f
SDL_SYS_JoystickNameForDeviceIndex	joystick/darwin/SDL_sysjoystick.c	/^SDL_SYS_JoystickNameForDeviceIndex(int device_index)$/;"	f
SDL_SYS_JoystickNameForDeviceIndex	joystick/dummy/SDL_sysjoystick.c	/^SDL_SYS_JoystickNameForDeviceIndex(int device_index)$/;"	f
SDL_SYS_JoystickNameForDeviceIndex	joystick/linux/SDL_sysjoystick.c	/^SDL_SYS_JoystickNameForDeviceIndex(int device_index)$/;"	f
SDL_SYS_JoystickNameForDeviceIndex	joystick/psp/SDL_sysjoystick.c	/^const char * SDL_SYS_JoystickNameForDeviceIndex(int device_index)$/;"	f
SDL_SYS_JoystickNameForDeviceIndex	joystick/windows/SDL_dxjoystick.c	/^SDL_SYS_JoystickNameForDeviceIndex(int device_index)$/;"	f
SDL_SYS_JoystickNameForDeviceIndex	joystick/windows/SDL_mmjoystick.c	/^SDL_SYS_JoystickNameForDeviceIndex(int device_index)$/;"	f
SDL_SYS_JoystickNeedsPolling	joystick/android/SDL_sysjoystick.c	/^SDL_bool SDL_SYS_JoystickNeedsPolling()$/;"	f
SDL_SYS_JoystickNeedsPolling	joystick/beos/SDL_bejoystick.cc	/^    SDL_bool SDL_SYS_JoystickNeedsPolling()$/;"	f
SDL_SYS_JoystickNeedsPolling	joystick/bsd/SDL_sysjoystick.c	/^SDL_bool SDL_SYS_JoystickNeedsPolling()$/;"	f
SDL_SYS_JoystickNeedsPolling	joystick/darwin/SDL_sysjoystick.c	/^SDL_SYS_JoystickNeedsPolling()$/;"	f
SDL_SYS_JoystickNeedsPolling	joystick/dummy/SDL_sysjoystick.c	/^SDL_bool SDL_SYS_JoystickNeedsPolling()$/;"	f
SDL_SYS_JoystickNeedsPolling	joystick/linux/SDL_sysjoystick.c	/^SDL_bool SDL_SYS_JoystickNeedsPolling()$/;"	f
SDL_SYS_JoystickNeedsPolling	joystick/psp/SDL_sysjoystick.c	/^SDL_bool SDL_SYS_JoystickNeedsPolling()$/;"	f
SDL_SYS_JoystickNeedsPolling	joystick/windows/SDL_dxjoystick.c	/^SDL_bool SDL_SYS_JoystickNeedsPolling()$/;"	f
SDL_SYS_JoystickNeedsPolling	joystick/windows/SDL_mmjoystick.c	/^SDL_bool SDL_SYS_JoystickNeedsPolling()$/;"	f
SDL_SYS_JoystickOpen	joystick/android/SDL_sysjoystick.c	/^SDL_SYS_JoystickOpen(SDL_Joystick * joystick, int device_index)$/;"	f
SDL_SYS_JoystickOpen	joystick/beos/SDL_bejoystick.cc	/^    int SDL_SYS_JoystickOpen(SDL_Joystick * joystick, int device_index)$/;"	f
SDL_SYS_JoystickOpen	joystick/bsd/SDL_sysjoystick.c	/^SDL_SYS_JoystickOpen(SDL_Joystick * joy, int device_index)$/;"	f
SDL_SYS_JoystickOpen	joystick/darwin/SDL_sysjoystick.c	/^SDL_SYS_JoystickOpen(SDL_Joystick * joystick, int device_index)$/;"	f
SDL_SYS_JoystickOpen	joystick/dummy/SDL_sysjoystick.c	/^SDL_SYS_JoystickOpen(SDL_Joystick * joystick, int device_index)$/;"	f
SDL_SYS_JoystickOpen	joystick/linux/SDL_sysjoystick.c	/^SDL_SYS_JoystickOpen(SDL_Joystick * joystick, int device_index)$/;"	f
SDL_SYS_JoystickOpen	joystick/psp/SDL_sysjoystick.c	/^int SDL_SYS_JoystickOpen(SDL_Joystick *joystick, int device_index)$/;"	f
SDL_SYS_JoystickOpen	joystick/windows/SDL_dxjoystick.c	/^SDL_SYS_JoystickOpen(SDL_Joystick * joystick, int device_index)$/;"	f
SDL_SYS_JoystickOpen	joystick/windows/SDL_mmjoystick.c	/^SDL_SYS_JoystickOpen(SDL_Joystick * joystick, int device_index)$/;"	f
SDL_SYS_JoystickQuit	joystick/android/SDL_sysjoystick.c	/^SDL_SYS_JoystickQuit(void)$/;"	f
SDL_SYS_JoystickQuit	joystick/beos/SDL_bejoystick.cc	/^    void SDL_SYS_JoystickQuit(void)$/;"	f
SDL_SYS_JoystickQuit	joystick/bsd/SDL_sysjoystick.c	/^SDL_SYS_JoystickQuit(void)$/;"	f
SDL_SYS_JoystickQuit	joystick/darwin/SDL_sysjoystick.c	/^SDL_SYS_JoystickQuit(void)$/;"	f
SDL_SYS_JoystickQuit	joystick/dummy/SDL_sysjoystick.c	/^SDL_SYS_JoystickQuit(void)$/;"	f
SDL_SYS_JoystickQuit	joystick/linux/SDL_sysjoystick.c	/^SDL_SYS_JoystickQuit(void)$/;"	f
SDL_SYS_JoystickQuit	joystick/psp/SDL_sysjoystick.c	/^void SDL_SYS_JoystickQuit(void)$/;"	f
SDL_SYS_JoystickQuit	joystick/windows/SDL_dxjoystick.c	/^SDL_SYS_JoystickQuit(void)$/;"	f
SDL_SYS_JoystickQuit	joystick/windows/SDL_mmjoystick.c	/^SDL_SYS_JoystickQuit(void)$/;"	f
SDL_SYS_JoystickSameHaptic	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_JoystickSameHaptic(SDL_Haptic * haptic, SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickSameHaptic	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_JoystickSameHaptic(SDL_Haptic * haptic, SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickSameHaptic	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_JoystickSameHaptic(SDL_Haptic * haptic, SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickSameHaptic	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_JoystickSameHaptic(SDL_Haptic * haptic, SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickUpdate	joystick/android/SDL_sysjoystick.c	/^SDL_SYS_JoystickUpdate(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickUpdate	joystick/beos/SDL_bejoystick.cc	/^    void SDL_SYS_JoystickUpdate(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickUpdate	joystick/bsd/SDL_sysjoystick.c	/^SDL_SYS_JoystickUpdate(SDL_Joystick * joy)$/;"	f
SDL_SYS_JoystickUpdate	joystick/darwin/SDL_sysjoystick.c	/^SDL_SYS_JoystickUpdate(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickUpdate	joystick/dummy/SDL_sysjoystick.c	/^SDL_SYS_JoystickUpdate(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickUpdate	joystick/linux/SDL_sysjoystick.c	/^SDL_SYS_JoystickUpdate(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickUpdate	joystick/psp/SDL_sysjoystick.c	/^void SDL_SYS_JoystickUpdate(SDL_Joystick *joystick)$/;"	f
SDL_SYS_JoystickUpdate	joystick/windows/SDL_dxjoystick.c	/^SDL_SYS_JoystickUpdate(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickUpdate	joystick/windows/SDL_mmjoystick.c	/^SDL_SYS_JoystickUpdate(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickUpdate_Buffered	joystick/windows/SDL_dxjoystick.c	/^SDL_SYS_JoystickUpdate_Buffered(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickUpdate_Polled	joystick/windows/SDL_dxjoystick.c	/^SDL_SYS_JoystickUpdate_Polled(SDL_Joystick * joystick)$/;"	f
SDL_SYS_JoystickUpdate_XInput	joystick/windows/SDL_dxjoystick.c	/^SDL_SYS_JoystickUpdate_XInput(SDL_Joystick * joystick)$/;"	f
SDL_SYS_KillThread	thread/psp/SDL_systhread.c	/^void SDL_SYS_KillThread(SDL_Thread *thread)$/;"	f
SDL_SYS_LogicError	haptic/dummy/SDL_syshaptic.c	/^SDL_SYS_LogicError(void)$/;"	f	file:
SDL_SYS_NumJoysticks	joystick/android/SDL_sysjoystick.c	/^int SDL_SYS_NumJoysticks()$/;"	f
SDL_SYS_NumJoysticks	joystick/beos/SDL_bejoystick.cc	/^    int SDL_SYS_NumJoysticks()$/;"	f
SDL_SYS_NumJoysticks	joystick/bsd/SDL_sysjoystick.c	/^int SDL_SYS_NumJoysticks()$/;"	f
SDL_SYS_NumJoysticks	joystick/darwin/SDL_sysjoystick.c	/^SDL_SYS_NumJoysticks()$/;"	f
SDL_SYS_NumJoysticks	joystick/dummy/SDL_sysjoystick.c	/^int SDL_SYS_NumJoysticks()$/;"	f
SDL_SYS_NumJoysticks	joystick/linux/SDL_sysjoystick.c	/^int SDL_SYS_NumJoysticks()$/;"	f
SDL_SYS_NumJoysticks	joystick/psp/SDL_sysjoystick.c	/^int SDL_SYS_NumJoysticks()$/;"	f
SDL_SYS_NumJoysticks	joystick/windows/SDL_dxjoystick.c	/^int SDL_SYS_NumJoysticks()$/;"	f
SDL_SYS_NumJoysticks	joystick/windows/SDL_mmjoystick.c	/^int SDL_SYS_NumJoysticks()$/;"	f
SDL_SYS_SetDirection	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_SetDirection(FFEFFECT * effect, SDL_HapticDirection * dir, int naxes)$/;"	f	file:
SDL_SYS_SetDirection	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_SetDirection(DIEFFECT * effect, SDL_HapticDirection * dir, int naxes)$/;"	f	file:
SDL_SYS_SetTLSData	thread/beos/SDL_systls.c	/^SDL_SYS_SetTLSData(SDL_TLSData *data)$/;"	f
SDL_SYS_SetTLSData	thread/generic/SDL_systls.c	/^SDL_SYS_SetTLSData(SDL_TLSData *data)$/;"	f
SDL_SYS_SetTLSData	thread/pthread/SDL_systls.c	/^SDL_SYS_SetTLSData(SDL_TLSData *data)$/;"	f
SDL_SYS_SetTLSData	thread/windows/SDL_systls.c	/^SDL_SYS_SetTLSData(SDL_TLSData *data)$/;"	f
SDL_SYS_SetThreadPriority	thread/beos/SDL_systhread.c	/^SDL_SYS_SetThreadPriority(SDL_ThreadPriority priority)$/;"	f
SDL_SYS_SetThreadPriority	thread/generic/SDL_systhread.c	/^SDL_SYS_SetThreadPriority(SDL_ThreadPriority priority)$/;"	f
SDL_SYS_SetThreadPriority	thread/psp/SDL_systhread.c	/^int SDL_SYS_SetThreadPriority(SDL_ThreadPriority priority)$/;"	f
SDL_SYS_SetThreadPriority	thread/pthread/SDL_systhread.c	/^SDL_SYS_SetThreadPriority(SDL_ThreadPriority priority)$/;"	f
SDL_SYS_SetThreadPriority	thread/windows/SDL_systhread.c	/^SDL_SYS_SetThreadPriority(SDL_ThreadPriority priority)$/;"	f
SDL_SYS_SetupThread	thread/beos/SDL_systhread.c	/^SDL_SYS_SetupThread(const char *name)$/;"	f
SDL_SYS_SetupThread	thread/generic/SDL_systhread.c	/^SDL_SYS_SetupThread(const char *name)$/;"	f
SDL_SYS_SetupThread	thread/psp/SDL_systhread.c	/^void SDL_SYS_SetupThread(const char *name)$/;"	f
SDL_SYS_SetupThread	thread/pthread/SDL_systhread.c	/^SDL_SYS_SetupThread(const char *name)$/;"	f
SDL_SYS_SetupThread	thread/windows/SDL_systhread.c	/^SDL_SYS_SetupThread(const char *name)$/;"	f
SDL_SYS_ToButton	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_ToButton(Uint16 button)$/;"	f	file:
SDL_SYS_ToDIEFFECT	haptic/windows/SDL_syshaptic.c	/^SDL_SYS_ToDIEFFECT(SDL_Haptic * haptic, DIEFFECT * dest,$/;"	f	file:
SDL_SYS_ToDirection	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_ToDirection(SDL_HapticDirection * dir)$/;"	f	file:
SDL_SYS_ToFFEFFECT	haptic/darwin/SDL_syshaptic.c	/^SDL_SYS_ToFFEFFECT(SDL_Haptic * haptic, FFEFFECT * dest,$/;"	f	file:
SDL_SYS_ToFFEffect	haptic/linux/SDL_syshaptic.c	/^SDL_SYS_ToFFEffect(struct ff_effect *dest, SDL_HapticEffect * src)$/;"	f	file:
SDL_SYS_WaitThread	thread/beos/SDL_systhread.c	/^SDL_SYS_WaitThread(SDL_Thread * thread)$/;"	f
SDL_SYS_WaitThread	thread/generic/SDL_systhread.c	/^SDL_SYS_WaitThread(SDL_Thread * thread)$/;"	f
SDL_SYS_WaitThread	thread/psp/SDL_systhread.c	/^void SDL_SYS_WaitThread(SDL_Thread *thread)$/;"	f
SDL_SYS_WaitThread	thread/pthread/SDL_systhread.c	/^SDL_SYS_WaitThread(SDL_Thread * thread)$/;"	f
SDL_SYS_WaitThread	thread/windows/SDL_systhread.c	/^SDL_SYS_WaitThread(SDL_Thread * thread)$/;"	f
SDL_SYS_numjoysticks	joystick/beos/SDL_bejoystick.cc	/^    static int SDL_SYS_numjoysticks = 0;$/;"	v	file:
SDL_SYS_numjoysticks	joystick/bsd/SDL_sysjoystick.c	/^static int SDL_SYS_numjoysticks = 0;$/;"	v	file:
SDL_SYS_numjoysticks	joystick/windows/SDL_mmjoystick.c	/^static int SDL_SYS_numjoysticks = 0;$/;"	v	file:
SDL_SaveAllDollarTemplates	events/SDL_gesture.c	/^int SDL_SaveAllDollarTemplates(SDL_RWops *src)$/;"	f
SDL_SaveBMP_RW	video/SDL_bmp.c	/^SDL_SaveBMP_RW(SDL_Surface * saveme, SDL_RWops * dst, int freedst)$/;"	f
SDL_SaveDollarTemplate	events/SDL_gesture.c	/^int SDL_SaveDollarTemplate(SDL_GestureID gestureId, SDL_RWops *src)$/;"	f
SDL_ScanFloat	stdlib/SDL_string.c	/^SDL_ScanFloat(const char *text, double *valuep)$/;"	f	file:
SDL_ScanLong	stdlib/SDL_string.c	/^SDL_ScanLong(const char *text, int radix, long *valuep)$/;"	f	file:
SDL_ScanLongLong	stdlib/SDL_string.c	/^SDL_ScanLongLong(const char *text, int radix, Sint64 * valuep)$/;"	f	file:
SDL_ScanUintPtrT	stdlib/SDL_string.c	/^SDL_ScanUintPtrT(const char *text, int radix, uintptr_t * valuep)$/;"	f	file:
SDL_ScanUnsignedLong	stdlib/SDL_string.c	/^SDL_ScanUnsignedLong(const char *text, int radix, unsigned long *valuep)$/;"	f	file:
SDL_ScanUnsignedLongLong	stdlib/SDL_string.c	/^SDL_ScanUnsignedLongLong(const char *text, int radix, Uint64 * valuep)$/;"	f	file:
SDL_SemPost	thread/beos/SDL_syssem.c	/^SDL_SemPost(SDL_sem * sem)$/;"	f
SDL_SemPost	thread/generic/SDL_syssem.c	/^SDL_SemPost(SDL_sem * sem)$/;"	f
SDL_SemPost	thread/psp/SDL_syssem.c	/^int SDL_SemPost(SDL_sem *sem)$/;"	f
SDL_SemPost	thread/pthread/SDL_syssem.c	/^SDL_SemPost(SDL_sem * sem)$/;"	f
SDL_SemPost	thread/windows/SDL_syssem.c	/^SDL_SemPost(SDL_sem * sem)$/;"	f
SDL_SemTryWait	thread/beos/SDL_syssem.c	/^SDL_SemTryWait(SDL_sem * sem)$/;"	f
SDL_SemTryWait	thread/generic/SDL_syssem.c	/^SDL_SemTryWait(SDL_sem * sem)$/;"	f
SDL_SemTryWait	thread/psp/SDL_syssem.c	/^int SDL_SemTryWait(SDL_sem *sem)$/;"	f
SDL_SemTryWait	thread/pthread/SDL_syssem.c	/^SDL_SemTryWait(SDL_sem * sem)$/;"	f
SDL_SemTryWait	thread/windows/SDL_syssem.c	/^SDL_SemTryWait(SDL_sem * sem)$/;"	f
SDL_SemValue	thread/beos/SDL_syssem.c	/^SDL_SemValue(SDL_sem * sem)$/;"	f
SDL_SemValue	thread/generic/SDL_syssem.c	/^SDL_SemValue(SDL_sem * sem)$/;"	f
SDL_SemValue	thread/psp/SDL_syssem.c	/^Uint32 SDL_SemValue(SDL_sem *sem)$/;"	f
SDL_SemValue	thread/pthread/SDL_syssem.c	/^SDL_SemValue(SDL_sem * sem)$/;"	f
SDL_SemValue	thread/windows/SDL_syssem.c	/^SDL_SemValue(SDL_sem * sem)$/;"	f
SDL_SemWait	thread/beos/SDL_syssem.c	/^SDL_SemWait(SDL_sem * sem)$/;"	f
SDL_SemWait	thread/generic/SDL_syssem.c	/^SDL_SemWait(SDL_sem * sem)$/;"	f
SDL_SemWait	thread/psp/SDL_syssem.c	/^int SDL_SemWait(SDL_sem *sem)$/;"	f
SDL_SemWait	thread/pthread/SDL_syssem.c	/^SDL_SemWait(SDL_sem * sem)$/;"	f
SDL_SemWait	thread/windows/SDL_syssem.c	/^SDL_SemWait(SDL_sem * sem)$/;"	f
SDL_SemWaitTimeout	thread/beos/SDL_syssem.c	/^SDL_SemWaitTimeout(SDL_sem * sem, Uint32 timeout)$/;"	f
SDL_SemWaitTimeout	thread/generic/SDL_syssem.c	/^SDL_SemWaitTimeout(SDL_sem * sem, Uint32 timeout)$/;"	f
SDL_SemWaitTimeout	thread/psp/SDL_syssem.c	/^int SDL_SemWaitTimeout(SDL_sem *sem, Uint32 timeout)$/;"	f
SDL_SemWaitTimeout	thread/pthread/SDL_syssem.c	/^SDL_SemWaitTimeout(SDL_sem * sem, Uint32 timeout)$/;"	f
SDL_SemWaitTimeout	thread/windows/SDL_syssem.c	/^SDL_SemWaitTimeout(SDL_sem * sem, Uint32 timeout)$/;"	f
SDL_SendAppEvent	events/SDL_events.c	/^SDL_SendAppEvent(SDL_EventType eventType)$/;"	f
SDL_SendClipboardUpdate	events/SDL_clipboardevents.c	/^SDL_SendClipboardUpdate(void)$/;"	f
SDL_SendDollarRecord	events/SDL_gesture.c	/^static int SDL_SendDollarRecord(SDL_GestureTouch* touch,SDL_GestureID gestureId)$/;"	f	file:
SDL_SendDropFile	events/SDL_dropevents.c	/^SDL_SendDropFile(const char *file)$/;"	f
SDL_SendEditingText	events/SDL_keyboard.c	/^SDL_SendEditingText(const char *text, int start, int length)$/;"	f
SDL_SendGestureDollar	events/SDL_gesture.c	/^static int SDL_SendGestureDollar(SDL_GestureTouch* touch,$/;"	f	file:
SDL_SendGestureMulti	events/SDL_gesture.c	/^int SDL_SendGestureMulti(SDL_GestureTouch* touch,float dTheta,float dDist)$/;"	f
SDL_SendKeyboardKey	events/SDL_keyboard.c	/^SDL_SendKeyboardKey(Uint8 state, SDL_Scancode scancode)$/;"	f
SDL_SendKeyboardKey_ex	video/directfb/SDL_DirectFB_events.c	45;"	d	file:
SDL_SendKeyboardKey_ex	video/directfb/SDL_DirectFB_events.c	50;"	d	file:
SDL_SendKeyboardText	events/SDL_keyboard.c	/^SDL_SendKeyboardText(const char *text)$/;"	f
SDL_SendKeyboardText_ex	video/directfb/SDL_DirectFB_events.c	46;"	d	file:
SDL_SendKeyboardText_ex	video/directfb/SDL_DirectFB_events.c	51;"	d	file:
SDL_SendMouseButton	events/SDL_mouse.c	/^SDL_SendMouseButton(SDL_Window * window, SDL_MouseID mouseID, Uint8 state, Uint8 button)$/;"	f
SDL_SendMouseButton_ex	video/directfb/SDL_DirectFB_events.c	44;"	d	file:
SDL_SendMouseButton_ex	video/directfb/SDL_DirectFB_events.c	49;"	d	file:
SDL_SendMouseMotion	events/SDL_mouse.c	/^SDL_SendMouseMotion(SDL_Window * window, SDL_MouseID mouseID, int relative, int x, int y)$/;"	f
SDL_SendMouseMotion_ex	video/directfb/SDL_DirectFB_events.c	43;"	d	file:
SDL_SendMouseMotion_ex	video/directfb/SDL_DirectFB_events.c	48;"	d	file:
SDL_SendMouseWheel	events/SDL_mouse.c	/^SDL_SendMouseWheel(SDL_Window * window, SDL_MouseID mouseID, int x, int y)$/;"	f
SDL_SendQuit	events/SDL_quit.c	/^SDL_SendQuit(void)$/;"	f
SDL_SendSysWMEvent	events/SDL_events.c	/^SDL_SendSysWMEvent(SDL_SysWMmsg * message)$/;"	f
SDL_SendTouch	events/SDL_touch.c	/^SDL_SendTouch(SDL_TouchID id, SDL_FingerID fingerid,$/;"	f
SDL_SendTouchMotion	events/SDL_touch.c	/^SDL_SendTouchMotion(SDL_TouchID id, SDL_FingerID fingerid,$/;"	f
SDL_SendWindowEvent	events/SDL_windowevents.c	/^SDL_SendWindowEvent(SDL_Window * window, Uint8 windowevent, int data1,$/;"	f
SDL_SetAssertionHandler	SDL_assert.c	/^void SDL_SetAssertionHandler(SDL_AssertionHandler handler, void *userdata)$/;"	f
SDL_SetClipRect	video/SDL_surface.c	/^SDL_SetClipRect(SDL_Surface * surface, const SDL_Rect * rect)$/;"	f
SDL_SetClipboardText	video/SDL_clipboard.c	/^SDL_SetClipboardText(const char *text)$/;"	f
SDL_SetColorKey	video/SDL_surface.c	/^SDL_SetColorKey(SDL_Surface * surface, int flag, Uint32 key)$/;"	f
SDL_SetCursor	events/SDL_mouse.c	/^SDL_SetCursor(SDL_Cursor * cursor)$/;"	f
SDL_SetDefaultCursor	events/SDL_mouse.c	/^SDL_SetDefaultCursor(SDL_Cursor * cursor)$/;"	f
SDL_SetDisplayModeForDisplay	video/SDL_video.c	/^SDL_SetDisplayModeForDisplay(SDL_VideoDisplay * display, const SDL_DisplayMode * mode)$/;"	f	file:
SDL_SetError	SDL_error.c	/^SDL_SetError(const char *fmt, ...)$/;"	f
SDL_SetEventFilter	events/SDL_events.c	/^SDL_SetEventFilter(SDL_EventFilter filter, void *userdata)$/;"	f
SDL_SetHint	SDL_hints.c	/^SDL_SetHint(const char *name, const char *value)$/;"	f
SDL_SetHintWithPriority	SDL_hints.c	/^SDL_SetHintWithPriority(const char *name, const char *value,$/;"	f
SDL_SetKeyboardFocus	events/SDL_keyboard.c	/^SDL_SetKeyboardFocus(SDL_Window * window)$/;"	f
SDL_SetKeymap	events/SDL_keyboard.c	/^SDL_SetKeymap(int start, SDL_Keycode * keys, int length)$/;"	f
SDL_SetMainReady	SDL.c	/^SDL_SetMainReady(void)$/;"	f
SDL_SetModState	events/SDL_keyboard.c	/^SDL_SetModState(SDL_Keymod modstate)$/;"	f
SDL_SetMouseFocus	events/SDL_mouse.c	/^SDL_SetMouseFocus(SDL_Window * window)$/;"	f
SDL_SetPaletteColors	video/SDL_pixels.c	/^SDL_SetPaletteColors(SDL_Palette * palette, const SDL_Color * colors,$/;"	f
SDL_SetPixelFormatPalette	video/SDL_pixels.c	/^SDL_SetPixelFormatPalette(SDL_PixelFormat * format, SDL_Palette *palette)$/;"	f
SDL_SetRelativeMouseMode	events/SDL_mouse.c	/^SDL_SetRelativeMouseMode(SDL_bool enabled)$/;"	f
SDL_SetRenderDrawBlendMode	render/SDL_render.c	/^SDL_SetRenderDrawBlendMode(SDL_Renderer * renderer, SDL_BlendMode blendMode)$/;"	f
SDL_SetRenderDrawColor	render/SDL_render.c	/^SDL_SetRenderDrawColor(SDL_Renderer * renderer,$/;"	f
SDL_SetRenderTarget	render/SDL_render.c	/^SDL_SetRenderTarget(SDL_Renderer *renderer, SDL_Texture *texture)$/;"	f
SDL_SetScancodeName	events/SDL_keyboard.c	/^SDL_SetScancodeName(SDL_Scancode scancode, const char *name)$/;"	f
SDL_SetSurfaceAlphaMod	video/SDL_surface.c	/^SDL_SetSurfaceAlphaMod(SDL_Surface * surface, Uint8 alpha)$/;"	f
SDL_SetSurfaceBlendMode	video/SDL_surface.c	/^SDL_SetSurfaceBlendMode(SDL_Surface * surface, SDL_BlendMode blendMode)$/;"	f
SDL_SetSurfaceColorMod	video/SDL_surface.c	/^SDL_SetSurfaceColorMod(SDL_Surface * surface, Uint8 r, Uint8 g, Uint8 b)$/;"	f
SDL_SetSurfacePalette	video/SDL_surface.c	/^SDL_SetSurfacePalette(SDL_Surface * surface, SDL_Palette * palette)$/;"	f
SDL_SetSurfaceRLE	video/SDL_surface.c	/^SDL_SetSurfaceRLE(SDL_Surface * surface, int flag)$/;"	f
SDL_SetTextInputRect	video/SDL_video.c	/^SDL_SetTextInputRect(SDL_Rect *rect)$/;"	f
SDL_SetTextureAlphaMod	render/SDL_render.c	/^SDL_SetTextureAlphaMod(SDL_Texture * texture, Uint8 alpha)$/;"	f
SDL_SetTextureBlendMode	render/SDL_render.c	/^SDL_SetTextureBlendMode(SDL_Texture * texture, SDL_BlendMode blendMode)$/;"	f
SDL_SetTextureColorMod	render/SDL_render.c	/^SDL_SetTextureColorMod(SDL_Texture * texture, Uint8 r, Uint8 g, Uint8 b)$/;"	f
SDL_SetThreadPriority	thread/SDL_thread.c	/^SDL_SetThreadPriority(SDL_ThreadPriority priority)$/;"	f
SDL_SetWindowBordered	video/SDL_video.c	/^SDL_SetWindowBordered(SDL_Window * window, SDL_bool bordered)$/;"	f
SDL_SetWindowBrightness	video/SDL_video.c	/^SDL_SetWindowBrightness(SDL_Window * window, float brightness)$/;"	f
SDL_SetWindowData	video/SDL_video.c	/^SDL_SetWindowData(SDL_Window * window, const char *name, void *userdata)$/;"	f
SDL_SetWindowDisplayMode	video/SDL_video.c	/^SDL_SetWindowDisplayMode(SDL_Window * window, const SDL_DisplayMode * mode)$/;"	f
SDL_SetWindowFullscreen	video/SDL_video.c	/^SDL_SetWindowFullscreen(SDL_Window * window, Uint32 flags)$/;"	f
SDL_SetWindowGammaRamp	video/SDL_video.c	/^SDL_SetWindowGammaRamp(SDL_Window * window, const Uint16 * red,$/;"	f
SDL_SetWindowGrab	video/SDL_video.c	/^SDL_SetWindowGrab(SDL_Window * window, SDL_bool grabbed)$/;"	f
SDL_SetWindowIcon	video/SDL_video.c	/^SDL_SetWindowIcon(SDL_Window * window, SDL_Surface * icon)$/;"	f
SDL_SetWindowMaximumSize	video/SDL_video.c	/^SDL_SetWindowMaximumSize(SDL_Window * window, int max_w, int max_h)$/;"	f
SDL_SetWindowMinimumSize	video/SDL_video.c	/^SDL_SetWindowMinimumSize(SDL_Window * window, int min_w, int min_h)$/;"	f
SDL_SetWindowPosition	video/SDL_video.c	/^SDL_SetWindowPosition(SDL_Window * window, int x, int y)$/;"	f
SDL_SetWindowShape	video/SDL_shape.c	/^SDL_SetWindowShape(SDL_Window *window,SDL_Surface *shape,SDL_WindowShapeMode *shape_mode)$/;"	f
SDL_SetWindowSize	video/SDL_video.c	/^SDL_SetWindowSize(SDL_Window * window, int w, int h)$/;"	f
SDL_SetWindowTitle	video/SDL_video.c	/^SDL_SetWindowTitle(SDL_Window * window, const char *title)$/;"	f
SDL_ShapeData	video/cocoa/SDL_cocoashape.h	/^} SDL_ShapeData;$/;"	t	typeref:struct:__anon39
SDL_ShapeData	video/directfb/SDL_DirectFB_shape.h	/^} SDL_ShapeData;$/;"	t	typeref:struct:__anon47
SDL_ShapeData	video/windows/SDL_windowsshape.h	/^} SDL_ShapeData;$/;"	t	typeref:struct:__anon58
SDL_ShapeData	video/x11/SDL_x11shape.h	/^} SDL_ShapeData;$/;"	t	typeref:struct:__anon21
SDL_ShapeDriver	video/SDL_sysvideo.h	/^struct SDL_ShapeDriver$/;"	s
SDL_ShapeDriver	video/SDL_sysvideo.h	/^typedef struct SDL_ShapeDriver SDL_ShapeDriver;$/;"	t	typeref:struct:SDL_ShapeDriver
SDL_ShapeKind	video/SDL_shape_internals.h	/^typedef enum { QuadShape,TransparentShape,OpaqueShape } SDL_ShapeKind;$/;"	t	typeref:enum:__anon33
SDL_ShapeTree	video/SDL_shape_internals.h	/^} SDL_ShapeTree;$/;"	t	typeref:struct:__anon34
SDL_ShapeUnion	video/SDL_shape_internals.h	/^} SDL_ShapeUnion;$/;"	t	typeref:union:__anon32
SDL_ShouldAllowTopmost	video/SDL_video.c	/^SDL_ShouldAllowTopmost(void)$/;"	f
SDL_ShouldPollJoystick	events/SDL_events.c	/^SDL_ShouldPollJoystick()$/;"	f	file:
SDL_ShowCursor	events/SDL_mouse.c	/^SDL_ShowCursor(int toggle)$/;"	f
SDL_ShowMessageBox	video/SDL_video.c	/^SDL_ShowMessageBox(const SDL_MessageBoxData *messageboxdata, int *buttonid)$/;"	f
SDL_ShowSimpleMessageBox	video/SDL_video.c	/^SDL_ShowSimpleMessageBox(Uint32 flags, const char *title, const char *message, SDL_Window *window)$/;"	f
SDL_ShowWindow	video/SDL_video.c	/^SDL_ShowWindow(SDL_Window * window)$/;"	f
SDL_SoftBlit	video/SDL_blit.c	/^SDL_SoftBlit(SDL_Surface * src, SDL_Rect * srcrect,$/;"	f	file:
SDL_SoftStretch	video/SDL_stretch.c	/^SDL_SoftStretch(SDL_Surface * src, const SDL_Rect * srcrect,$/;"	f
SDL_StartEventLoop	events/SDL_events.c	/^SDL_StartEventLoop(void)$/;"	f
SDL_StartTextInput	video/SDL_video.c	/^SDL_StartTextInput(void)$/;"	f
SDL_StartTicks	timer/beos/SDL_systimer.c	/^SDL_StartTicks(void)$/;"	f
SDL_StartTicks	timer/dummy/SDL_systimer.c	/^SDL_StartTicks(void)$/;"	f
SDL_StartTicks	timer/psp/SDL_systimer.c	/^void SDL_StartTicks(void)$/;"	f
SDL_StartTicks	timer/unix/SDL_systimer.c	/^SDL_StartTicks(void)$/;"	f
SDL_StartTicks	timer/windows/SDL_systimer.c	/^SDL_StartTicks(void)$/;"	f
SDL_StopEventLoop	events/SDL_events.c	/^SDL_StopEventLoop(void)$/;"	f
SDL_StopTextInput	video/SDL_video.c	/^SDL_StopTextInput(void)$/;"	f
SDL_StreamDeinit	audio/SDL_audio.c	/^SDL_StreamDeinit(SDL_AudioStreamer * stream)$/;"	f	file:
SDL_StreamLength	audio/SDL_audio.c	/^SDL_StreamLength(SDL_AudioStreamer * stream)$/;"	f	file:
SDL_StreamRead	audio/SDL_audio.c	/^SDL_StreamRead(SDL_AudioStreamer * stream, Uint8 * buf, int length)$/;"	f	file:
SDL_StreamWrite	audio/SDL_audio.c	/^SDL_StreamWrite(SDL_AudioStreamer * stream, Uint8 * buf, int length)$/;"	f	file:
SDL_SubsystemRefCount	SDL.c	/^static Uint8 SDL_SubsystemRefCount[ 32 ];$/;"	v	file:
SDL_SysWMEntry	events/SDL_events.c	/^} SDL_SysWMEntry;$/;"	t	typeref:struct:_SDL_SysWMEntry	file:
SDL_TESTFONTDATAMAX	test/SDL_test_font.c	31;"	d	file:
SDL_TLSCleanup	thread/SDL_thread.c	/^SDL_TLSCleanup()$/;"	f	file:
SDL_TLSCreate	thread/SDL_thread.c	/^SDL_TLSCreate()$/;"	f
SDL_TLSData	thread/SDL_thread_c.h	/^} SDL_TLSData;$/;"	t	typeref:struct:__anon1
SDL_TLSEntry	thread/SDL_thread.c	/^typedef struct SDL_TLSEntry {$/;"	s	file:
SDL_TLSEntry	thread/SDL_thread.c	/^} SDL_TLSEntry;$/;"	t	typeref:struct:SDL_TLSEntry	file:
SDL_TLSGet	thread/SDL_thread.c	/^SDL_TLSGet(SDL_TLSID id)$/;"	f
SDL_TLSSet	thread/SDL_thread.c	/^SDL_TLSSet(SDL_TLSID id, const void *value, void (*destructor)(void *))$/;"	f
SDL_Texture	render/SDL_sysrender.h	/^struct SDL_Texture$/;"	s
SDL_Thread	thread/SDL_thread_c.h	/^struct SDL_Thread$/;"	s
SDL_ThreadID	thread/beos/SDL_systhread.c	/^SDL_ThreadID(void)$/;"	f
SDL_ThreadID	thread/generic/SDL_systhread.c	/^SDL_ThreadID(void)$/;"	f
SDL_ThreadID	thread/psp/SDL_systhread.c	/^SDL_threadID SDL_ThreadID(void)$/;"	f
SDL_ThreadID	thread/pthread/SDL_systhread.c	/^SDL_ThreadID(void)$/;"	f
SDL_ThreadID	thread/windows/SDL_systhread.c	/^SDL_ThreadID(void)$/;"	f
SDL_Timer	timer/SDL_timer.c	/^} SDL_Timer;$/;"	t	typeref:struct:_SDL_Timer	file:
SDL_TimerData	timer/SDL_timer.c	/^} SDL_TimerData;$/;"	t	typeref:struct:__anon114	file:
SDL_TimerInit	timer/SDL_timer.c	/^SDL_TimerInit(void)$/;"	f
SDL_TimerMap	timer/SDL_timer.c	/^} SDL_TimerMap;$/;"	t	typeref:struct:_SDL_TimerMap	file:
SDL_TimerQuit	timer/SDL_timer.c	/^SDL_TimerQuit(void)$/;"	f
SDL_TimerResolutionChanged	timer/windows/SDL_systimer.c	/^SDL_TimerResolutionChanged(void *userdata, const char *name, const char *oldValue, const char *hint)$/;"	f	file:
SDL_TimerThread	timer/SDL_timer.c	/^SDL_TimerThread(void *_data)$/;"	f	file:
SDL_Touch	events/SDL_touch_c.h	/^typedef struct SDL_Touch$/;"	s
SDL_Touch	events/SDL_touch_c.h	/^} SDL_Touch;$/;"	t	typeref:struct:SDL_Touch
SDL_TouchInit	events/SDL_touch.c	/^SDL_TouchInit(void)$/;"	f
SDL_TouchQuit	events/SDL_touch.c	/^SDL_TouchQuit(void)$/;"	f
SDL_TraversalFunction	video/SDL_shape_internals.h	/^typedef void(*SDL_TraversalFunction)(SDL_ShapeTree*,void*);$/;"	t
SDL_TraverseShapeTree	video/SDL_shape.c	/^SDL_TraverseShapeTree(SDL_ShapeTree *tree,SDL_TraversalFunction function,void* closure)$/;"	f
SDL_TryLockMutex	thread/generic/SDL_sysmutex.c	/^SDL_TryLockMutex(SDL_mutex * mutex)$/;"	f
SDL_TryLockMutex	thread/pthread/SDL_sysmutex.c	/^SDL_TryLockMutex(SDL_mutex * mutex)$/;"	f
SDL_TryLockMutex	thread/windows/SDL_sysmutex.c	/^SDL_TryLockMutex(SDL_mutex * mutex)$/;"	f
SDL_UCS4ToUTF8	events/SDL_keyboard.c	/^SDL_UCS4ToUTF8(Uint32 ch, char *dst)$/;"	f	file:
SDL_UDEV_SYM	joystick/linux/SDL_sysjoystick.c	111;"	d	file:
SDL_UDEV_SYM	joystick/linux/SDL_sysjoystick.c	136;"	d	file:
SDL_USE_LIBDBUS	video/x11/SDL_x11video.h	57;"	d
SDL_USE_LIBUDEV	joystick/linux/SDL_sysjoystick.c	60;"	d	file:
SDL_UnRLESurface	video/SDL_RLEaccel.c	/^SDL_UnRLESurface(SDL_Surface * surface, int recode)$/;"	f
SDL_UninitializedVideo	video/SDL_video.c	/^SDL_UninitializedVideo()$/;"	f	file:
SDL_UnionRect	video/SDL_rect.c	/^SDL_UnionRect(const SDL_Rect * A, const SDL_Rect * B, SDL_Rect * result)$/;"	f
SDL_UnloadObject	loadso/beos/SDL_sysloadso.c	/^SDL_UnloadObject(void *handle)$/;"	f
SDL_UnloadObject	loadso/dlopen/SDL_sysloadso.c	/^SDL_UnloadObject(void *handle)$/;"	f
SDL_UnloadObject	loadso/dummy/SDL_sysloadso.c	/^SDL_UnloadObject(void *handle)$/;"	f
SDL_UnloadObject	loadso/windows/SDL_sysloadso.c	/^SDL_UnloadObject(void *handle)$/;"	f
SDL_UnlockAudio	audio/SDL_audio.c	/^SDL_UnlockAudio(void)$/;"	f
SDL_UnlockAudioDevice	audio/SDL_audio.c	/^SDL_UnlockAudioDevice(SDL_AudioDeviceID devid)$/;"	f
SDL_UnlockMutex	thread/pthread/SDL_sysmutex.c	/^SDL_UnlockMutex(SDL_mutex * mutex)$/;"	f
SDL_UnlockMutex	thread/windows/SDL_sysmutex.c	/^SDL_UnlockMutex(SDL_mutex * mutex)$/;"	f
SDL_UnlockSurface	video/SDL_surface.c	/^SDL_UnlockSurface(SDL_Surface * surface)$/;"	f
SDL_UnlockTexture	render/SDL_render.c	/^SDL_UnlockTexture(SDL_Texture * texture)$/;"	f
SDL_UnlockTextureNative	render/SDL_render.c	/^SDL_UnlockTextureNative(SDL_Texture * texture)$/;"	f	file:
SDL_UnlockTextureYUV	render/SDL_render.c	/^SDL_UnlockTextureYUV(SDL_Texture * texture)$/;"	f	file:
SDL_UnmaskSignals	thread/beos/SDL_systhread.c	/^SDL_UnmaskSignals(sigset_t * omask)$/;"	f
SDL_UnregisterApp	video/windows/SDL_windowsevents.c	/^SDL_UnregisterApp()$/;"	f
SDL_UpdateFullscreenMode	video/SDL_video.c	/^SDL_UpdateFullscreenMode(SDL_Window * window, SDL_bool fullscreen)$/;"	f	file:
SDL_UpdateMouseFocus	events/SDL_mouse.c	/^SDL_UpdateMouseFocus(SDL_Window * window, int x, int y, Uint32 buttonstate)$/;"	f	file:
SDL_UpdateTexture	render/SDL_render.c	/^SDL_UpdateTexture(SDL_Texture * texture, const SDL_Rect * rect,$/;"	f
SDL_UpdateTextureNative	render/SDL_render.c	/^SDL_UpdateTextureNative(SDL_Texture * texture, const SDL_Rect * rect,$/;"	f	file:
SDL_UpdateTextureYUV	render/SDL_render.c	/^SDL_UpdateTextureYUV(SDL_Texture * texture, const SDL_Rect * rect,$/;"	f	file:
SDL_UpdateWindowGrab	video/SDL_video.c	/^SDL_UpdateWindowGrab(SDL_Window * window)$/;"	f
SDL_UpdateWindowSurface	video/SDL_video.c	/^SDL_UpdateWindowSurface(SDL_Window * window)$/;"	f
SDL_UpdateWindowSurfaceRects	video/SDL_video.c	/^SDL_UpdateWindowSurfaceRects(SDL_Window * window, const SDL_Rect * rects,$/;"	f
SDL_UpdateWindowTexture	video/SDL_video.c	/^SDL_UpdateWindowTexture(_THIS, SDL_Window * window, const SDL_Rect * rects, int numrects)$/;"	f	file:
SDL_UpperBlit	video/SDL_surface.c	/^SDL_UpperBlit(SDL_Surface * src, const SDL_Rect * srcrect,$/;"	f
SDL_UpperBlitScaled	video/SDL_surface.c	/^SDL_UpperBlitScaled(SDL_Surface * src, const SDL_Rect * srcrect,$/;"	f
SDL_Upsample_F32LSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32LSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32LSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32LSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32LSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32LSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32LSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32LSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32LSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32LSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32LSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32LSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32LSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32LSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32LSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32LSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32LSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32LSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32LSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32LSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32LSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32LSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32LSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32LSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32LSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32LSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32LSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32LSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32LSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32LSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32MSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32MSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32MSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32MSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32MSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32MSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32MSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32MSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32MSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32MSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32MSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32MSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32MSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32MSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32MSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32MSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32MSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32MSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32MSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32MSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32MSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32MSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32MSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32MSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32MSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32MSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32MSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32MSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_F32MSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_F32MSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16LSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16LSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16LSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16LSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16LSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16LSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16LSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16LSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16LSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16LSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16LSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16LSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16LSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16LSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16LSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16LSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16LSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16LSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16LSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16LSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16LSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16LSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16LSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16LSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16LSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16LSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16LSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16LSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16LSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16LSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16MSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16MSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16MSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16MSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16MSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16MSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16MSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16MSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16MSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16MSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16MSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16MSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16MSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16MSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16MSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16MSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16MSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16MSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16MSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16MSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16MSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16MSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16MSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16MSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16MSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16MSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16MSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16MSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S16MSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S16MSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32LSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32LSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32LSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32LSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32LSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32LSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32LSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32LSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32LSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32LSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32LSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32LSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32LSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32LSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32LSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32LSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32LSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32LSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32LSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32LSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32LSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32LSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32LSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32LSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32LSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32LSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32LSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32LSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32LSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32LSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32MSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32MSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32MSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32MSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32MSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32MSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32MSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32MSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32MSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32MSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32MSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32MSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32MSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32MSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32MSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32MSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32MSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32MSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32MSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32MSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32MSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32MSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32MSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32MSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32MSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32MSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32MSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32MSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S32MSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S32MSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S8_1c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S8_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S8_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S8_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S8_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S8_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S8_2c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S8_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S8_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S8_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S8_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S8_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S8_4c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S8_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S8_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S8_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S8_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S8_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S8_6c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S8_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S8_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S8_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S8_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S8_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S8_8c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S8_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S8_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S8_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_S8_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_S8_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16LSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16LSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16LSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16LSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16LSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16LSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16LSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16LSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16LSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16LSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16LSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16LSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16LSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16LSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16LSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16LSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16LSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16LSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16LSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16LSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16LSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16LSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16LSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16LSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16LSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16LSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16LSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16LSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16LSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16LSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16MSB_1c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16MSB_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16MSB_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16MSB_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16MSB_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16MSB_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16MSB_2c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16MSB_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16MSB_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16MSB_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16MSB_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16MSB_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16MSB_4c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16MSB_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16MSB_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16MSB_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16MSB_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16MSB_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16MSB_6c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16MSB_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16MSB_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16MSB_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16MSB_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16MSB_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16MSB_8c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16MSB_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16MSB_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16MSB_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U16MSB_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U16MSB_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U8_1c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U8_1c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U8_1c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U8_1c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U8_1c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U8_1c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U8_2c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U8_2c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U8_2c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U8_2c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U8_2c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U8_2c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U8_4c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U8_4c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U8_4c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U8_4c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U8_4c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U8_4c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U8_6c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U8_6c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U8_6c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U8_6c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U8_6c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U8_6c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U8_8c	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U8_8c(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U8_8c_x2	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U8_8c_x2(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_Upsample_U8_8c_x4	audio/SDL_audiotypecvt.c	/^SDL_Upsample_U8_8c_x4(SDL_AudioCVT * cvt, SDL_AudioFormat format)$/;"	f	file:
SDL_UseAltivecPrefetch	video/SDL_blit.c	/^SDL_UseAltivecPrefetch()$/;"	f	file:
SDL_VIDEO_DRIVER_X11_DYNAMIC	video/x11/SDL_x11dyn.c	45;"	d	file:
SDL_VIDEO_DRIVER_X11_DYNAMIC_XCURSOR	video/x11/SDL_x11dyn.c	51;"	d	file:
SDL_VIDEO_DRIVER_X11_DYNAMIC_XEXT	video/x11/SDL_x11dyn.c	48;"	d	file:
SDL_VIDEO_DRIVER_X11_DYNAMIC_XINERAMA	video/x11/SDL_x11dyn.c	54;"	d	file:
SDL_VIDEO_DRIVER_X11_DYNAMIC_XINPUT2	video/x11/SDL_x11dyn.c	57;"	d	file:
SDL_VIDEO_DRIVER_X11_DYNAMIC_XRANDR	video/x11/SDL_x11dyn.c	60;"	d	file:
SDL_VIDEO_DRIVER_X11_DYNAMIC_XSS	video/x11/SDL_x11dyn.c	63;"	d	file:
SDL_VIDEO_DRIVER_X11_DYNAMIC_XVIDMODE	video/x11/SDL_x11dyn.c	66;"	d	file:
SDL_VideoData	video/android/SDL_androidvideo.h	/^typedef struct SDL_VideoData$/;"	s
SDL_VideoData	video/android/SDL_androidvideo.h	/^} SDL_VideoData;$/;"	t	typeref:struct:SDL_VideoData
SDL_VideoData	video/cocoa/SDL_cocoavideo.h	/^typedef struct SDL_VideoData$/;"	s
SDL_VideoData	video/cocoa/SDL_cocoavideo.h	/^} SDL_VideoData;$/;"	t	typeref:struct:SDL_VideoData
SDL_VideoData	video/pandora/SDL_pandora.h	/^typedef struct SDL_VideoData$/;"	s
SDL_VideoData	video/pandora/SDL_pandora.h	/^} SDL_VideoData;$/;"	t	typeref:struct:SDL_VideoData
SDL_VideoData	video/psp/SDL_pspvideo.h	/^typedef struct SDL_VideoData$/;"	s
SDL_VideoData	video/psp/SDL_pspvideo.h	/^} SDL_VideoData;$/;"	t	typeref:struct:SDL_VideoData
SDL_VideoData	video/windows/SDL_windowsvideo.h	/^typedef struct SDL_VideoData$/;"	s
SDL_VideoData	video/windows/SDL_windowsvideo.h	/^} SDL_VideoData;$/;"	t	typeref:struct:SDL_VideoData
SDL_VideoData	video/x11/SDL_x11video.h	/^typedef struct SDL_VideoData$/;"	s
SDL_VideoData	video/x11/SDL_x11video.h	/^} SDL_VideoData;$/;"	t	typeref:struct:SDL_VideoData
SDL_VideoDevice	video/SDL_sysvideo.h	/^struct SDL_VideoDevice$/;"	s
SDL_VideoDevice	video/SDL_sysvideo.h	/^typedef struct SDL_VideoDevice SDL_VideoDevice;$/;"	t	typeref:struct:SDL_VideoDevice
SDL_VideoDisplay	video/SDL_sysvideo.h	/^struct SDL_VideoDisplay$/;"	s
SDL_VideoDisplay	video/SDL_sysvideo.h	/^typedef struct SDL_VideoDisplay SDL_VideoDisplay;$/;"	t	typeref:struct:SDL_VideoDisplay
SDL_VideoInit	video/SDL_video.c	/^SDL_VideoInit(const char *driver_name)$/;"	f
SDL_VideoQuit	video/SDL_video.c	/^SDL_VideoQuit(void)$/;"	f
SDL_WINDOWRENDERDATA	render/SDL_render.c	32;"	d	file:
SDL_WINDOWTEXTUREDATA	video/SDL_video.c	113;"	d	file:
SDL_WaitEvent	events/SDL_events.c	/^SDL_WaitEvent(SDL_Event * event)$/;"	f
SDL_WaitEventTimeout	events/SDL_events.c	/^SDL_WaitEventTimeout(SDL_Event * event, int timeout)$/;"	f
SDL_WaitThread	thread/SDL_thread.c	/^SDL_WaitThread(SDL_Thread * thread, int *status)$/;"	f
SDL_WarpMouseInWindow	events/SDL_mouse.c	/^SDL_WarpMouseInWindow(SDL_Window * window, int x, int y)$/;"	f
SDL_WasInit	SDL.c	/^SDL_WasInit(Uint32 flags)$/;"	f
SDL_Window	video/SDL_sysvideo.h	/^struct SDL_Window$/;"	s
SDL_WindowData	video/cocoa/SDL_cocoawindow.h	/^struct SDL_WindowData$/;"	s
SDL_WindowData	video/cocoa/SDL_cocoawindow.h	/^typedef struct SDL_WindowData SDL_WindowData;$/;"	t	typeref:struct:SDL_WindowData
SDL_WindowData	video/pandora/SDL_pandora.h	/^typedef struct SDL_WindowData$/;"	s
SDL_WindowData	video/pandora/SDL_pandora.h	/^} SDL_WindowData;$/;"	t	typeref:struct:SDL_WindowData
SDL_WindowData	video/psp/SDL_pspvideo.h	/^typedef struct SDL_WindowData$/;"	s
SDL_WindowData	video/psp/SDL_pspvideo.h	/^} SDL_WindowData;$/;"	t	typeref:struct:SDL_WindowData
SDL_WindowData	video/uikit/SDL_uikitwindow.h	/^struct SDL_WindowData$/;"	s
SDL_WindowData	video/uikit/SDL_uikitwindow.h	/^typedef struct SDL_WindowData SDL_WindowData;$/;"	t	typeref:struct:SDL_WindowData
SDL_WindowData	video/windows/SDL_windowswindow.h	/^} SDL_WindowData;$/;"	t	typeref:struct:__anon57
SDL_WindowData	video/x11/SDL_x11window.h	/^} SDL_WindowData;$/;"	t	typeref:struct:__anon25
SDL_WindowHasAShape	video/SDL_shape.c	/^SDL_WindowHasAShape(SDL_Window *window)$/;"	f	file:
SDL_WindowShaper	video/SDL_sysvideo.h	/^struct SDL_WindowShaper$/;"	s
SDL_WindowShaper	video/SDL_sysvideo.h	/^typedef struct SDL_WindowShaper SDL_WindowShaper;$/;"	t	typeref:struct:SDL_WindowShaper
SDL_WindowTextureData	video/SDL_video.c	/^} SDL_WindowTextureData;$/;"	t	typeref:struct:__anon44	file:
SDL_WindowUserData	video/SDL_sysvideo.h	/^typedef struct SDL_WindowUserData$/;"	s
SDL_WindowUserData	video/SDL_sysvideo.h	/^} SDL_WindowUserData;$/;"	t	typeref:struct:SDL_WindowUserData
SDL_WriteBE16	file/SDL_rwops.c	/^SDL_WriteBE16(SDL_RWops * dst, Uint16 value)$/;"	f
SDL_WriteBE32	file/SDL_rwops.c	/^SDL_WriteBE32(SDL_RWops * dst, Uint32 value)$/;"	f
SDL_WriteBE64	file/SDL_rwops.c	/^SDL_WriteBE64(SDL_RWops * dst, Uint64 value)$/;"	f
SDL_WriteLE16	file/SDL_rwops.c	/^SDL_WriteLE16(SDL_RWops * dst, Uint16 value)$/;"	f
SDL_WriteLE32	file/SDL_rwops.c	/^SDL_WriteLE32(SDL_RWops * dst, Uint32 value)$/;"	f
SDL_WriteLE64	file/SDL_rwops.c	/^SDL_WriteLE64(SDL_RWops * dst, Uint64 value)$/;"	f
SDL_WriteU8	file/SDL_rwops.c	/^SDL_WriteU8(SDL_RWops * dst, Uint8 value)$/;"	f
SDL_X11_LoadSymbols	video/x11/SDL_x11dyn.c	/^SDL_X11_LoadSymbols(void)$/;"	f
SDL_X11_MODULE	video/x11/SDL_x11dyn.c	108;"	d	file:
SDL_X11_MODULE	video/x11/SDL_x11dyn.c	114;"	d	file:
SDL_X11_MODULE	video/x11/SDL_x11dyn.c	127;"	d	file:
SDL_X11_MODULE	video/x11/SDL_x11dyn.c	130;"	d	file:
SDL_X11_MODULE	video/x11/SDL_x11dyn.c	146;"	d	file:
SDL_X11_MODULE	video/x11/SDL_x11dyn.c	149;"	d	file:
SDL_X11_MODULE	video/x11/SDL_x11dyn.c	185;"	d	file:
SDL_X11_MODULE	video/x11/SDL_x11dyn.c	188;"	d	file:
SDL_X11_MODULE	video/x11/SDL_x11dyn.c	191;"	d	file:
SDL_X11_MODULE	video/x11/SDL_x11dyn.c	194;"	d	file:
SDL_X11_MODULE	video/x11/SDL_x11dyn.h	104;"	d
SDL_X11_MODULE	video/x11/SDL_x11dyn.h	107;"	d
SDL_X11_SYM	video/x11/SDL_x11dyn.c	109;"	d	file:
SDL_X11_SYM	video/x11/SDL_x11dyn.c	115;"	d	file:
SDL_X11_SYM	video/x11/SDL_x11dyn.c	128;"	d	file:
SDL_X11_SYM	video/x11/SDL_x11dyn.c	131;"	d	file:
SDL_X11_SYM	video/x11/SDL_x11dyn.c	147;"	d	file:
SDL_X11_SYM	video/x11/SDL_x11dyn.c	150;"	d	file:
SDL_X11_SYM	video/x11/SDL_x11dyn.c	186;"	d	file:
SDL_X11_SYM	video/x11/SDL_x11dyn.c	189;"	d	file:
SDL_X11_SYM	video/x11/SDL_x11dyn.c	192;"	d	file:
SDL_X11_SYM	video/x11/SDL_x11dyn.c	195;"	d	file:
SDL_X11_SYM	video/x11/SDL_x11dyn.h	105;"	d
SDL_X11_SYM	video/x11/SDL_x11dyn.h	108;"	d
SDL_X11_UnloadSymbols	video/x11/SDL_x11dyn.c	/^SDL_X11_UnloadSymbols(void)$/;"	f
SDL_X11_XESetEventToWireRetType	video/x11/SDL_x11dyn.h	/^    typedef Status(*SDL_X11_XESetEventToWireRetType) (Display *, XEvent *,$/;"	t
SDL_X11_XESetWireToEventRetType	video/x11/SDL_x11dyn.h	/^    typedef Bool(*SDL_X11_XESetWireToEventRetType) (Display *, XEvent *,$/;"	t
SDL_X11_XSynchronizeRetType	video/x11/SDL_x11dyn.h	/^    typedef int (*SDL_X11_XSynchronizeRetType) (Display *);$/;"	t
SDL_XAUDIO2_HAS_SDK	audio/xaudio2/SDL_xaudio2.c	33;"	d	file:
SDL_XAUDIO2_HAS_SDK	audio/xaudio2/SDL_xaudio2.c	39;"	d	file:
SDL_XINPUT_MAX_DEVICES	joystick/windows/SDL_dxjoystick_c.h	98;"	d
SDL_XInputGetCapabilities	joystick/windows/SDL_dxjoystick.c	/^XInputGetCapabilities_t SDL_XInputGetCapabilities = NULL;$/;"	v
SDL_XInputGetState	joystick/windows/SDL_dxjoystick.c	/^XInputGetState_t SDL_XInputGetState = NULL;$/;"	v
SDL_XInputSetState	joystick/windows/SDL_dxjoystick.c	/^XInputSetState_t SDL_XInputSetState = NULL;$/;"	v
SDL_XInputVersion	joystick/windows/SDL_dxjoystick.c	/^DWORD SDL_XInputVersion = 0;$/;"	v
SDL_abs	stdlib/SDL_stdlib.c	/^int SDL_abs(int x)$/;"	f
SDL_android_priority	SDL_log.c	/^static int SDL_android_priority[SDL_NUM_LOG_PRIORITIES] = {$/;"	v	file:
SDL_application_priority	SDL_log.c	/^static SDL_LogPriority SDL_application_priority = DEFAULT_APPLICATION_PRIORITY;$/;"	v	file:
SDL_assert_priority	SDL_log.c	/^static SDL_LogPriority SDL_assert_priority = DEFAULT_ASSERT_PRIORITY;$/;"	v	file:
SDL_atan	stdlib/SDL_stdlib.c	/^SDL_atan(double x)$/;"	f
SDL_atan2	stdlib/SDL_stdlib.c	/^SDL_atan2(double x, double y)$/;"	f
SDL_atof	stdlib/SDL_string.c	/^double SDL_atof(const char *string)$/;"	f
SDL_atoi	stdlib/SDL_string.c	/^int SDL_atoi(const char *string)$/;"	f
SDL_bInMainQuit	SDL.c	/^static SDL_bool SDL_bInMainQuit = SDL_FALSE;$/;"	v	file:
SDL_calloc	stdlib/SDL_malloc.c	/^void *SDL_calloc(size_t nmemb, size_t size)$/;"	f
SDL_category_prefixes	SDL_log.c	/^static const char *SDL_category_prefixes[SDL_LOG_CATEGORY_RESERVED1] = {$/;"	v	file:
SDL_ceil	stdlib/SDL_stdlib.c	/^SDL_ceil(double x)$/;"	f
SDL_cond	thread/generic/SDL_syscond.c	/^struct SDL_cond$/;"	s	file:
SDL_cond	thread/psp/SDL_syscond.c	/^struct SDL_cond$/;"	s	file:
SDL_cond	thread/pthread/SDL_syscond.c	/^struct SDL_cond$/;"	s	file:
SDL_copysign	stdlib/SDL_stdlib.c	/^SDL_copysign(double x, double y)$/;"	f
SDL_cos	stdlib/SDL_stdlib.c	/^SDL_cos(double x)$/;"	f
SDL_cosf	stdlib/SDL_stdlib.c	/^SDL_cosf(float x)$/;"	f
SDL_cursor	video/windows/SDL_windowsmouse.c	/^HCURSOR SDL_cursor = NULL;$/;"	v
SDL_dbus_screensaver_tickle	video/x11/SDL_x11video.c	/^SDL_dbus_screensaver_tickle(_THIS)$/;"	f
SDL_default_keymap	events/SDL_keyboard.c	/^static const SDL_Keycode SDL_default_keymap[SDL_NUM_SCANCODES] = {$/;"	v	file:
SDL_default_priority	SDL_log.c	/^static SDL_LogPriority SDL_default_priority = DEFAULT_PRIORITY;$/;"	v	file:
SDL_disabled_events	events/SDL_events.c	/^static SDL_DisabledEventBlock *SDL_disabled_events[256];$/;"	v	file:
SDL_env	stdlib/SDL_getenv.c	/^static char **SDL_env = (char **) 0;$/;"	v	file:
SDL_envmem	stdlib/SDL_getenv.c	/^static char *SDL_envmem = NULL; \/* Ugh, memory leak *\/$/;"	v	file:
SDL_envmemlen	stdlib/SDL_getenv.c	/^static size_t SDL_envmemlen = 0;$/;"	v	file:
SDL_error	SDL_error_c.h	/^typedef struct SDL_error$/;"	s
SDL_error	SDL_error_c.h	/^} SDL_error;$/;"	t	typeref:struct:SDL_error
SDL_event_watchers	events/SDL_events.c	/^static SDL_EventWatcher *SDL_event_watchers = NULL;$/;"	v	file:
SDL_expand_byte	video/SDL_pixels.c	/^Uint8* SDL_expand_byte[9] = {$/;"	v
SDL_fabs	stdlib/SDL_stdlib.c	/^SDL_fabs(double x)$/;"	f
SDL_floor	stdlib/SDL_stdlib.c	/^SDL_floor(double x)$/;"	f
SDL_free	stdlib/SDL_malloc.c	/^void SDL_free(void *ptr)$/;"	f
SDL_gamecontrollers	joystick/SDL_gamecontroller.c	/^static SDL_GameController *SDL_gamecontrollers = NULL;$/;"	v	file:
SDL_generic_TLS	thread/SDL_thread.c	/^static SDL_TLSEntry *SDL_generic_TLS;$/;"	v	file:
SDL_generic_TLS_mutex	thread/SDL_thread.c	/^static SDL_mutex *SDL_generic_TLS_mutex;$/;"	v	file:
SDL_gestureTouch	events/SDL_gesture.c	/^SDL_GestureTouch *SDL_gestureTouch;$/;"	v
SDL_getenv	stdlib/SDL_getenv.c	/^SDL_getenv(const char *name)$/;"	f
SDL_global_error	SDL_error.c	/^static SDL_error SDL_global_error;$/;"	v	file:
SDL_hapticlist	haptic/darwin/SDL_syshaptic.c	/^} SDL_hapticlist[MAX_HAPTICS];$/;"	v	typeref:struct:__anon99	file:
SDL_hapticlist	haptic/linux/SDL_syshaptic.c	/^} SDL_hapticlist[MAX_HAPTICS];$/;"	v	typeref:struct:__anon98	file:
SDL_hapticlist	haptic/windows/SDL_syshaptic.c	/^} SDL_hapticlist[MAX_HAPTICS];$/;"	v	typeref:struct:__anon100	file:
SDL_haptics	haptic/SDL_haptic.c	/^SDL_Haptic **SDL_haptics = NULL;$/;"	v
SDL_hints	SDL_hints.c	/^static SDL_Hint *SDL_hints;$/;"	v	file:
SDL_iconv	stdlib/SDL_iconv.c	/^SDL_iconv(SDL_iconv_t cd,$/;"	f
SDL_iconv_close	stdlib/SDL_iconv.c	/^SDL_iconv_close(SDL_iconv_t cd)$/;"	f
SDL_iconv_open	stdlib/SDL_iconv.c	/^SDL_iconv_open(const char *tocode, const char *fromcode)$/;"	f
SDL_iconv_string	stdlib/SDL_iconv.c	/^SDL_iconv_string(const char *tocode, const char *fromcode, const char *inbuf,$/;"	f
SDL_isdigit	stdlib/SDL_stdlib.c	/^int SDL_isdigit(int x) { return ((x) >= '0') && ((x) <= '9'); }$/;"	f
SDL_isdigit	stdlib/SDL_stdlib.c	/^int SDL_isdigit(int x) { return isdigit(x); }$/;"	f
SDL_islowerhex	stdlib/SDL_string.c	29;"	d	file:
SDL_isspace	stdlib/SDL_stdlib.c	/^int SDL_isspace(int x) { return ((x) == ' ') || ((x) == '\\t') || ((x) == '\\r') || ((x) == '\\n') || ((x) == '\\f') || ((x) == '\\v'); }$/;"	f
SDL_isspace	stdlib/SDL_stdlib.c	/^int SDL_isspace(int x) { return isspace(x); }$/;"	f
SDL_isupperhex	stdlib/SDL_string.c	28;"	d	file:
SDL_itoa	stdlib/SDL_string.c	/^SDL_itoa(int value, char *string, int radix)$/;"	f
SDL_joylist	joystick/linux/SDL_sysjoystick.c	/^static SDL_joylist_item *SDL_joylist = NULL;$/;"	v	file:
SDL_joylist_item	joystick/linux/SDL_sysjoystick.c	/^typedef struct SDL_joylist_item$/;"	s	file:
SDL_joylist_item	joystick/linux/SDL_sysjoystick.c	/^} SDL_joylist_item;$/;"	t	typeref:struct:SDL_joylist_item	file:
SDL_joylist_tail	joystick/linux/SDL_sysjoystick.c	/^static SDL_joylist_item *SDL_joylist_tail = NULL;$/;"	v	file:
SDL_joyname	joystick/beos/SDL_bejoystick.cc	/^    static char *SDL_joyname[MAX_JOYSTICKS];$/;"	v	file:
SDL_joyport	joystick/beos/SDL_bejoystick.cc	/^    static char *SDL_joyport[MAX_JOYSTICKS];$/;"	v	file:
SDL_joystick_allows_background_events	joystick/SDL_joystick.c	/^static SDL_bool SDL_joystick_allows_background_events = SDL_FALSE;$/;"	v	file:
SDL_joysticks	joystick/SDL_joystick.c	/^static SDL_Joystick *SDL_joysticks = NULL;$/;"	v	file:
SDL_keyboard	events/SDL_keyboard.c	/^static SDL_Keyboard SDL_keyboard;$/;"	v	file:
SDL_lltoa	stdlib/SDL_string.c	/^SDL_lltoa(Sint64 value, char *string, int radix)$/;"	f
SDL_log	stdlib/SDL_stdlib.c	/^SDL_log(double x)$/;"	f
SDL_log_function	SDL_log.c	/^static SDL_LogOutputFunction SDL_log_function = SDL_LogOutput;$/;"	v	file:
SDL_log_userdata	SDL_log.c	/^static void *SDL_log_userdata = NULL;$/;"	v	file:
SDL_loglevels	SDL_log.c	/^static SDL_LogLevel *SDL_loglevels;$/;"	v	file:
SDL_ltoa	stdlib/SDL_string.c	/^SDL_ltoa(long value, char *string, int radix)$/;"	f
SDL_main_stub_symbol	main/dummy/SDL_dummy_main.c	/^SDL_main_stub_symbol(void)$/;"	f
SDL_malloc	stdlib/SDL_malloc.c	/^void *SDL_malloc(size_t size)$/;"	f
SDL_memcmp	stdlib/SDL_string.c	/^SDL_memcmp(const void *s1, const void *s2, size_t len)$/;"	f
SDL_memcpy	stdlib/SDL_string.c	/^SDL_memcpy(void *dst, const void *src, size_t len)$/;"	f
SDL_memcpyMMX	video/SDL_blit_copy.c	/^SDL_memcpyMMX(Uint8 * dst, const Uint8 * src, int len)$/;"	f	file:
SDL_memcpySSE	video/SDL_blit_copy.c	/^SDL_memcpySSE(Uint8 * dst, const Uint8 * src, int len)$/;"	f	file:
SDL_memmove	stdlib/SDL_string.c	/^SDL_memmove(void *dst, const void *src, size_t len)$/;"	f
SDL_memset	stdlib/SDL_string.c	/^SDL_memset(void *dst, int c, size_t len)$/;"	f
SDL_mouse	events/SDL_mouse.c	/^static SDL_Mouse SDL_mouse;$/;"	v	file:
SDL_mutex	thread/generic/SDL_sysmutex.c	/^struct SDL_mutex$/;"	s	file:
SDL_mutex	thread/psp/SDL_sysmutex.c	/^struct SDL_mutex$/;"	s	file:
SDL_mutex	thread/pthread/SDL_sysmutex.c	/^struct SDL_mutex$/;"	s	file:
SDL_mutex	thread/pthread/SDL_sysmutex_c.h	/^struct SDL_mutex$/;"	s
SDL_mutex	thread/windows/SDL_sysmutex.c	/^struct SDL_mutex$/;"	s	file:
SDL_mutexP	thread/psp/SDL_sysmutex.c	/^SDL_mutexP(SDL_mutex * mutex)$/;"	f
SDL_mutexV	thread/generic/SDL_sysmutex.c	/^SDL_mutexV(SDL_mutex * mutex)$/;"	f
SDL_mutexV	thread/psp/SDL_sysmutex.c	/^SDL_mutexV(SDL_mutex * mutex)$/;"	f
SDL_numGestureTouches	events/SDL_gesture.c	/^int SDL_numGestureTouches = 0;$/;"	v
SDL_num_touch	events/SDL_touch.c	/^static int SDL_num_touch = 0;$/;"	v	file:
SDL_numhaptics	haptic/SDL_haptic.c	/^Uint8 SDL_numhaptics = 0;$/;"	v
SDL_pow	stdlib/SDL_stdlib.c	/^SDL_pow(double x, double y)$/;"	f
SDL_priority_prefixes	SDL_log.c	/^static const char *SDL_priority_prefixes[SDL_NUM_LOG_PRIORITIES] = {$/;"	v	file:
SDL_qsort	stdlib/SDL_qsort.c	/^SDL_qsort(void *base, size_t nmemb, size_t size, int (*compare) (const void *, const void *))$/;"	f
SDL_realloc	stdlib/SDL_malloc.c	/^void *SDL_realloc(void *ptr, size_t size)$/;"	f
SDL_rwopsbundlesupport_h	file/cocoa/SDL_rwopsbundlesupport.h	6;"	d
SDL_scalbn	stdlib/SDL_stdlib.c	/^SDL_scalbn(double x, int n)$/;"	f
SDL_scancode_names	events/SDL_keyboard.c	/^static const char *SDL_scancode_names[SDL_NUM_SCANCODES] = {$/;"	v	file:
SDL_semaphore	thread/beos/SDL_syssem.c	/^struct SDL_semaphore$/;"	s	file:
SDL_semaphore	thread/generic/SDL_syssem.c	/^struct SDL_semaphore$/;"	s	file:
SDL_semaphore	thread/psp/SDL_syssem.c	/^struct SDL_semaphore {$/;"	s	file:
SDL_semaphore	thread/pthread/SDL_syssem.c	/^struct SDL_semaphore$/;"	s	file:
SDL_semaphore	thread/windows/SDL_syssem.c	/^struct SDL_semaphore$/;"	s	file:
SDL_setenv	stdlib/SDL_getenv.c	/^SDL_setenv(const char *name, const char *value, int overwrite)$/;"	f
SDL_shaderdata_h_	render/opengles2/SDL_shaders_gles2.h	26;"	d
SDL_sin	stdlib/SDL_stdlib.c	/^SDL_sin(double x)$/;"	f
SDL_sinf	stdlib/SDL_stdlib.c	/^SDL_sinf(float x)$/;"	f
SDL_snprintf	stdlib/SDL_string.c	/^SDL_snprintf(char *text, size_t maxlen, const char *fmt, ...)$/;"	f
SDL_sqrt	stdlib/SDL_stdlib.c	/^SDL_sqrt(double x)$/;"	f
SDL_sscanf	stdlib/SDL_string.c	/^SDL_sscanf(const char *text, const char *fmt, ...)$/;"	f
SDL_strcasecmp	stdlib/SDL_string.c	/^SDL_strcasecmp(const char *str1, const char *str2)$/;"	f
SDL_strchr	stdlib/SDL_string.c	/^SDL_strchr(const char *string, int c)$/;"	f
SDL_strcmp	stdlib/SDL_string.c	/^SDL_strcmp(const char *str1, const char *str2)$/;"	f
SDL_strdup	stdlib/SDL_string.c	/^SDL_strdup(const char *string)$/;"	f
SDL_strlcat	stdlib/SDL_string.c	/^SDL_strlcat(char *dst, const char *src, size_t maxlen)$/;"	f
SDL_strlcpy	stdlib/SDL_string.c	/^SDL_strlcpy(char *dst, const char *src, size_t maxlen)$/;"	f
SDL_strlen	stdlib/SDL_string.c	/^SDL_strlen(const char *string)$/;"	f
SDL_strlwr	stdlib/SDL_string.c	/^SDL_strlwr(char *string)$/;"	f
SDL_strncasecmp	stdlib/SDL_string.c	/^SDL_strncasecmp(const char *str1, const char *str2, size_t maxlen)$/;"	f
SDL_strncmp	stdlib/SDL_string.c	/^SDL_strncmp(const char *str1, const char *str2, size_t maxlen)$/;"	f
SDL_strrchr	stdlib/SDL_string.c	/^SDL_strrchr(const char *string, int c)$/;"	f
SDL_strrev	stdlib/SDL_string.c	/^SDL_strrev(char *string)$/;"	f
SDL_strstr	stdlib/SDL_string.c	/^SDL_strstr(const char *haystack, const char *needle)$/;"	f
SDL_strtod	stdlib/SDL_string.c	/^SDL_strtod(const char *string, char **endp)$/;"	f
SDL_strtol	stdlib/SDL_string.c	/^SDL_strtol(const char *string, char **endp, int base)$/;"	f
SDL_strtoll	stdlib/SDL_string.c	/^SDL_strtoll(const char *string, char **endp, int base)$/;"	f
SDL_strtoul	stdlib/SDL_string.c	/^SDL_strtoul(const char *string, char **endp, int base)$/;"	f
SDL_strtoull	stdlib/SDL_string.c	/^SDL_strtoull(const char *string, char **endp, int base)$/;"	f
SDL_strupr	stdlib/SDL_string.c	/^SDL_strupr(char *string)$/;"	f
SDL_swap	video/windows/SDL_windowskeyboard.c	1275;"	d	file:
SDL_test_priority	SDL_log.c	/^static SDL_LogPriority SDL_test_priority = DEFAULT_TEST_PRIORITY;$/;"	v	file:
SDL_timer_data	timer/SDL_timer.c	/^static SDL_TimerData SDL_timer_data;$/;"	v	file:
SDL_tolower	stdlib/SDL_stdlib.c	/^int SDL_tolower(int x) { return ((x) >= 'A') && ((x) <= 'Z') ? ('a'+((x)-'A')) : (x); }$/;"	f
SDL_tolower	stdlib/SDL_stdlib.c	/^int SDL_tolower(int x) { return tolower(x); }$/;"	f
SDL_touchDevices	events/SDL_touch.c	/^static SDL_Touch **SDL_touchDevices = NULL;$/;"	v	file:
SDL_toupper	stdlib/SDL_stdlib.c	/^int SDL_toupper(int x) { return ((x) >= 'a') && ((x) <= 'z') ? ('A'+((x)-'a')) : (x); }$/;"	f
SDL_toupper	stdlib/SDL_stdlib.c	/^int SDL_toupper(int x) { return toupper(x); }$/;"	f
SDL_uitoa	stdlib/SDL_string.c	/^SDL_uitoa(unsigned int value, char *string, int radix)$/;"	f
SDL_ulltoa	stdlib/SDL_string.c	/^SDL_ulltoa(Uint64 value, char *string, int radix)$/;"	f
SDL_ultoa	stdlib/SDL_string.c	/^SDL_ultoa(unsigned long value, char *string, int radix)$/;"	f
SDL_updating_joystick	joystick/SDL_joystick.c	/^static SDL_Joystick *SDL_updating_joystick = NULL;$/;"	v	file:
SDL_userevents	events/SDL_events.c	/^static Uint32 SDL_userevents = SDL_USEREVENT;$/;"	v	file:
SDL_utf8strlcpy	stdlib/SDL_string.c	/^size_t SDL_utf8strlcpy(char *dst, const char *src, size_t dst_bytes)$/;"	f
SDL_vsnprintf	stdlib/SDL_string.c	/^SDL_vsnprintf(char *text, size_t maxlen, const char *fmt, va_list ap)$/;"	f
SDL_vsnprintf	stdlib/SDL_string.c	/^int SDL_vsnprintf(char *text, size_t maxlen, const char *fmt, va_list ap)$/;"	f
SDL_wcslcat	stdlib/SDL_string.c	/^SDL_wcslcat(wchar_t *dst, const wchar_t *src, size_t maxlen)$/;"	f
SDL_wcslcpy	stdlib/SDL_string.c	/^SDL_wcslcpy(wchar_t *dst, const wchar_t *src, size_t maxlen)$/;"	f
SDL_wcslen	stdlib/SDL_string.c	/^SDL_wcslen(const wchar_t * string)$/;"	f
SDL_x11Prop	video/x11/SDL_x11events.c	/^} SDL_x11Prop;$/;"	t	typeref:struct:__anon20	file:
SDLtoDFBRect	video/directfb/SDL_DirectFB_render.c	/^SDLtoDFBRect(const SDL_Rect * sr, DFBRectangle * dr)$/;"	f	file:
SDLtoDFBRect_Float	video/directfb/SDL_DirectFB_render.c	/^SDLtoDFBRect_Float(const SDL_FRect * sr, DFBRectangle * dr)$/;"	f	file:
SETUP_CLIPBOARD	core/android/SDL_android.c	994;"	d	file:
SET_ALPHA	video/SDL_blit_N.c	/^    { NO_ALPHA = 1, SET_ALPHA = 2, COPY_ALPHA = 4 } alpha;$/;"	e	enum:blit_table::__anon35	file:
SET_FLOAT_WORD	libm/math_private.h	168;"	d
SET_HIGH_WORD	libm/math_private.h	130;"	d
SET_LOW_WORD	libm/math_private.h	140;"	d
SEVERITY_ERROR	audio/directsound/directx.h	57;"	d
SHADER_NONE	render/opengl/SDL_shaders_gl.h	/^    SHADER_NONE,$/;"	e	enum:__anon93
SHADER_RGB	render/opengl/SDL_shaders_gl.h	/^    SHADER_RGB,$/;"	e	enum:__anon93
SHADER_SOLID	render/opengl/SDL_shaders_gl.h	/^    SHADER_SOLID,$/;"	e	enum:__anon93
SHADER_YV12	render/opengl/SDL_shaders_gl.h	/^    SHADER_YV12,$/;"	e	enum:__anon93
SIDE_BY_SIDE	video/x11/edid.h	/^    SIDE_BY_SIDE$/;"	e	enum:__anon11
SIX_SIZE_T_SIZES	stdlib/SDL_malloc.c	1322;"	d	file:
SIZE_T_BITSIZE	stdlib/SDL_malloc.c	1313;"	d	file:
SIZE_T_ONE	stdlib/SDL_malloc.c	1318;"	d	file:
SIZE_T_SIZE	stdlib/SDL_malloc.c	1312;"	d	file:
SIZE_T_TWO	stdlib/SDL_malloc.c	1319;"	d	file:
SIZE_T_ZERO	stdlib/SDL_malloc.c	1317;"	d	file:
SLEEP_FUDGE	audio/sun/SDL_sunaudio.c	85;"	d	file:
SMALLBIN_SHIFT	stdlib/SDL_malloc.c	2052;"	d	file:
SMALLBIN_WIDTH	stdlib/SDL_malloc.c	2053;"	d	file:
SNDIO_CloseDevice	audio/sndio/SDL_sndioaudio.c	/^SNDIO_CloseDevice(_THIS)$/;"	f	file:
SNDIO_Deinitialize	audio/sndio/SDL_sndioaudio.c	/^SNDIO_Deinitialize(void)$/;"	f	file:
SNDIO_GetDeviceBuf	audio/sndio/SDL_sndioaudio.c	/^SNDIO_GetDeviceBuf(_THIS)$/;"	f	file:
SNDIO_Init	audio/sndio/SDL_sndioaudio.c	/^SNDIO_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
SNDIO_OpenDevice	audio/sndio/SDL_sndioaudio.c	/^SNDIO_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
SNDIO_PlayDevice	audio/sndio/SDL_sndioaudio.c	/^SNDIO_PlayDevice(_THIS)$/;"	f	file:
SNDIO_WaitDevice	audio/sndio/SDL_sndioaudio.c	/^SNDIO_WaitDevice(_THIS)$/;"	f	file:
SNDIO_WaitDone	audio/sndio/SDL_sndioaudio.c	/^SNDIO_WaitDone(_THIS)$/;"	f	file:
SNDIO_bootstrap	audio/sndio/SDL_sndioaudio.c	/^AudioBootStrap SNDIO_bootstrap = {$/;"	v
SNDIO_sio_close	audio/sndio/SDL_sndioaudio.c	/^static void (*SNDIO_sio_close)(struct sio_hdl *);$/;"	v	file:
SNDIO_sio_getpar	audio/sndio/SDL_sndioaudio.c	/^static int (*SNDIO_sio_getpar)(struct sio_hdl *, struct sio_par *);$/;"	v	file:
SNDIO_sio_initpar	audio/sndio/SDL_sndioaudio.c	/^static void (*SNDIO_sio_initpar)(struct sio_par *);$/;"	v	file:
SNDIO_sio_open	audio/sndio/SDL_sndioaudio.c	/^static struct sio_hdl * (*SNDIO_sio_open)(const char *, unsigned int, int);$/;"	v	typeref:struct:SNDIO_sio_open	file:
SNDIO_sio_read	audio/sndio/SDL_sndioaudio.c	/^static size_t (*SNDIO_sio_read)(struct sio_hdl *, void *, size_t);$/;"	v	file:
SNDIO_sio_setpar	audio/sndio/SDL_sndioaudio.c	/^static int (*SNDIO_sio_setpar)(struct sio_hdl *, struct sio_par *);$/;"	v	file:
SNDIO_sio_start	audio/sndio/SDL_sndioaudio.c	/^static int (*SNDIO_sio_start)(struct sio_hdl *);$/;"	v	file:
SNDIO_sio_stop	audio/sndio/SDL_sndioaudio.c	/^static int (*SNDIO_sio_stop)(struct sio_hdl *);$/;"	v	file:
SNDIO_sio_write	audio/sndio/SDL_sndioaudio.c	/^static size_t (*SNDIO_sio_write)(struct sio_hdl *, const void *, size_t);$/;"	v	file:
SREPORT_CLEAN	joystick/bsd/SDL_sysjoystick.c	/^        SREPORT_CLEAN,$/;"	e	enum:report::__anon67	file:
SREPORT_DIRTY	joystick/bsd/SDL_sysjoystick.c	/^        SREPORT_DIRTY$/;"	e	enum:report::__anon67	file:
SREPORT_UNINIT	joystick/bsd/SDL_sysjoystick.c	/^        SREPORT_UNINIT,$/;"	e	enum:report::__anon67	file:
SSE_BEGIN	video/SDL_fillrect.c	31;"	d	file:
SSE_BEGIN	video/SDL_fillrect.c	38;"	d	file:
SSE_END	video/SDL_fillrect.c	56;"	d	file:
SSE_WORK	video/SDL_fillrect.c	47;"	d	file:
SS_EDITCONTROL	video/windows/SDL_windowsmessagebox.c	30;"	d	file:
STACK_SIZE	stdlib/SDL_qsort.c	97;"	d	file:
STDMETHODIMP_	video/windows/SDL_windowskeyboard.c	/^STDMETHODIMP_(ULONG) TSFSink_AddRef(TSFSink *sink)$/;"	f
STDMETHODIMP_	video/windows/SDL_windowskeyboard.c	/^STDMETHODIMP_(ULONG)TSFSink_Release(TSFSink *sink)$/;"	f
STORAGE_CACHED_APPLE	render/opengl/SDL_render_gl.c	676;"	d	file:
STORAGE_SHARED_APPLE	render/opengl/SDL_render_gl.c	679;"	d	file:
STORE_BYTE	video/SDL_stretch.c	58;"	d	file:
STORE_WORD	video/SDL_stretch.c	59;"	d	file:
STRICT	core/windows/SDL_windows.h	28;"	d
STRMATCH	power/macosx/SDL_syspower.c	140;"	d	file:
STRMATCH	power/macosx/SDL_syspower.c	33;"	d	file:
STYLE_BASIC	video/windows/SDL_windowswindow.c	50;"	d	file:
STYLE_BORDERLESS	video/windows/SDL_windowswindow.c	52;"	d	file:
STYLE_FULLSCREEN	video/windows/SDL_windowswindow.c	51;"	d	file:
STYLE_MASK	video/windows/SDL_windowswindow.c	55;"	d	file:
STYLE_NORMAL	video/windows/SDL_windowswindow.c	53;"	d	file:
STYLE_RESIZABLE	video/windows/SDL_windowswindow.c	54;"	d	file:
SUBLANG	video/windows/SDL_windowskeyboard.c	262;"	d	file:
SUCCEEDED	audio/directsound/directx.h	30;"	d
SUNAUDIO_CloseDevice	audio/sun/SDL_sunaudio.c	/^SUNAUDIO_CloseDevice(_THIS)$/;"	f	file:
SUNAUDIO_DetectDevices	audio/sun/SDL_sunaudio.c	/^SUNAUDIO_DetectDevices(int iscapture, SDL_AddAudioDevice addfn)$/;"	f	file:
SUNAUDIO_GetDeviceBuf	audio/sun/SDL_sunaudio.c	/^SUNAUDIO_GetDeviceBuf(_THIS)$/;"	f	file:
SUNAUDIO_Init	audio/sun/SDL_sunaudio.c	/^SUNAUDIO_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
SUNAUDIO_OpenDevice	audio/sun/SDL_sunaudio.c	/^SUNAUDIO_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
SUNAUDIO_PlayDevice	audio/sun/SDL_sunaudio.c	/^SUNAUDIO_PlayDevice(_THIS)$/;"	f	file:
SUNAUDIO_WaitDevice	audio/sun/SDL_sunaudio.c	/^SUNAUDIO_WaitDevice(_THIS)$/;"	f	file:
SUNAUDIO_bootstrap	audio/sun/SDL_sunaudio.c	/^AudioBootStrap SUNAUDIO_bootstrap = {$/;"	v
SWAP_aligned	stdlib/SDL_qsort.c	282;"	d	file:
SWAP_nonaligned	stdlib/SDL_qsort.c	277;"	d	file:
SWAP_words	stdlib/SDL_qsort.c	287;"	d	file:
SWIZ6	audio/alsa/SDL_alsa_audio.c	235;"	d	file:
SWIZ6	audio/alsa/SDL_alsa_audio.c	268;"	d	file:
SWP_NOCOPYBITS	video/windows/SDL_windowswindow.c	41;"	d	file:
SW_ActivateRenderer	render/software/SDL_render_sw.c	/^SW_ActivateRenderer(SDL_Renderer * renderer)$/;"	f	file:
SW_CreateRenderer	render/software/SDL_render_sw.c	/^SW_CreateRenderer(SDL_Window * window, Uint32 flags)$/;"	f
SW_CreateRendererForSurface	render/software/SDL_render_sw.c	/^SW_CreateRendererForSurface(SDL_Surface * surface)$/;"	f
SW_CreateTexture	render/software/SDL_render_sw.c	/^SW_CreateTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
SW_DestroyRenderer	render/software/SDL_render_sw.c	/^SW_DestroyRenderer(SDL_Renderer * renderer)$/;"	f	file:
SW_DestroyTexture	render/software/SDL_render_sw.c	/^SW_DestroyTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
SW_GetOutputSize	render/software/SDL_render_sw.c	/^SW_GetOutputSize(SDL_Renderer * renderer, int *w, int *h)$/;"	f	file:
SW_LockTexture	render/software/SDL_render_sw.c	/^SW_LockTexture(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
SW_RenderClear	render/software/SDL_render_sw.c	/^SW_RenderClear(SDL_Renderer * renderer)$/;"	f	file:
SW_RenderCopy	render/software/SDL_render_sw.c	/^SW_RenderCopy(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
SW_RenderCopyEx	render/software/SDL_render_sw.c	/^SW_RenderCopyEx(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
SW_RenderData	render/software/SDL_render_sw.c	/^} SW_RenderData;$/;"	t	typeref:struct:__anon88	file:
SW_RenderDrawLines	render/software/SDL_render_sw.c	/^SW_RenderDrawLines(SDL_Renderer * renderer, const SDL_FPoint * points,$/;"	f	file:
SW_RenderDrawPoints	render/software/SDL_render_sw.c	/^SW_RenderDrawPoints(SDL_Renderer * renderer, const SDL_FPoint * points,$/;"	f	file:
SW_RenderDriver	render/software/SDL_render_sw.c	/^SDL_RenderDriver SW_RenderDriver = {$/;"	v
SW_RenderFillRects	render/software/SDL_render_sw.c	/^SW_RenderFillRects(SDL_Renderer * renderer, const SDL_FRect * rects, int count)$/;"	f	file:
SW_RenderPresent	render/software/SDL_render_sw.c	/^SW_RenderPresent(SDL_Renderer * renderer)$/;"	f	file:
SW_RenderReadPixels	render/software/SDL_render_sw.c	/^SW_RenderReadPixels(SDL_Renderer * renderer, const SDL_Rect * rect,$/;"	f	file:
SW_SetRenderTarget	render/software/SDL_render_sw.c	/^SW_SetRenderTarget(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
SW_SetTextureAlphaMod	render/software/SDL_render_sw.c	/^SW_SetTextureAlphaMod(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
SW_SetTextureBlendMode	render/software/SDL_render_sw.c	/^SW_SetTextureBlendMode(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
SW_SetTextureColorMod	render/software/SDL_render_sw.c	/^SW_SetTextureColorMod(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
SW_UnlockTexture	render/software/SDL_render_sw.c	/^SW_UnlockTexture(SDL_Renderer * renderer, SDL_Texture * texture)$/;"	f	file:
SW_UpdateClipRect	render/software/SDL_render_sw.c	/^SW_UpdateClipRect(SDL_Renderer * renderer)$/;"	f	file:
SW_UpdateTexture	render/software/SDL_render_sw.c	/^SW_UpdateTexture(SDL_Renderer * renderer, SDL_Texture * texture,$/;"	f	file:
SW_UpdateViewport	render/software/SDL_render_sw.c	/^SW_UpdateViewport(SDL_Renderer * renderer)$/;"	f	file:
SW_WindowEvent	render/software/SDL_render_sw.c	/^SW_WindowEvent(SDL_Renderer * renderer, const SDL_WindowEvent *event)$/;"	f	file:
SYN_DROPPED	joystick/linux/SDL_sysjoystick.c	52;"	d	file:
SYS_Joystick	joystick/windows/SDL_dxjoystick.c	/^static JoyStick_DeviceData *SYS_Joystick;    \/* array to hold joystick ID values *\/$/;"	v	file:
SYS_Joystick	joystick/windows/SDL_mmjoystick.c	/^static JOYCAPS SYS_Joystick[MAX_JOYSTICKS];$/;"	v	file:
SYS_JoystickID	joystick/windows/SDL_mmjoystick.c	/^static UINT SYS_JoystickID[MAX_JOYSTICKS];$/;"	v	file:
SYS_JoystickName	joystick/windows/SDL_mmjoystick.c	/^static char *SYS_JoystickName[MAX_JOYSTICKS];$/;"	v	file:
SYS_ThreadHandle	thread/beos/SDL_systhread_c.h	/^typedef thread_id SYS_ThreadHandle;$/;"	t
SYS_ThreadHandle	thread/generic/SDL_systhread_c.h	/^typedef int SYS_ThreadHandle;$/;"	t
SYS_ThreadHandle	thread/psp/SDL_systhread_c.h	/^typedef SceUID SYS_ThreadHandle;$/;"	t
SYS_ThreadHandle	thread/pthread/SDL_systhread_c.h	/^typedef pthread_t SYS_ThreadHandle;$/;"	t
SYS_ThreadHandle	thread/windows/SDL_systhread_c.h	/^typedef HANDLE SYS_ThreadHandle;$/;"	t
S_OK	audio/directsound/directx.h	26;"	d
SaveTemplate	events/SDL_gesture.c	/^static int SaveTemplate(SDL_DollarTemplate *templ, SDL_RWops * src)$/;"	f	file:
SetBitmap	video/bwindow/SDL_BWin.h	/^    void SetBitmap(BBitmap *bitmap) { _bitmap = bitmap; }$/;"	f	class:SDL_BWin
SetBlendMode	video/directfb/SDL_DirectFB_render.c	/^SetBlendMode(DirectFB_RenderData * data, int blendMode,$/;"	f	file:
SetBufferDirty	video/bwindow/SDL_BWin.h	/^    void SetBufferDirty(bool bufferDirty) { _buffer_dirty = bufferDirty; }$/;"	f	class:SDL_BWin
SetBufferExists	video/bwindow/SDL_BWin.h	/^    void SetBufferExists(bool bufferExists) { _buffer_created = bufferExists; }$/;"	f	class:SDL_BWin
SetClipboardText	video/SDL_sysvideo.h	/^    int (*SetClipboardText) (_THIS, const char *text);$/;"	m	struct:SDL_VideoDevice
SetCurrentContext	main/beos/SDL_BApp.h	/^    void SetCurrentContext(BGLView *newContext) {$/;"	f	class:SDL_BApp
SetDIerror	joystick/windows/SDL_dxjoystick.c	/^SetDIerror(const char *function, HRESULT code)$/;"	f	file:
SetDSerror	audio/directsound/SDL_directsound.c	/^SetDSerror(const char *function, int code)$/;"	f	file:
SetDisplayMode	video/SDL_sysvideo.h	/^    int (*SetDisplayMode) (_THIS, SDL_VideoDisplay * display, SDL_DisplayMode * mode);$/;"	m	struct:SDL_VideoDevice
SetFocus	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *SetFocus)(ITfThreadMgr *, ITfDocumentMgr *);$/;"	m	struct:ITfThreadMgrVtbl
SetFocus	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *SetFocus)(ITfThreadMgrEx *, ITfDocumentMgr *);$/;"	m	struct:ITfThreadMgrExVtbl
SetID	video/bwindow/SDL_BWin.h	/^    void SetID(int32 id) { _id = id; }$/;"	f	class:SDL_BWin
SetMMerror	audio/winmm/SDL_winmm.c	/^SetMMerror(char *function, MMRESULT code)$/;"	f	file:
SetMMerror	joystick/windows/SDL_mmjoystick.c	/^SetMMerror(char *function, int code)$/;"	f
SetPageIndex	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *SetPageIndex)(ITfCandidateListUIElement *, UINT *, UINT);$/;"	m	struct:ITfCandidateListUIElementVtbl
SetRelativeMouseMode	events/SDL_mouse_c.h	/^    int (*SetRelativeMouseMode) (SDL_bool enabled);$/;"	m	struct:__anon65
SetRenderTarget	render/SDL_sysrender.h	/^    int (*SetRenderTarget) (SDL_Renderer * renderer, SDL_Texture * texture);$/;"	m	struct:SDL_Renderer
SetTextInputRect	video/SDL_sysvideo.h	/^    void (*SetTextInputRect) (_THIS, SDL_Rect *rect);$/;"	m	struct:SDL_VideoDevice
SetTextureAlphaMod	render/SDL_sysrender.h	/^    int (*SetTextureAlphaMod) (SDL_Renderer * renderer,$/;"	m	struct:SDL_Renderer
SetTextureBlendMode	render/SDL_sysrender.h	/^    int (*SetTextureBlendMode) (SDL_Renderer * renderer,$/;"	m	struct:SDL_Renderer
SetTextureColorMod	render/SDL_sysrender.h	/^    int (*SetTextureColorMod) (SDL_Renderer * renderer,$/;"	m	struct:SDL_Renderer
SetTrashBuffer	video/bwindow/SDL_BWin.h	/^    void SetTrashBuffer(bool trash) { _trash_window_buffer = trash;     }$/;"	f	class:SDL_BWin
SetWindowActive	video/x11/SDL_x11window.c	/^SetWindowActive(_THIS, SDL_Window * window)$/;"	f	file:
SetWindowBordered	video/SDL_sysvideo.h	/^    void (*SetWindowBordered) (_THIS, SDL_Window * window, SDL_bool bordered);$/;"	m	struct:SDL_VideoDevice
SetWindowBordered	video/x11/SDL_x11window.c	/^SetWindowBordered(Display *display, int screen, Window window, SDL_bool border)$/;"	f	file:
SetWindowFullscreen	video/SDL_sysvideo.h	/^    void (*SetWindowFullscreen) (_THIS, SDL_Window * window, SDL_VideoDisplay * display, SDL_bool fullscreen);$/;"	m	struct:SDL_VideoDevice
SetWindowGammaRamp	video/SDL_sysvideo.h	/^    int (*SetWindowGammaRamp) (_THIS, SDL_Window * window, const Uint16 * ramp);$/;"	m	struct:SDL_VideoDevice
SetWindowGrab	video/SDL_sysvideo.h	/^    void (*SetWindowGrab) (_THIS, SDL_Window * window, SDL_bool grabbed);$/;"	m	struct:SDL_VideoDevice
SetWindowIcon	video/SDL_sysvideo.h	/^    void (*SetWindowIcon) (_THIS, SDL_Window * window, SDL_Surface * icon);$/;"	m	struct:SDL_VideoDevice
SetWindowMaximized	video/x11/SDL_x11window.c	/^SetWindowMaximized(_THIS, SDL_Window * window, SDL_bool maximized)$/;"	f	file:
SetWindowMaximumSize	video/SDL_sysvideo.h	/^    void (*SetWindowMaximumSize) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
SetWindowMinimumSize	video/SDL_sysvideo.h	/^    void (*SetWindowMinimumSize) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
SetWindowPosition	video/SDL_sysvideo.h	/^    void (*SetWindowPosition) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
SetWindowShape	video/SDL_sysvideo.h	/^    int (*SetWindowShape)(SDL_WindowShaper *shaper,SDL_Surface *shape,SDL_WindowShapeMode *shape_mode);$/;"	m	struct:SDL_ShapeDriver
SetWindowSize	video/SDL_sysvideo.h	/^    void (*SetWindowSize) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
SetWindowTitle	video/SDL_sysvideo.h	/^    void (*SetWindowTitle) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
SetXRandRModeInfo	video/x11/SDL_x11modes.c	/^SetXRandRModeInfo(Display *display, XRRScreenResources *res, XRROutputInfo *output_info,$/;"	f	file:
SetXVidModeModeInfo	video/x11/SDL_x11modes.c	/^SetXVidModeModeInfo(const XF86VidModeModeInfo *info, SDL_DisplayMode *mode)$/;"	f
SetupWindowData	video/windows/SDL_windowswindow.c	/^SetupWindowData(_THIS, SDL_Window * window, HWND hwnd, SDL_bool created)$/;"	f	file:
SetupWindowData	video/x11/SDL_x11window.c	/^SetupWindowData(_THIS, SDL_Window * window, Window w, BOOL created)$/;"	f	file:
ShouldMinimizeOnFocusLoss	video/SDL_video.c	/^static SDL_bool ShouldMinimizeOnFocusLoss()$/;"	f	file:
ShouldUseTextureFramebuffer	video/SDL_video.c	/^ShouldUseTextureFramebuffer()$/;"	f	file:
Show	video/bwindow/SDL_BWin.h	/^    virtual void Show() {$/;"	f	class:SDL_BWin
Show	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *Show)(ITfCandidateListUIElement *, BOOL);$/;"	m	struct:ITfCandidateListUIElementVtbl
Show	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *Show)(ITfReadingInformationUIElement *, BOOL);$/;"	m	struct:ITfReadingInformationUIElementVtbl
Show	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *Show)(ITfUIElement *, BOOL);$/;"	m	struct:ITfUIElementVtbl
ShowCursor	events/SDL_mouse_c.h	/^    int (*ShowCursor) (SDL_Cursor * cursor);$/;"	m	struct:__anon65
ShowError	main/windows/SDL_windows_main.c	/^ShowError(const char *title, const char *message)$/;"	f	file:
ShowMessageBox	video/SDL_sysvideo.h	/^    int (*ShowMessageBox) (_THIS, const SDL_MessageBoxData *messageboxdata, int *buttonid);$/;"	m	struct:SDL_VideoDevice
ShowReadingWindow	video/windows/SDL_windowsvideo.h	/^    BOOL (WINAPI *ShowReadingWindow)(HIMC himc, BOOL bShow);$/;"	m	struct:SDL_VideoData
ShowScreenKeyboard	video/SDL_sysvideo.h	/^    void (*ShowScreenKeyboard) (_THIS, SDL_Window *window);$/;"	m	struct:SDL_VideoDevice
ShowWindow	video/SDL_sysvideo.h	/^    void (*ShowWindow) (_THIS, SDL_Window * window);$/;"	m	struct:SDL_VideoDevice
SkipMixerLock	audio/SDL_sysaudio.h	/^    int SkipMixerLock;  \/* !!! FIXME: do we need this anymore? *\/$/;"	m	struct:SDL_AudioDriverImpl
SortDevFunc	joystick/windows/SDL_dxjoystick.c	/^SortDevFunc(const void *a, const void *b)$/;"	f	file:
SortDevObjects	joystick/windows/SDL_dxjoystick.c	/^SortDevObjects(SDL_Joystick *joystick)$/;"	f	file:
StartBeApp	main/beos/SDL_BeApp.cc	/^StartBeApp(void *unused)$/;"	f	file:
StartDrawToBitmap	video/windows/SDL_windowskeyboard.c	/^StartDrawToBitmap(HDC hdc, HBITMAP *hhbm, int width, int height)$/;"	f	file:
StartDrawing	render/psp/SDL_render_psp.c	/^StartDrawing(SDL_Renderer * renderer)$/;"	f
StartTextInput	video/SDL_sysvideo.h	/^    void (*StartTextInput) (_THIS);$/;"	m	struct:SDL_VideoDevice
StereoType	video/x11/edid.h	/^} StereoType;$/;"	t	typeref:enum:__anon11
StopDrawToBitmap	video/windows/SDL_windowskeyboard.c	/^StopDrawToBitmap(HDC hdc, HBITMAP *hhbm)$/;"	f	file:
StopTextInput	video/SDL_sysvideo.h	/^    void (*StopTextInput) (_THIS);$/;"	m	struct:SDL_VideoDevice
SuspendScreenSaver	video/SDL_sysvideo.h	/^    void (*SuspendScreenSaver) (_THIS);$/;"	m	struct:SDL_VideoDevice
Swap	render/psp/SDL_render_psp.c	/^void Swap(float *a, float *b)$/;"	f
SwapBuffers	video/bwindow/SDL_BWin.h	/^    virtual void SwapBuffers(void) {$/;"	f	class:SDL_BWin
TEXT_FORMAT	video/windows/SDL_windowsclipboard.c	31;"	d	file:
TEXT_FORMAT	video/windows/SDL_windowsclipboard.c	33;"	d	file:
TEXT_FORMAT	video/x11/SDL_x11clipboard.c	34;"	d	file:
TEXT_FORMAT	video/x11/SDL_x11clipboard.c	36;"	d	file:
TF_INVALID_COOKIE	video/windows/SDL_msctf.h	6;"	d
TF_IPSINK_FLAG_ACTIVE	video/windows/SDL_msctf.h	7;"	d
TF_TMAE_UIELEMENTENABLEDONLY	video/windows/SDL_msctf.h	8;"	d
THREADNAME_INFO	thread/windows/SDL_systhread.c	/^} THREADNAME_INFO;$/;"	t	typeref:struct:tagTHREADNAME_INFO	file:
TLS_ALLOC_CHUNKSIZE	thread/SDL_thread_c.h	69;"	d
TOP_FOOT_SIZE	stdlib/SDL_malloc.c	2183;"	d	file:
TOUCHEVENTF_DOWN	video/windows/SDL_windowsvideo.h	58;"	d
TOUCHEVENTF_MOVE	video/windows/SDL_windowsvideo.h	57;"	d
TOUCHEVENTF_UP	video/windows/SDL_windowsvideo.h	59;"	d
TOUCHINPUT	video/windows/SDL_windowsvideo.h	/^} TOUCHINPUT, *PTOUCHINPUT;$/;"	t	typeref:struct:_TOUCHINPUT
TREEBIN_SHIFT	stdlib/SDL_malloc.c	2054;"	d	file:
TRUE	video/x11/edid-parse.c	31;"	d	file:
TRUNC_aligned	stdlib/SDL_qsort.c	107;"	d	file:
TRUNC_nonaligned	stdlib/SDL_qsort.c	106;"	d	file:
TRUNC_words	stdlib/SDL_qsort.c	108;"	d	file:
TSFSink	video/windows/SDL_windowsvideo.h	/^} TSFSink;$/;"	t	typeref:struct:__anon55
TWF_FINETOUCH	video/windows/SDL_windowsvideo.h	54;"	d
TWF_WANTPALM	video/windows/SDL_windowsvideo.h	55;"	d
TWO_SIZE_T_SIZES	stdlib/SDL_malloc.c	1320;"	d	file:
TWO_WAY_LEFT_ON_EVEN	video/x11/edid.h	/^    TWO_WAY_LEFT_ON_EVEN,$/;"	e	enum:__anon11
TWO_WAY_RIGHT_ON_EVEN	video/x11/edid.h	/^    TWO_WAY_RIGHT_ON_EVEN,$/;"	e	enum:__anon11
TextLineData	video/x11/SDL_x11messagebox.c	/^typedef struct TextLineData {$/;"	s	file:
TextLineData	video/x11/SDL_x11messagebox.c	/^} TextLineData;$/;"	t	typeref:struct:TextLineData	file:
TextureActivate	render/psp/SDL_render_psp.c	/^TextureActivate(SDL_Texture * texture)$/;"	f
TextureHasAlpha	video/directfb/SDL_DirectFB_render.c	/^TextureHasAlpha(DirectFB_TextureData * data)$/;"	f	file:
TextureNextPow2	render/psp/SDL_render_psp.c	/^TextureNextPow2(unsigned int w)$/;"	f	file:
TextureSwizzle	render/psp/SDL_render_psp.c	/^TextureSwizzle(PSP_TextureData *psp_texture)$/;"	f
TextureUnswizzle	render/psp/SDL_render_psp.c	/^int TextureUnswizzle(PSP_TextureData *psp_texture)$/;"	f
TfClientId	video/windows/SDL_msctf.h	/^typedef DWORD TfClientId;$/;"	t
TfEditCookie	video/windows/SDL_msctf.h	/^typedef DWORD TfEditCookie;$/;"	t
ThreadEntry	thread/psp/SDL_systhread.c	/^static int ThreadEntry(SceSize args, void *argp)$/;"	f	file:
ThreadInit	audio/SDL_sysaudio.h	/^    void (*ThreadInit) (_THIS); \/* Called by audio thread at start *\/$/;"	m	struct:SDL_AudioDriverImpl
ThreadStartParms	thread/windows/SDL_systhread.c	/^typedef struct ThreadStartParms$/;"	s	file:
Timing	video/x11/edid.h	/^struct Timing$/;"	s
Timing	video/x11/edid.h	/^typedef struct Timing Timing;$/;"	t	typeref:struct:Timing
ToSDL	main/beos/SDL_BApp.h	/^enum ToSDL {$/;"	g
TranslateKeycode	video/android/SDL_androidkeyboard.c	/^TranslateKeycode(int keycode)$/;"	f	file:
TranslatePOV	joystick/windows/SDL_dxjoystick.c	/^TranslatePOV(DWORD value)$/;"	f	file:
TranslatePOV	joystick/windows/SDL_mmjoystick.c	/^TranslatePOV(DWORD value)$/;"	f	file:
TransparentShape	video/SDL_shape_internals.h	/^typedef enum { QuadShape,TransparentShape,OpaqueShape } SDL_ShapeKind;$/;"	e	enum:__anon33
Type	joystick/windows/SDL_dxjoystick_c.h	/^typedef enum Type$/;"	g
Type	joystick/windows/SDL_dxjoystick_c.h	/^{ BUTTON, AXIS, HAT } Type;$/;"	t	typeref:enum:Type
UDEV_udev_device_get_action	joystick/linux/SDL_sysjoystick.c	/^static const char *(*UDEV_udev_device_get_action)(struct udev_device *) = NULL;$/;"	v	file:
UDEV_udev_device_get_devnode	joystick/linux/SDL_sysjoystick.c	/^static const char *(*UDEV_udev_device_get_devnode)(struct udev_device *) = NULL;$/;"	v	file:
UDEV_udev_device_get_property_value	joystick/linux/SDL_sysjoystick.c	/^static const char *(*UDEV_udev_device_get_property_value)(struct udev_device *, const char *) = NULL;$/;"	v	file:
UDEV_udev_device_new_from_syspath	joystick/linux/SDL_sysjoystick.c	/^static struct udev_device *(*UDEV_udev_device_new_from_syspath)(struct udev *, const char *) = NULL;$/;"	v	typeref:struct:UDEV_udev_device_new_from_syspath	file:
UDEV_udev_device_unref	joystick/linux/SDL_sysjoystick.c	/^static void (*UDEV_udev_device_unref)(struct udev_device *) = NULL;$/;"	v	file:
UDEV_udev_enumerate_add_match_property	joystick/linux/SDL_sysjoystick.c	/^static int (*UDEV_udev_enumerate_add_match_property)(struct udev_enumerate *, const char *, const char *) = NULL;$/;"	v	file:
UDEV_udev_enumerate_add_match_subsystem	joystick/linux/SDL_sysjoystick.c	/^static int (*UDEV_udev_enumerate_add_match_subsystem)(struct udev_enumerate *, const char *) = NULL;$/;"	v	file:
UDEV_udev_enumerate_get_list_entry	joystick/linux/SDL_sysjoystick.c	/^static struct udev_list_entry *(*UDEV_udev_enumerate_get_list_entry)(struct udev_enumerate *) = NULL;$/;"	v	typeref:struct:UDEV_udev_enumerate_get_list_entry	file:
UDEV_udev_enumerate_new	joystick/linux/SDL_sysjoystick.c	/^static struct udev_enumerate *(*UDEV_udev_enumerate_new)(struct udev *) = NULL;$/;"	v	typeref:struct:UDEV_udev_enumerate_new	file:
UDEV_udev_enumerate_scan_devices	joystick/linux/SDL_sysjoystick.c	/^static int (*UDEV_udev_enumerate_scan_devices)(struct udev_enumerate *) = NULL;$/;"	v	file:
UDEV_udev_enumerate_unref	joystick/linux/SDL_sysjoystick.c	/^static void (*UDEV_udev_enumerate_unref)(struct udev_enumerate *) = NULL;$/;"	v	file:
UDEV_udev_list_entry_get_name	joystick/linux/SDL_sysjoystick.c	/^static const char *(*UDEV_udev_list_entry_get_name)(struct udev_list_entry *) = NULL;$/;"	v	file:
UDEV_udev_list_entry_get_next	joystick/linux/SDL_sysjoystick.c	/^static struct udev_list_entry *(*UDEV_udev_list_entry_get_next)(struct udev_list_entry *) = NULL;$/;"	v	typeref:struct:UDEV_udev_list_entry_get_next	file:
UDEV_udev_monitor_enable_receiving	joystick/linux/SDL_sysjoystick.c	/^static int (*UDEV_udev_monitor_enable_receiving)(struct udev_monitor *) = NULL;$/;"	v	file:
UDEV_udev_monitor_filter_add_match_subsystem_devtype	joystick/linux/SDL_sysjoystick.c	/^static int (*UDEV_udev_monitor_filter_add_match_subsystem_devtype)(struct udev_monitor *, const char *, const char *) = NULL;$/;"	v	file:
UDEV_udev_monitor_get_fd	joystick/linux/SDL_sysjoystick.c	/^static int (*UDEV_udev_monitor_get_fd)(struct udev_monitor *) = NULL;$/;"	v	file:
UDEV_udev_monitor_new_from_netlink	joystick/linux/SDL_sysjoystick.c	/^static struct udev_monitor *(*UDEV_udev_monitor_new_from_netlink)(struct udev *, const char *) = NULL;$/;"	v	typeref:struct:UDEV_udev_monitor_new_from_netlink	file:
UDEV_udev_monitor_receive_device	joystick/linux/SDL_sysjoystick.c	/^static struct udev_device *(*UDEV_udev_monitor_receive_device)(struct udev_monitor *) = NULL;$/;"	v	typeref:struct:UDEV_udev_monitor_receive_device	file:
UDEV_udev_monitor_unref	joystick/linux/SDL_sysjoystick.c	/^static void (*UDEV_udev_monitor_unref)(struct udev_monitor *) = NULL;$/;"	v	file:
UDEV_udev_new	joystick/linux/SDL_sysjoystick.c	/^static struct udev *(*UDEV_udev_new)(void) = NULL;$/;"	v	typeref:struct:UDEV_udev_new	file:
UDEV_udev_unref	joystick/linux/SDL_sysjoystick.c	/^static void (*UDEV_udev_unref)(struct udev *) = NULL;$/;"	v	file:
UIElementSink_BeginUIElement	video/windows/SDL_windowskeyboard.c	/^STDMETHODIMP UIElementSink_BeginUIElement(TSFSink *sink, DWORD dwUIElementId, BOOL *pbShow)$/;"	f
UIElementSink_EndUIElement	video/windows/SDL_windowskeyboard.c	/^STDMETHODIMP UIElementSink_EndUIElement(TSFSink *sink, DWORD dwUIElementId)$/;"	f
UIElementSink_QueryInterface	video/windows/SDL_windowskeyboard.c	/^STDMETHODIMP UIElementSink_QueryInterface(TSFSink *sink, REFIID riid, PVOID *ppv)$/;"	f
UIElementSink_UpdateUIElement	video/windows/SDL_windowskeyboard.c	/^STDMETHODIMP UIElementSink_UpdateUIElement(TSFSink *sink, DWORD dwUIElementId)$/;"	f
UIInterfaceOrientationMask	video/uikit/SDL_uikitvideo.h	/^enum UIInterfaceOrientationMask$/;"	g
UIInterfaceOrientationMaskAll	video/uikit/SDL_uikitvideo.h	/^    UIInterfaceOrientationMaskAll = (UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight | UIInterfaceOrientationMaskPortraitUpsideDown),$/;"	e	enum:UIInterfaceOrientationMask
UIInterfaceOrientationMaskAllButUpsideDown	video/uikit/SDL_uikitvideo.h	/^    UIInterfaceOrientationMaskAllButUpsideDown = (UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight),$/;"	e	enum:UIInterfaceOrientationMask
UIInterfaceOrientationMaskLandscape	video/uikit/SDL_uikitvideo.h	/^    UIInterfaceOrientationMaskLandscape = (UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight),$/;"	e	enum:UIInterfaceOrientationMask
UIInterfaceOrientationMaskLandscapeLeft	video/uikit/SDL_uikitvideo.h	/^    UIInterfaceOrientationMaskLandscapeLeft = (1 << UIInterfaceOrientationLandscapeLeft),$/;"	e	enum:UIInterfaceOrientationMask
UIInterfaceOrientationMaskLandscapeRight	video/uikit/SDL_uikitvideo.h	/^    UIInterfaceOrientationMaskLandscapeRight = (1 << UIInterfaceOrientationLandscapeRight),$/;"	e	enum:UIInterfaceOrientationMask
UIInterfaceOrientationMaskPortrait	video/uikit/SDL_uikitvideo.h	/^    UIInterfaceOrientationMaskPortrait = (1 << UIInterfaceOrientationPortrait),$/;"	e	enum:UIInterfaceOrientationMask
UIInterfaceOrientationMaskPortraitUpsideDown	video/uikit/SDL_uikitvideo.h	/^    UIInterfaceOrientationMaskPortraitUpsideDown = (1 << UIInterfaceOrientationPortraitUpsideDown),$/;"	e	enum:UIInterfaceOrientationMask
UIKitKeyInfo	video/uikit/keyinfotable.h	/^} UIKitKeyInfo;$/;"	t	typeref:struct:__anon28
UILess_DisableUIUpdates	video/windows/SDL_windowskeyboard.c	/^UILess_DisableUIUpdates(SDL_VideoData *videodata)$/;"	f	file:
UILess_EnableUIUpdates	video/windows/SDL_windowskeyboard.c	/^UILess_EnableUIUpdates(SDL_VideoData *videodata)$/;"	f	file:
UILess_GetCandidateList	video/windows/SDL_windowskeyboard.c	/^UILess_GetCandidateList(SDL_VideoData *videodata, ITfCandidateListUIElement *pcandlist)$/;"	f	file:
UILess_GetUIElement	video/windows/SDL_windowskeyboard.c	/^ITfUIElement *UILess_GetUIElement(SDL_VideoData *videodata, DWORD dwUIElementId)$/;"	f
UILess_ReleaseSinks	video/windows/SDL_windowskeyboard.c	/^UILess_ReleaseSinks(SDL_VideoData *videodata)$/;"	f	file:
UILess_SetupSinks	video/windows/SDL_windowskeyboard.c	/^UILess_SetupSinks(SDL_VideoData *videodata)$/;"	f	file:
UINT16_MAX	test/SDL_test_fuzzer.c	33;"	d	file:
UINT32_MAX	test/SDL_test_fuzzer.c	34;"	d	file:
UINT64_MAX	test/SDL_test_fuzzer.c	35;"	d	file:
UINT8_MAX	test/SDL_test_fuzzer.c	32;"	d	file:
UNALIGNED_PTR	video/SDL_blit_N.c	73;"	d	file:
UNDEFINED	video/x11/edid.h	/^    UNDEFINED,$/;"	e	enum:__anon9
UNDEFINED_COLOR	video/x11/edid.h	/^    UNDEFINED_COLOR,$/;"	e	enum:__anon10
UNICODE	core/windows/SDL_windows.h	30;"	d
UNICODE_BOM	stdlib/SDL_iconv.c	87;"	d	file:
UNKNOWN_ASCII	stdlib/SDL_iconv.c	89;"	d	file:
UNKNOWN_UNICODE	stdlib/SDL_iconv.c	90;"	d	file:
USAGE_ERROR_ACTION	stdlib/SDL_malloc.c	2231;"	d	file:
USAGE_ERROR_ACTION	stdlib/SDL_malloc.c	2240;"	d	file:
USE_BUILTIN_FFS	stdlib/SDL_malloc.c	621;"	d	file:
USE_DEV_RANDOM	stdlib/SDL_malloc.c	624;"	d	file:
USE_DISPLAY_PALETTE	video/directfb/SDL_DirectFB_render.c	49;"	d	file:
USE_DUFFS_LOOP	video/SDL_blit.h	466;"	d
USE_LOCKS	stdlib/SDL_malloc.c	561;"	d	file:
USE_LOCK_BIT	stdlib/SDL_malloc.c	1517;"	d	file:
USE_LOCK_BIT	stdlib/SDL_malloc.c	1519;"	d	file:
USE_MACOS_CURSOR	events/default_cursor.h	31;"	d
USE_MMAP_BIT	stdlib/SDL_malloc.c	1351;"	d	file:
USE_MMAP_BIT	stdlib/SDL_malloc.c	1358;"	d	file:
USE_MULTI_API	video/directfb/SDL_DirectFB_video.h	57;"	d
USE_NONCONTIGUOUS_BIT	stdlib/SDL_malloc.c	1442;"	d	file:
UTF8_IsLeadByte	stdlib/SDL_string.c	31;"	d	file:
UTF8_IsTrailingByte	stdlib/SDL_string.c	32;"	d	file:
UTF8_STRING	video/x11/SDL_x11video.h	/^    Atom UTF8_STRING;$/;"	m	struct:SDL_VideoData
UTF8_TrailingBytes	stdlib/SDL_string.c	/^static int UTF8_TrailingBytes(unsigned char c)$/;"	f	file:
UnEscapeQuotes	main/windows/SDL_windows_main.c	/^UnEscapeQuotes(char *arg)$/;"	f	file:
UnRLEAlpha	video/SDL_RLEaccel.c	/^UnRLEAlpha(SDL_Surface * surface)$/;"	f	file:
UnadviseSink	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *UnadviseSink)(ITfSource *, DWORD);$/;"	m	struct:ITfSourceVtbl
UnicodeToUtf8	video/directfb/SDL_DirectFB_events.c	/^static void UnicodeToUtf8( Uint16 w , char *utf8buf)$/;"	f	file:
UnloadALSALibrary	audio/alsa/SDL_alsa_audio.c	/^UnloadALSALibrary(void)$/;"	f	file:
UnloadARTSLibrary	audio/arts/SDL_artsaudio.c	/^UnloadARTSLibrary()$/;"	f	file:
UnloadDBUSLibrary	video/x11/SDL_x11video.c	/^UnloadDBUSLibrary(void)$/;"	f	file:
UnloadESDLibrary	audio/esd/SDL_esdaudio.c	/^UnloadESDLibrary()$/;"	f	file:
UnloadFusionSoundLibrary	audio/fusionsound/SDL_fsaudio.c	/^UnloadFusionSoundLibrary()$/;"	f	file:
UnloadNASLibrary	audio/nas/SDL_nasaudio.c	/^UnloadNASLibrary(void)$/;"	f	file:
UnloadPulseAudioLibrary	audio/pulseaudio/SDL_pulseaudio.c	/^UnloadPulseAudioLibrary(void)$/;"	f	file:
UnloadSNDIOLibrary	audio/sndio/SDL_sndioaudio.c	/^UnloadSNDIOLibrary(void)$/;"	f	file:
UnloadUDEVLibrary	joystick/linux/SDL_sysjoystick.c	/^UnloadUDEVLibrary(void)$/;"	f	file:
UnlockBuffer	video/bwindow/SDL_BWin.h	/^    void UnlockBuffer() { _buffer_locker->Unlock(); }$/;"	f	class:SDL_BWin
UnlockDevice	audio/SDL_sysaudio.h	/^    void (*UnlockDevice) (_THIS);$/;"	m	struct:SDL_AudioDriverImpl
UnlockTexture	render/SDL_sysrender.h	/^    void (*UnlockTexture) (SDL_Renderer * renderer, SDL_Texture * texture);$/;"	m	struct:SDL_Renderer
UpdateClipRect	render/SDL_sysrender.h	/^    int (*UpdateClipRect) (SDL_Renderer * renderer);$/;"	m	struct:SDL_Renderer
UpdateLogicalSize	render/SDL_render.c	/^UpdateLogicalSize(SDL_Renderer *renderer)$/;"	f	file:
UpdateTexture	render/SDL_sysrender.h	/^    int (*UpdateTexture) (SDL_Renderer * renderer, SDL_Texture * texture,$/;"	m	struct:SDL_Renderer
UpdateUIElement	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *UpdateUIElement)(ITfUIElementMgr *, DWORD);$/;"	m	struct:ITfUIElementMgrVtbl
UpdateUIElement	video/windows/SDL_msctf.h	/^    HRESULT (STDMETHODCALLTYPE *UpdateUIElement)(ITfUIElementSink *, DWORD);$/;"	m	struct:ITfUIElementSinkVtbl
UpdateViewport	render/SDL_sysrender.h	/^    int (*UpdateViewport) (SDL_Renderer * renderer);$/;"	m	struct:SDL_Renderer
UpdateWindowFramebuffer	video/SDL_sysvideo.h	/^    int (*UpdateWindowFramebuffer) (_THIS, SDL_Window * window, const SDL_Rect * rects, int numrects);$/;"	m	struct:SDL_VideoDevice
VALUE_LIMIT	render/software/SDL_rotate.c	82;"	d	file:
VECUINT16_LITERAL	video/SDL_blit_N.c	64;"	d	file:
VECUINT16_LITERAL	video/SDL_blit_N.c	69;"	d	file:
VECUINT8_LITERAL	video/SDL_blit_N.c	62;"	d	file:
VECUINT8_LITERAL	video/SDL_blit_N.c	67;"	d	file:
VEC_ALIGNER	video/SDL_blit_N.c	99;"	d	file:
VIDEO_USAGE	test/SDL_test_common.c	29;"	d	file:
VK_0	video/windows/SDL_vkeys.h	23;"	d
VK_1	video/windows/SDL_vkeys.h	24;"	d
VK_2	video/windows/SDL_vkeys.h	25;"	d
VK_3	video/windows/SDL_vkeys.h	26;"	d
VK_4	video/windows/SDL_vkeys.h	27;"	d
VK_5	video/windows/SDL_vkeys.h	28;"	d
VK_6	video/windows/SDL_vkeys.h	29;"	d
VK_7	video/windows/SDL_vkeys.h	30;"	d
VK_8	video/windows/SDL_vkeys.h	31;"	d
VK_9	video/windows/SDL_vkeys.h	32;"	d
VK_A	video/windows/SDL_vkeys.h	33;"	d
VK_APOSTROPHE	video/windows/SDL_vkeys.h	72;"	d
VK_B	video/windows/SDL_vkeys.h	34;"	d
VK_BACKSLASH	video/windows/SDL_vkeys.h	70;"	d
VK_BACKTICK	video/windows/SDL_vkeys.h	73;"	d
VK_C	video/windows/SDL_vkeys.h	35;"	d
VK_COMMA	video/windows/SDL_vkeys.h	64;"	d
VK_D	video/windows/SDL_vkeys.h	36;"	d
VK_E	video/windows/SDL_vkeys.h	37;"	d
VK_ENTER	video/windows/SDL_windowsevents.c	49;"	d	file:
VK_EQUALS	video/windows/SDL_vkeys.h	63;"	d
VK_F	video/windows/SDL_vkeys.h	38;"	d
VK_G	video/windows/SDL_vkeys.h	39;"	d
VK_GRAVE	video/windows/SDL_vkeys.h	68;"	d
VK_H	video/windows/SDL_vkeys.h	40;"	d
VK_I	video/windows/SDL_vkeys.h	41;"	d
VK_J	video/windows/SDL_vkeys.h	42;"	d
VK_K	video/windows/SDL_vkeys.h	43;"	d
VK_L	video/windows/SDL_vkeys.h	44;"	d
VK_LBRACKET	video/windows/SDL_vkeys.h	69;"	d
VK_M	video/windows/SDL_vkeys.h	45;"	d
VK_MINUS	video/windows/SDL_vkeys.h	65;"	d
VK_N	video/windows/SDL_vkeys.h	46;"	d
VK_O	video/windows/SDL_vkeys.h	47;"	d
VK_OEM_102	video/windows/SDL_vkeys.h	74;"	d
VK_OEM_NEC_EQUAL	video/windows/SDL_windowsevents.c	51;"	d	file:
VK_P	video/windows/SDL_vkeys.h	48;"	d
VK_PERIOD	video/windows/SDL_vkeys.h	66;"	d
VK_Q	video/windows/SDL_vkeys.h	49;"	d
VK_R	video/windows/SDL_vkeys.h	50;"	d
VK_RBRACKET	video/windows/SDL_vkeys.h	71;"	d
VK_S	video/windows/SDL_vkeys.h	51;"	d
VK_SEMICOLON	video/windows/SDL_vkeys.h	62;"	d
VK_SLASH	video/windows/SDL_vkeys.h	67;"	d
VK_T	video/windows/SDL_vkeys.h	52;"	d
VK_U	video/windows/SDL_vkeys.h	53;"	d
VK_V	video/windows/SDL_vkeys.h	54;"	d
VK_W	video/windows/SDL_vkeys.h	55;"	d
VK_X	video/windows/SDL_vkeys.h	56;"	d
VK_Y	video/windows/SDL_vkeys.h	57;"	d
VK_Z	video/windows/SDL_vkeys.h	58;"	d
VLINE	render/software/SDL_draw.h	317;"	d
VSWIZZLE32	video/SDL_blit_N.c	74;"	d	file:
ValidEffect	haptic/SDL_haptic.c	/^ValidEffect(SDL_Haptic * haptic, int effect)$/;"	f	file:
ValidHaptic	haptic/SDL_haptic.c	/^ValidHaptic(SDL_Haptic * haptic)$/;"	f	file:
Vec2ToDLU	video/windows/SDL_windowsmessagebox.c	/^static void Vec2ToDLU(short *x, short *y)$/;"	f	file:
VertTV	render/psp/SDL_render_psp.c	/^} VertTV;$/;"	t	typeref:struct:__anon79	file:
VertV	render/psp/SDL_render_psp.c	/^} VertV;$/;"	t	typeref:struct:__anon78	file:
Vertex	render/direct3d/SDL_render_d3d.c	/^} Vertex;$/;"	t	typeref:struct:__anon96	file:
VideoBootStrap	video/SDL_sysvideo.h	/^typedef struct VideoBootStrap$/;"	s
VideoBootStrap	video/SDL_sysvideo.h	/^} VideoBootStrap;$/;"	t	typeref:struct:VideoBootStrap
VideoInit	video/SDL_sysvideo.h	/^    int (*VideoInit) (_THIS);$/;"	m	struct:SDL_VideoDevice
VideoQuit	video/SDL_sysvideo.h	/^    void (*VideoQuit) (_THIS);$/;"	m	struct:SDL_VideoDevice
VoiceCBOnBufferEnd	audio/xaudio2/SDL_xaudio2.c	/^VoiceCBOnBufferEnd(THIS_ void *data)$/;"	f	file:
VoiceCBOnBufferStart	audio/xaudio2/SDL_xaudio2.c	/^static void STDMETHODCALLTYPE VoiceCBOnBufferStart(THIS_ void *data) {}$/;"	f	file:
VoiceCBOnLoopEnd	audio/xaudio2/SDL_xaudio2.c	/^static void STDMETHODCALLTYPE VoiceCBOnLoopEnd(THIS_ void *data) {}$/;"	f	file:
VoiceCBOnStreamEnd	audio/xaudio2/SDL_xaudio2.c	/^static void STDMETHODCALLTYPE VoiceCBOnStreamEnd(THIS) {}$/;"	f	file:
VoiceCBOnVoiceError	audio/xaudio2/SDL_xaudio2.c	/^VoiceCBOnVoiceError(THIS_ void *data, HRESULT Error)$/;"	f	file:
VoiceCBOnVoiceProcessPassEnd	audio/xaudio2/SDL_xaudio2.c	/^static void STDMETHODCALLTYPE VoiceCBOnVoiceProcessPassEnd(THIS) {}$/;"	f	file:
VoiceCBOnVoiceProcessPassStart	audio/xaudio2/SDL_xaudio2.c	/^static void STDMETHODCALLTYPE VoiceCBOnVoiceProcessPassStart(THIS_ UINT32 b) {}$/;"	f	file:
W	video/windows/SDL_windowsvideo.h	/^        LOGFONTW W;$/;"	m	union:tagINPUTCONTEXT2::__anon56
WAVE	audio/SDL_wave.h	29;"	d
WAVE_FORMAT_IEEE_FLOAT	audio/directsound/SDL_directsound.c	34;"	d	file:
WAVE_FORMAT_IEEE_FLOAT	audio/winmm/SDL_winmm.c	36;"	d	file:
WAVE_MONO	audio/SDL_wave.h	39;"	d
WAVE_STEREO	audio/SDL_wave.h	40;"	d
WGL_ACCELERATION_ARB	video/windows/SDL_windowsopengl.h	70;"	d
WGL_ACCUM_ALPHA_BITS_ARB	video/windows/SDL_windowsopengl.h	104;"	d
WGL_ACCUM_BITS_ARB	video/windows/SDL_windowsopengl.h	100;"	d
WGL_ACCUM_BLUE_BITS_ARB	video/windows/SDL_windowsopengl.h	103;"	d
WGL_ACCUM_GREEN_BITS_ARB	video/windows/SDL_windowsopengl.h	102;"	d
WGL_ACCUM_RED_BITS_ARB	video/windows/SDL_windowsopengl.h	101;"	d
WGL_ALPHA_BITS_ARB	video/windows/SDL_windowsopengl.h	98;"	d
WGL_ALPHA_SHIFT_ARB	video/windows/SDL_windowsopengl.h	99;"	d
WGL_ARB_create_context	video/windows/SDL_windowsopengl.c	36;"	d	file:
WGL_ARB_create_context_profile	video/windows/SDL_windowsopengl.c	45;"	d	file:
WGL_ARB_create_context_robustness	video/windows/SDL_windowsopengl.c	52;"	d	file:
WGL_AUX_BUFFERS_ARB	video/windows/SDL_windowsopengl.h	107;"	d
WGL_BLUE_BITS_ARB	video/windows/SDL_windowsopengl.h	96;"	d
WGL_BLUE_SHIFT_ARB	video/windows/SDL_windowsopengl.h	97;"	d
WGL_COLOR_BITS_ARB	video/windows/SDL_windowsopengl.h	91;"	d
WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB	video/windows/SDL_windowsopengl.c	48;"	d	file:
WGL_CONTEXT_CORE_PROFILE_BIT_ARB	video/windows/SDL_windowsopengl.c	47;"	d	file:
WGL_CONTEXT_DEBUG_BIT_ARB	video/windows/SDL_windowsopengl.c	41;"	d	file:
WGL_CONTEXT_ES2_PROFILE_BIT_EXT	video/windows/SDL_windowsopengl.c	62;"	d	file:
WGL_CONTEXT_ES_PROFILE_BIT_EXT	video/windows/SDL_windowsopengl.c	67;"	d	file:
WGL_CONTEXT_FLAGS_ARB	video/windows/SDL_windowsopengl.c	40;"	d	file:
WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	video/windows/SDL_windowsopengl.c	42;"	d	file:
WGL_CONTEXT_LAYER_PLANE_ARB	video/windows/SDL_windowsopengl.c	39;"	d	file:
WGL_CONTEXT_MAJOR_VERSION_ARB	video/windows/SDL_windowsopengl.c	37;"	d	file:
WGL_CONTEXT_MINOR_VERSION_ARB	video/windows/SDL_windowsopengl.c	38;"	d	file:
WGL_CONTEXT_PROFILE_MASK_ARB	video/windows/SDL_windowsopengl.c	46;"	d	file:
WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB	video/windows/SDL_windowsopengl.c	54;"	d	file:
WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB	video/windows/SDL_windowsopengl.c	53;"	d	file:
WGL_DEPTH_BITS_ARB	video/windows/SDL_windowsopengl.h	105;"	d
WGL_DOUBLE_BUFFER_ARB	video/windows/SDL_windowsopengl.h	88;"	d
WGL_DRAW_TO_BITMAP_ARB	video/windows/SDL_windowsopengl.h	69;"	d
WGL_DRAW_TO_WINDOW_ARB	video/windows/SDL_windowsopengl.h	68;"	d
WGL_EXT_create_context_es2_profile	video/windows/SDL_windowsopengl.c	61;"	d	file:
WGL_EXT_create_context_es_profile	video/windows/SDL_windowsopengl.c	66;"	d	file:
WGL_FULL_ACCELERATION_ARB	video/windows/SDL_windowsopengl.h	110;"	d
WGL_GENERIC_ACCELERATION_ARB	video/windows/SDL_windowsopengl.h	109;"	d
WGL_GREEN_BITS_ARB	video/windows/SDL_windowsopengl.h	94;"	d
WGL_GREEN_SHIFT_ARB	video/windows/SDL_windowsopengl.h	95;"	d
WGL_LOSE_CONTEXT_ON_RESET_ARB	video/windows/SDL_windowsopengl.c	56;"	d	file:
WGL_NEED_PALETTE_ARB	video/windows/SDL_windowsopengl.h	71;"	d
WGL_NEED_SYSTEM_PALETTE_ARB	video/windows/SDL_windowsopengl.h	72;"	d
WGL_NO_ACCELERATION_ARB	video/windows/SDL_windowsopengl.h	108;"	d
WGL_NO_RESET_NOTIFICATION_ARB	video/windows/SDL_windowsopengl.c	55;"	d	file:
WGL_NUMBER_OVERLAYS_ARB	video/windows/SDL_windowsopengl.h	75;"	d
WGL_NUMBER_PIXEL_FORMATS_ARB	video/windows/SDL_windowsopengl.h	67;"	d
WGL_NUMBER_UNDERLAYS_ARB	video/windows/SDL_windowsopengl.h	76;"	d
WGL_PIXEL_TYPE_ARB	video/windows/SDL_windowsopengl.h	90;"	d
WGL_RED_BITS_ARB	video/windows/SDL_windowsopengl.h	92;"	d
WGL_RED_SHIFT_ARB	video/windows/SDL_windowsopengl.h	93;"	d
WGL_SAMPLES_ARB	video/windows/SDL_windowsopengl.h	120;"	d
WGL_SAMPLE_BUFFERS_ARB	video/windows/SDL_windowsopengl.h	119;"	d
WGL_SHARE_ACCUM_ARB	video/windows/SDL_windowsopengl.h	85;"	d
WGL_SHARE_DEPTH_ARB	video/windows/SDL_windowsopengl.h	83;"	d
WGL_SHARE_STENCIL_ARB	video/windows/SDL_windowsopengl.h	84;"	d
WGL_STENCIL_BITS_ARB	video/windows/SDL_windowsopengl.h	106;"	d
WGL_STEREO_ARB	video/windows/SDL_windowsopengl.h	89;"	d
WGL_SUPPORT_GDI_ARB	video/windows/SDL_windowsopengl.h	86;"	d
WGL_SUPPORT_OPENGL_ARB	video/windows/SDL_windowsopengl.h	87;"	d
WGL_SWAP_COPY_ARB	video/windows/SDL_windowsopengl.h	112;"	d
WGL_SWAP_EXCHANGE_ARB	video/windows/SDL_windowsopengl.h	111;"	d
WGL_SWAP_LAYER_BUFFERS_ARB	video/windows/SDL_windowsopengl.h	73;"	d
WGL_SWAP_METHOD_ARB	video/windows/SDL_windowsopengl.h	74;"	d
WGL_SWAP_UNDEFINED_ARB	video/windows/SDL_windowsopengl.h	113;"	d
WGL_TRANSPARENT_ALPHA_VALUE_ARB	video/windows/SDL_windowsopengl.h	81;"	d
WGL_TRANSPARENT_ARB	video/windows/SDL_windowsopengl.h	77;"	d
WGL_TRANSPARENT_BLUE_VALUE_ARB	video/windows/SDL_windowsopengl.h	80;"	d
WGL_TRANSPARENT_GREEN_VALUE_ARB	video/windows/SDL_windowsopengl.h	79;"	d
WGL_TRANSPARENT_INDEX_VALUE_ARB	video/windows/SDL_windowsopengl.h	82;"	d
WGL_TRANSPARENT_RED_VALUE_ARB	video/windows/SDL_windowsopengl.h	78;"	d
WGL_TYPE_COLORINDEX_ARB	video/windows/SDL_windowsopengl.h	115;"	d
WGL_TYPE_RGBA_ARB	video/windows/SDL_windowsopengl.h	114;"	d
WIN32	audio/directsound/directx.h	10;"	d
WIN32	stdlib/SDL_malloc.c	500;"	d	file:
WIN32_LEAN_AND_MEAN	core/windows/SDL_windows.h	27;"	d
WIN32_LEAN_AND_MEAN	main/windows/SDL_windows_main.c	13;"	d	file:
WIN32_LEAN_AND_MEAN	stdlib/SDL_malloc.c	504;"	d	file:
WINDOWS_bootstrap	video/windows/SDL_windowsvideo.c	/^VideoBootStrap WINDOWS_bootstrap = {$/;"	v
WINMM_CloseDevice	audio/winmm/SDL_winmm.c	/^WINMM_CloseDevice(_THIS)$/;"	f	file:
WINMM_DetectDevices	audio/winmm/SDL_winmm.c	/^WINMM_DetectDevices(int iscapture, SDL_AddAudioDevice addfn)$/;"	f	file:
WINMM_GetDeviceBuf	audio/winmm/SDL_winmm.c	/^WINMM_GetDeviceBuf(_THIS)$/;"	f	file:
WINMM_Init	audio/winmm/SDL_winmm.c	/^WINMM_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
WINMM_OpenDevice	audio/winmm/SDL_winmm.c	/^WINMM_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
WINMM_PlayDevice	audio/winmm/SDL_winmm.c	/^WINMM_PlayDevice(_THIS)$/;"	f	file:
WINMM_WaitDevice	audio/winmm/SDL_winmm.c	/^WINMM_WaitDevice(_THIS)$/;"	f	file:
WINMM_WaitDone	audio/winmm/SDL_winmm.c	/^WINMM_WaitDone(_THIS)$/;"	f	file:
WINMM_bootstrap	audio/winmm/SDL_winmm.c	/^AudioBootStrap WINMM_bootstrap = {$/;"	v
WINNT	audio/directsound/directx.h	12;"	d
WIN_AddDisplay	video/windows/SDL_windowsmodes.c	/^WIN_AddDisplay(LPTSTR DeviceName)$/;"	f	file:
WIN_Available	video/windows/SDL_windowsvideo.c	/^WIN_Available(void)$/;"	f	file:
WIN_CheckClipboardUpdate	video/windows/SDL_windowsclipboard.c	/^WIN_CheckClipboardUpdate(struct SDL_VideoData * data)$/;"	f
WIN_CheckRawMouseButtons	video/windows/SDL_windowsevents.c	/^WIN_CheckRawMouseButtons( ULONG rawButtons, SDL_WindowData *data )$/;"	f
WIN_CheckWParamMouseButton	video/windows/SDL_windowsevents.c	/^WIN_CheckWParamMouseButton( SDL_bool bwParamMousePressed, SDL_bool bSDLMousePressed, SDL_WindowData *data, Uint8 button )$/;"	f
WIN_CheckWParamMouseButtons	video/windows/SDL_windowsevents.c	/^WIN_CheckWParamMouseButtons( WPARAM wParam, SDL_WindowData *data )$/;"	f
WIN_CoInitialize	core/windows/SDL_windows.c	/^WIN_CoInitialize(void)$/;"	f
WIN_CoUninitialize	core/windows/SDL_windows.c	/^WIN_CoUninitialize(void)$/;"	f
WIN_CreateCursor	video/windows/SDL_windowsmouse.c	/^WIN_CreateCursor(SDL_Surface * surface, int hot_x, int hot_y)$/;"	f	file:
WIN_CreateDefaultCursor	video/windows/SDL_windowsmouse.c	/^WIN_CreateDefaultCursor()$/;"	f	file:
WIN_CreateDevice	video/windows/SDL_windowsvideo.c	/^WIN_CreateDevice(int devindex)$/;"	f	file:
WIN_CreateSystemCursor	video/windows/SDL_windowsmouse.c	/^WIN_CreateSystemCursor(SDL_SystemCursor id)$/;"	f	file:
WIN_CreateWindow	video/windows/SDL_windowswindow.c	/^WIN_CreateWindow(_THIS, SDL_Window * window)$/;"	f
WIN_CreateWindowFramebuffer	video/windows/SDL_windowsframebuffer.c	/^int WIN_CreateWindowFramebuffer(_THIS, SDL_Window * window, Uint32 * format, void ** pixels, int *pitch)$/;"	f
WIN_CreateWindowFrom	video/windows/SDL_windowswindow.c	/^WIN_CreateWindowFrom(_THIS, SDL_Window * window, const void *data)$/;"	f
WIN_DeleteDevice	video/windows/SDL_windowsvideo.c	/^WIN_DeleteDevice(SDL_VideoDevice * device)$/;"	f	file:
WIN_DestroyWindow	video/windows/SDL_windowswindow.c	/^WIN_DestroyWindow(_THIS, SDL_Window * window)$/;"	f
WIN_DestroyWindowFramebuffer	video/windows/SDL_windowsframebuffer.c	/^void WIN_DestroyWindowFramebuffer(_THIS, SDL_Window * window)$/;"	f
WIN_DialogData	video/windows/SDL_windowsmessagebox.c	/^} WIN_DialogData;$/;"	t	typeref:struct:__anon54	file:
WIN_FreeCursor	video/windows/SDL_windowsmouse.c	/^WIN_FreeCursor(SDL_Cursor * cursor)$/;"	f	file:
WIN_GL_ChoosePixelFormat	video/windows/SDL_windowsopengl.c	/^WIN_GL_ChoosePixelFormat(HDC hdc, PIXELFORMATDESCRIPTOR * target)$/;"	f	file:
WIN_GL_ChoosePixelFormatARB	video/windows/SDL_windowsopengl.c	/^WIN_GL_ChoosePixelFormatARB(_THIS, int *iAttribs, float *fAttribs)$/;"	f	file:
WIN_GL_CreateContext	video/windows/SDL_windowsopengl.c	/^WIN_GL_CreateContext(_THIS, SDL_Window * window)$/;"	f
WIN_GL_DeleteContext	video/windows/SDL_windowsopengl.c	/^WIN_GL_DeleteContext(_THIS, SDL_GLContext context)$/;"	f
WIN_GL_GetProcAddress	video/windows/SDL_windowsopengl.c	/^WIN_GL_GetProcAddress(_THIS, const char *proc)$/;"	f
WIN_GL_GetSwapInterval	video/windows/SDL_windowsopengl.c	/^WIN_GL_GetSwapInterval(_THIS)$/;"	f
WIN_GL_InitExtensions	video/windows/SDL_windowsopengl.c	/^WIN_GL_InitExtensions(_THIS, HDC hdc)$/;"	f	file:
WIN_GL_LoadLibrary	video/windows/SDL_windowsopengl.c	/^WIN_GL_LoadLibrary(_THIS, const char *path)$/;"	f
WIN_GL_MakeCurrent	video/windows/SDL_windowsopengl.c	/^WIN_GL_MakeCurrent(_THIS, SDL_Window * window, SDL_GLContext context)$/;"	f
WIN_GL_SetSwapInterval	video/windows/SDL_windowsopengl.c	/^WIN_GL_SetSwapInterval(_THIS, int interval)$/;"	f
WIN_GL_SetupPixelFormat	video/windows/SDL_windowsopengl.c	/^WIN_GL_SetupPixelFormat(_THIS, PIXELFORMATDESCRIPTOR * pfd)$/;"	f	file:
WIN_GL_SetupWindow	video/windows/SDL_windowsopengl.c	/^WIN_GL_SetupWindow(_THIS, SDL_Window * window)$/;"	f
WIN_GL_SetupWindowInternal	video/windows/SDL_windowsopengl.c	/^WIN_GL_SetupWindowInternal(_THIS, SDL_Window * window)$/;"	f	file:
WIN_GL_SwapWindow	video/windows/SDL_windowsopengl.c	/^WIN_GL_SwapWindow(_THIS, SDL_Window * window)$/;"	f
WIN_GL_UnloadLibrary	video/windows/SDL_windowsopengl.c	/^WIN_GL_UnloadLibrary(_THIS)$/;"	f
WIN_GetClipboardText	video/windows/SDL_windowsclipboard.c	/^WIN_GetClipboardText(_THIS)$/;"	f
WIN_GetDisplayBounds	video/windows/SDL_windowsmodes.c	/^WIN_GetDisplayBounds(_THIS, SDL_VideoDisplay * display, SDL_Rect * rect)$/;"	f
WIN_GetDisplayMode	video/windows/SDL_windowsmodes.c	/^WIN_GetDisplayMode(LPCTSTR deviceName, DWORD index, SDL_DisplayMode * mode)$/;"	f	file:
WIN_GetDisplayModes	video/windows/SDL_windowsmodes.c	/^WIN_GetDisplayModes(_THIS, SDL_VideoDisplay * display)$/;"	f
WIN_GetWindowGammaRamp	video/windows/SDL_windowswindow.c	/^WIN_GetWindowGammaRamp(_THIS, SDL_Window * window, Uint16 * ramp)$/;"	f
WIN_GetWindowWMInfo	video/windows/SDL_windowswindow.c	/^WIN_GetWindowWMInfo(_THIS, SDL_Window * window, SDL_SysWMinfo * info)$/;"	f
WIN_HasClipboardText	video/windows/SDL_windowsclipboard.c	/^WIN_HasClipboardText(_THIS)$/;"	f
WIN_HideWindow	video/windows/SDL_windowswindow.c	/^WIN_HideWindow(_THIS, SDL_Window * window)$/;"	f
WIN_InitKeyboard	video/windows/SDL_windowskeyboard.c	/^WIN_InitKeyboard(_THIS)$/;"	f
WIN_InitModes	video/windows/SDL_windowsmodes.c	/^WIN_InitModes(_THIS)$/;"	f
WIN_InitMouse	video/windows/SDL_windowsmouse.c	/^WIN_InitMouse(_THIS)$/;"	f
WIN_LoadXInputDLL	joystick/windows/SDL_dxjoystick.c	/^WIN_LoadXInputDLL(void)$/;"	f
WIN_MaximizeWindow	video/windows/SDL_windowswindow.c	/^WIN_MaximizeWindow(_THIS, SDL_Window * window)$/;"	f
WIN_MinimizeWindow	video/windows/SDL_windowswindow.c	/^WIN_MinimizeWindow(_THIS, SDL_Window * window)$/;"	f
WIN_OnWindowEnter	video/windows/SDL_windowswindow.c	/^void WIN_OnWindowEnter(_THIS, SDL_Window * window)$/;"	f
WIN_PumpEvents	video/windows/SDL_windowsevents.c	/^WIN_PumpEvents(_THIS)$/;"	f
WIN_QuitKeyboard	video/windows/SDL_windowskeyboard.c	/^WIN_QuitKeyboard(_THIS)$/;"	f
WIN_QuitModes	video/windows/SDL_windowsmodes.c	/^WIN_QuitModes(_THIS)$/;"	f
WIN_QuitMouse	video/windows/SDL_windowsmouse.c	/^WIN_QuitMouse(_THIS)$/;"	f
WIN_RaiseWindow	video/windows/SDL_windowswindow.c	/^WIN_RaiseWindow(_THIS, SDL_Window * window)$/;"	f
WIN_RestoreWindow	video/windows/SDL_windowswindow.c	/^WIN_RestoreWindow(_THIS, SDL_Window * window)$/;"	f
WIN_SetClipboardText	video/windows/SDL_windowsclipboard.c	/^WIN_SetClipboardText(_THIS, const char *text)$/;"	f
WIN_SetDisplayMode	video/windows/SDL_windowsmodes.c	/^WIN_SetDisplayMode(_THIS, SDL_VideoDisplay * display, SDL_DisplayMode * mode)$/;"	f
WIN_SetError	core/windows/SDL_windows.c	/^WIN_SetError(const char *prefix)$/;"	f
WIN_SetRelativeMouseMode	video/windows/SDL_windowsmouse.c	/^WIN_SetRelativeMouseMode(SDL_bool enabled)$/;"	f	file:
WIN_SetTextInputRect	video/windows/SDL_windowskeyboard.c	/^WIN_SetTextInputRect(_THIS, SDL_Rect *rect)$/;"	f
WIN_SetWindowBordered	video/windows/SDL_windowswindow.c	/^WIN_SetWindowBordered(_THIS, SDL_Window * window, SDL_bool bordered)$/;"	f
WIN_SetWindowFullscreen	video/windows/SDL_windowswindow.c	/^WIN_SetWindowFullscreen(_THIS, SDL_Window * window, SDL_VideoDisplay * display, SDL_bool fullscreen)$/;"	f
WIN_SetWindowGammaRamp	video/windows/SDL_windowswindow.c	/^WIN_SetWindowGammaRamp(_THIS, SDL_Window * window, const Uint16 * ramp)$/;"	f
WIN_SetWindowGrab	video/windows/SDL_windowswindow.c	/^WIN_SetWindowGrab(_THIS, SDL_Window * window, SDL_bool grabbed)$/;"	f
WIN_SetWindowIcon	video/windows/SDL_windowswindow.c	/^WIN_SetWindowIcon(_THIS, SDL_Window * window, SDL_Surface * icon)$/;"	f
WIN_SetWindowPosition	video/windows/SDL_windowswindow.c	/^WIN_SetWindowPosition(_THIS, SDL_Window * window)$/;"	f
WIN_SetWindowPositionInternal	video/windows/SDL_windowswindow.c	/^WIN_SetWindowPositionInternal(_THIS, SDL_Window * window, UINT flags)$/;"	f	file:
WIN_SetWindowSize	video/windows/SDL_windowswindow.c	/^WIN_SetWindowSize(_THIS, SDL_Window * window)$/;"	f
WIN_SetWindowTitle	video/windows/SDL_windowswindow.c	/^WIN_SetWindowTitle(_THIS, SDL_Window * window)$/;"	f
WIN_ShowCursor	video/windows/SDL_windowsmouse.c	/^WIN_ShowCursor(SDL_Cursor * cursor)$/;"	f	file:
WIN_ShowMessageBox	video/windows/SDL_windowsmessagebox.c	/^WIN_ShowMessageBox(const SDL_MessageBoxData *messageboxdata, int *buttonid)$/;"	f
WIN_ShowWindow	video/windows/SDL_windowswindow.c	/^WIN_ShowWindow(_THIS, SDL_Window * window)$/;"	f
WIN_StartTextInput	video/windows/SDL_windowskeyboard.c	/^WIN_StartTextInput(_THIS)$/;"	f
WIN_StopTextInput	video/windows/SDL_windowskeyboard.c	/^WIN_StopTextInput(_THIS)$/;"	f
WIN_StringToUTF8	core/windows/SDL_windows.h	39;"	d
WIN_StringToUTF8	core/windows/SDL_windows.h	42;"	d
WIN_UTF8ToString	core/windows/SDL_windows.h	40;"	d
WIN_UTF8ToString	core/windows/SDL_windows.h	43;"	d
WIN_UnloadXInputDLL	joystick/windows/SDL_dxjoystick.c	/^WIN_UnloadXInputDLL(void)$/;"	f
WIN_UpdateKeymap	video/windows/SDL_windowskeyboard.c	/^WIN_UpdateKeymap()$/;"	f
WIN_UpdateWindowFramebuffer	video/windows/SDL_windowsframebuffer.c	/^int WIN_UpdateWindowFramebuffer(_THIS, SDL_Window * window, const SDL_Rect * rects, int numrects)$/;"	f
WIN_VideoInit	video/windows/SDL_windowsvideo.c	/^WIN_VideoInit(_THIS)$/;"	f
WIN_VideoQuit	video/windows/SDL_windowsvideo.c	/^WIN_VideoQuit(_THIS)$/;"	f
WIN_WarpMouse	video/windows/SDL_windowsmouse.c	/^WIN_WarpMouse(SDL_Window * window, int x, int y)$/;"	f	file:
WIN_WindowProc	video/windows/SDL_windowsevents.c	/^WIN_WindowProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f
WMIsClient	video/directfb/SDL_DirectFB_WM.c	/^WMIsClient(DFB_WindowData * p, int x, int y)$/;"	f	file:
WMPos	video/directfb/SDL_DirectFB_WM.c	/^WMPos(DFB_WindowData * p, int x, int y)$/;"	f	file:
WM_DELETE_WINDOW	video/x11/SDL_x11video.h	/^    Atom WM_DELETE_WINDOW;$/;"	m	struct:SDL_VideoData
WM_INPUT	video/windows/SDL_windowsevents.c	65;"	d	file:
WM_POS_BOTTOM	video/directfb/SDL_DirectFB_WM.c	/^    WM_POS_BOTTOM = 0x40,$/;"	e	enum:__anon45	file:
WM_POS_CAPTION	video/directfb/SDL_DirectFB_WM.c	/^    WM_POS_CAPTION = 0x01,$/;"	e	enum:__anon45	file:
WM_POS_CLOSE	video/directfb/SDL_DirectFB_WM.c	/^    WM_POS_CLOSE = 0x02,$/;"	e	enum:__anon45	file:
WM_POS_LEFT	video/directfb/SDL_DirectFB_WM.c	/^    WM_POS_LEFT = 0x08,$/;"	e	enum:__anon45	file:
WM_POS_MAX	video/directfb/SDL_DirectFB_WM.c	/^    WM_POS_MAX = 0x04,$/;"	e	enum:__anon45	file:
WM_POS_NONE	video/directfb/SDL_DirectFB_WM.c	/^    WM_POS_NONE = 0x00,$/;"	e	enum:__anon45	file:
WM_POS_RIGHT	video/directfb/SDL_DirectFB_WM.c	/^    WM_POS_RIGHT = 0x10,$/;"	e	enum:__anon45	file:
WM_POS_TOP	video/directfb/SDL_DirectFB_WM.c	/^    WM_POS_TOP = 0x20,$/;"	e	enum:__anon45	file:
WM_PROTOCOLS	video/x11/SDL_x11video.h	/^    Atom WM_PROTOCOLS;$/;"	m	struct:SDL_VideoData
WM_TOUCH	video/windows/SDL_windowsevents.c	68;"	d	file:
WM_XBUTTONDOWN	video/windows/SDL_windowsevents.c	56;"	d	file:
WM_XBUTTONUP	video/windows/SDL_windowsevents.c	59;"	d	file:
WMcursor	video/psp/SDL_pspmouse.c	/^struct WMcursor {$/;"	s	file:
WORD_BYTES	stdlib/SDL_qsort.c	92;"	d	file:
WRAP_BMODE	video/bwindow/SDL_bmodes.cc	41;"	d	file:
WS_OVERLAPPEDWINDOW	SDL_assert.c	35;"	d	file:
WULINE	render/software/SDL_draw.h	434;"	d
WaitDevice	audio/SDL_sysaudio.h	/^    void (*WaitDevice) (_THIS);$/;"	m	struct:SDL_AudioDriverImpl
WaitDone	audio/SDL_sysaudio.h	/^    void (*WaitDone) (_THIS);$/;"	m	struct:SDL_AudioDriverImpl
WarpMouse	events/SDL_mouse_c.h	/^    void (*WarpMouse) (SDL_Window * window, int x, int y);$/;"	m	struct:__anon65
WaveFMT	audio/SDL_wave.h	/^typedef struct WaveFMT$/;"	s
WaveFMT	audio/SDL_wave.h	/^} WaveFMT;$/;"	t	typeref:struct:WaveFMT
Win32_CreateShaper	video/windows/SDL_windowsshape.c	/^Win32_CreateShaper(SDL_Window * window) {$/;"	f
Win32_ResizeWindowShape	video/windows/SDL_windowsshape.c	/^Win32_ResizeWindowShape(SDL_Window *window) {$/;"	f
Win32_SetWindowShape	video/windows/SDL_windowsshape.c	/^Win32_SetWindowShape(SDL_WindowShaper *shaper,SDL_Surface *shape,SDL_WindowShapeMode *shape_mode) {$/;"	f
WinCommands	video/bwindow/SDL_BWin.h	/^enum WinCommands {$/;"	g
WinMain	main/windows/SDL_windows_main.c	/^WinMain(HINSTANCE hInst, HINSTANCE hPrev, LPSTR szCmdLine, int sw)$/;"	f
WindowActivated	video/bwindow/SDL_BWin.h	/^    virtual void WindowActivated(bool active) {$/;"	f	class:SDL_BWin
WindowEvent	render/SDL_sysrender.h	/^    void (*WindowEvent) (SDL_Renderer * renderer, const SDL_WindowEvent *event);$/;"	m	struct:SDL_Renderer
WindowsScanCodeToSDLScanCode	video/windows/SDL_windowsevents.c	/^WindowsScanCodeToSDLScanCode( LPARAM lParam, WPARAM wParam )$/;"	f	file:
X11_Available	video/x11/SDL_x11video.c	/^X11_Available(void)$/;"	f	file:
X11_BeginWindowFullscreenLegacy	video/x11/SDL_x11window.c	/^X11_BeginWindowFullscreenLegacy(_THIS, SDL_Window * window, SDL_VideoDisplay * _display)$/;"	f	file:
X11_CheckWindowManager	video/x11/SDL_x11video.c	/^X11_CheckWindowManager(_THIS)$/;"	f	file:
X11_CheckWindowManagerErrorHandler	video/x11/SDL_x11video.c	/^X11_CheckWindowManagerErrorHandler(Display * d, XErrorEvent * e)$/;"	f	file:
X11_CreateCursor	video/x11/SDL_x11mouse.c	/^X11_CreateCursor(SDL_Surface * surface, int hot_x, int hot_y)$/;"	f	file:
X11_CreateDefaultCursor	video/x11/SDL_x11mouse.c	/^X11_CreateDefaultCursor()$/;"	f	file:
X11_CreateDevice	video/x11/SDL_x11video.c	/^X11_CreateDevice(int devindex)$/;"	f	file:
X11_CreateEmptyCursor	video/x11/SDL_x11mouse.c	/^X11_CreateEmptyCursor()$/;"	f	file:
X11_CreatePixmapCursor	video/x11/SDL_x11mouse.c	/^X11_CreatePixmapCursor(SDL_Surface * surface, int hot_x, int hot_y)$/;"	f	file:
X11_CreateShapedWindow	video/x11/SDL_x11shape.c	/^X11_CreateShapedWindow(const char *title,unsigned int x,unsigned int y,unsigned int w,unsigned int h,Uint32 flags) {$/;"	f
X11_CreateShaper	video/x11/SDL_x11shape.c	/^X11_CreateShaper(SDL_Window* window) {$/;"	f
X11_CreateSystemCursor	video/x11/SDL_x11mouse.c	/^X11_CreateSystemCursor(SDL_SystemCursor id)$/;"	f	file:
X11_CreateWindow	video/x11/SDL_x11window.c	/^X11_CreateWindow(_THIS, SDL_Window * window)$/;"	f
X11_CreateWindowFramebuffer	video/x11/SDL_x11framebuffer.c	/^X11_CreateWindowFramebuffer(_THIS, SDL_Window * window, Uint32 * format,$/;"	f
X11_CreateWindowFrom	video/x11/SDL_x11window.c	/^X11_CreateWindowFrom(_THIS, SDL_Window * window, const void *data)$/;"	f
X11_CreateXCursorCursor	video/x11/SDL_x11mouse.c	/^X11_CreateXCursorCursor(SDL_Surface * surface, int hot_x, int hot_y)$/;"	f	file:
X11_DeleteDevice	video/x11/SDL_x11video.c	/^X11_DeleteDevice(SDL_VideoDevice * device)$/;"	f	file:
X11_DestroyEmptyCursor	video/x11/SDL_x11mouse.c	/^X11_DestroyEmptyCursor(void)$/;"	f	file:
X11_DestroyWindow	video/x11/SDL_x11window.c	/^X11_DestroyWindow(_THIS, SDL_Window * window)$/;"	f
X11_DestroyWindowFramebuffer	video/x11/SDL_x11framebuffer.c	/^X11_DestroyWindowFramebuffer(_THIS, SDL_Window * window)$/;"	f
X11_DispatchEvent	video/x11/SDL_x11events.c	/^X11_DispatchEvent(_THIS)$/;"	f	file:
X11_DispatchFocusIn	video/x11/SDL_x11events.c	/^X11_DispatchFocusIn(SDL_WindowData *data)$/;"	f	file:
X11_DispatchFocusOut	video/x11/SDL_x11events.c	/^X11_DispatchFocusOut(SDL_WindowData *data)$/;"	f	file:
X11_DispatchMapNotify	video/x11/SDL_x11events.c	/^X11_DispatchMapNotify(SDL_WindowData *data)$/;"	f	file:
X11_DispatchUnmapNotify	video/x11/SDL_x11events.c	/^X11_DispatchUnmapNotify(SDL_WindowData *data)$/;"	f	file:
X11_EndWindowFullscreenLegacy	video/x11/SDL_x11window.c	/^X11_EndWindowFullscreenLegacy(_THIS, SDL_Window * window, SDL_VideoDisplay * _display)$/;"	f	file:
X11_FreeCursor	video/x11/SDL_x11mouse.c	/^X11_FreeCursor(SDL_Cursor * cursor)$/;"	f	file:
X11_GLES_CreateContext	video/x11/SDL_x11opengles.c	/^X11_GLES_CreateContext(_THIS, SDL_Window * window)$/;"	f
X11_GLES_DeleteContext	video/x11/SDL_x11opengles.c	/^X11_GLES_DeleteContext(_THIS, SDL_GLContext context)$/;"	f
X11_GLES_GetProcAddress	video/x11/SDL_x11opengles.c	/^X11_GLES_GetProcAddress(_THIS, const char *proc)$/;"	f
X11_GLES_GetSwapInterval	video/x11/SDL_x11opengles.c	/^X11_GLES_GetSwapInterval(_THIS)$/;"	f
X11_GLES_GetVisual	video/x11/SDL_x11opengles.c	/^X11_GLES_GetVisual(_THIS, Display * display, int screen)$/;"	f
X11_GLES_LoadLibrary	video/x11/SDL_x11opengles.c	/^X11_GLES_LoadLibrary(_THIS, const char *path)$/;"	f
X11_GLES_MakeCurrent	video/x11/SDL_x11opengles.c	/^X11_GLES_MakeCurrent(_THIS, SDL_Window * window, SDL_GLContext context)$/;"	f
X11_GLES_SetSwapInterval	video/x11/SDL_x11opengles.c	/^X11_GLES_SetSwapInterval(_THIS, int interval)$/;"	f
X11_GLES_SwapWindow	video/x11/SDL_x11opengles.c	/^X11_GLES_SwapWindow(_THIS, SDL_Window * window)$/;"	f
X11_GLES_UnloadLibrary	video/x11/SDL_x11opengles.c	/^X11_GLES_UnloadLibrary(_THIS)$/;"	f
X11_GL_CreateContext	video/x11/SDL_x11opengl.c	/^X11_GL_CreateContext(_THIS, SDL_Window * window)$/;"	f
X11_GL_CreateContextErrorHandler	video/x11/SDL_x11opengl.c	/^X11_GL_CreateContextErrorHandler(Display * d, XErrorEvent * e)$/;"	f	file:
X11_GL_DeleteContext	video/x11/SDL_x11opengl.c	/^X11_GL_DeleteContext(_THIS, SDL_GLContext context)$/;"	f
X11_GL_GetAttributes	video/x11/SDL_x11opengl.c	/^X11_GL_GetAttributes(_THIS, Display * display, int screen, int * attribs, int size, Bool for_FBConfig)$/;"	f
X11_GL_GetProcAddress	video/x11/SDL_x11opengl.c	/^X11_GL_GetProcAddress(_THIS, const char *proc)$/;"	f
X11_GL_GetSwapInterval	video/x11/SDL_x11opengl.c	/^X11_GL_GetSwapInterval(_THIS)$/;"	f
X11_GL_GetVisual	video/x11/SDL_x11opengl.c	/^X11_GL_GetVisual(_THIS, Display * display, int screen)$/;"	f
X11_GL_InitExtensions	video/x11/SDL_x11opengl.c	/^X11_GL_InitExtensions(_THIS)$/;"	f	file:
X11_GL_LoadLibrary	video/x11/SDL_x11opengl.c	/^X11_GL_LoadLibrary(_THIS, const char *path)$/;"	f
X11_GL_MakeCurrent	video/x11/SDL_x11opengl.c	/^X11_GL_MakeCurrent(_THIS, SDL_Window * window, SDL_GLContext context)$/;"	f
X11_GL_SetSwapInterval	video/x11/SDL_x11opengl.c	/^X11_GL_SetSwapInterval(_THIS, int interval)$/;"	f
X11_GL_SwapWindow	video/x11/SDL_x11opengl.c	/^X11_GL_SwapWindow(_THIS, SDL_Window * window)$/;"	f
X11_GL_UnloadLibrary	video/x11/SDL_x11opengl.c	/^X11_GL_UnloadLibrary(_THIS)$/;"	f
X11_GetClipboardText	video/x11/SDL_x11clipboard.c	/^X11_GetClipboardText(_THIS)$/;"	f
X11_GetDisplayBounds	video/x11/SDL_x11modes.c	/^X11_GetDisplayBounds(_THIS, SDL_VideoDisplay * sdl_display, SDL_Rect * rect)$/;"	f
X11_GetDisplayModes	video/x11/SDL_x11modes.c	/^X11_GetDisplayModes(_THIS, SDL_VideoDisplay * sdl_display)$/;"	f
X11_GetNetWMState	video/x11/SDL_x11window.c	/^X11_GetNetWMState(_THIS, Window xwindow)$/;"	f
X11_GetPixelFormatFromVisualInfo	video/x11/SDL_x11modes.c	/^X11_GetPixelFormatFromVisualInfo(Display * display, XVisualInfo * vinfo)$/;"	f
X11_GetSym	video/x11/SDL_x11dyn.c	/^X11_GetSym(const char *fnname, int *pHasModule)$/;"	f	file:
X11_GetVisualInfoFromVisual	video/x11/SDL_x11modes.c	/^X11_GetVisualInfoFromVisual(Display * display, Visual * visual, XVisualInfo * vinfo)$/;"	f
X11_GetWindowTitle	video/x11/SDL_x11window.c	/^X11_GetWindowTitle(_THIS, Window xwindow)$/;"	f
X11_GetWindowWMInfo	video/x11/SDL_x11window.c	/^X11_GetWindowWMInfo(_THIS, SDL_Window * window, SDL_SysWMinfo * info)$/;"	f
X11_HandleFocusChanges	video/x11/SDL_x11events.c	/^X11_HandleFocusChanges(_THIS)$/;"	f	file:
X11_HandleGenericEvent	video/x11/SDL_x11events.c	/^static void X11_HandleGenericEvent(SDL_VideoData *videodata,XEvent event)$/;"	f	file:
X11_HandleXinput2Event	video/x11/SDL_x11xinput2.c	/^X11_HandleXinput2Event(SDL_VideoData *videodata,XGenericEventCookie *cookie)$/;"	f
X11_HasClipboardText	video/x11/SDL_x11clipboard.c	/^X11_HasClipboardText(_THIS)$/;"	f
X11_HideWindow	video/x11/SDL_x11window.c	/^X11_HideWindow(_THIS, SDL_Window * window)$/;"	f
X11_InitDBus	video/x11/SDL_x11video.c	/^X11_InitDBus(_THIS)$/;"	f	file:
X11_InitKeyboard	video/x11/SDL_x11keyboard.c	/^X11_InitKeyboard(_THIS)$/;"	f
X11_InitModes	video/x11/SDL_x11modes.c	/^X11_InitModes(_THIS)$/;"	f
X11_InitMouse	video/x11/SDL_x11mouse.c	/^X11_InitMouse(_THIS)$/;"	f
X11_InitTouch	video/x11/SDL_x11touch.c	/^X11_InitTouch(_THIS)$/;"	f
X11_InitXinput2	video/x11/SDL_x11xinput2.c	/^X11_InitXinput2(_THIS)$/;"	f
X11_InitXinput2Multitouch	video/x11/SDL_x11xinput2.c	/^X11_InitXinput2Multitouch(_THIS)$/;"	f
X11_IsWheelCheckIfEvent	video/x11/SDL_x11events.c	/^static Bool X11_IsWheelCheckIfEvent(Display *display, XEvent *chkev,$/;"	f	file:
X11_IsWheelEvent	video/x11/SDL_x11events.c	/^static SDL_bool X11_IsWheelEvent(Display * display,XEvent * event,int * ticks)$/;"	f	file:
X11_IsWindowLegacyFullscreen	video/x11/SDL_x11window.c	/^X11_IsWindowLegacyFullscreen(_THIS, SDL_Window * window)$/;"	f	file:
X11_IsWindowMapped	video/x11/SDL_x11window.c	/^X11_IsWindowMapped(_THIS, SDL_Window * window)$/;"	f	file:
X11_KeyCodeToSDLScancode	video/x11/SDL_x11keyboard.c	/^X11_KeyCodeToSDLScancode(Display *display, KeyCode keycode)$/;"	f	file:
X11_KeyCodeToUcs4	video/x11/SDL_x11keyboard.c	/^X11_KeyCodeToUcs4(Display *display, KeyCode keycode)$/;"	f	file:
X11_KeyRepeat	video/x11/SDL_x11events.c	/^static SDL_bool X11_KeyRepeat(Display *display, XEvent *event)$/;"	f	file:
X11_KeyRepeatCheckIfEvent	video/x11/SDL_x11events.c	/^static Bool X11_KeyRepeatCheckIfEvent(Display *display, XEvent *chkev,$/;"	f	file:
X11_KeySymToUcs4	video/x11/imKStoUCS.c	/^X11_KeySymToUcs4(KeySym keysym)$/;"	f
X11_MaximizeWindow	video/x11/SDL_x11window.c	/^X11_MaximizeWindow(_THIS, SDL_Window * window)$/;"	f
X11_MessageBoxCreateWindow	video/x11/SDL_x11messagebox.c	/^X11_MessageBoxCreateWindow( SDL_MessageBoxDataX11 *data )$/;"	f	file:
X11_MessageBoxDraw	video/x11/SDL_x11messagebox.c	/^X11_MessageBoxDraw( SDL_MessageBoxDataX11 *data, GC ctx )$/;"	f	file:
X11_MessageBoxInit	video/x11/SDL_x11messagebox.c	/^X11_MessageBoxInit( SDL_MessageBoxDataX11 *data, const SDL_MessageBoxData * messageboxdata, int * pbuttonid )$/;"	f	file:
X11_MessageBoxInitPositions	video/x11/SDL_x11messagebox.c	/^X11_MessageBoxInitPositions( SDL_MessageBoxDataX11 *data )$/;"	f	file:
X11_MessageBoxLoop	video/x11/SDL_x11messagebox.c	/^X11_MessageBoxLoop( SDL_MessageBoxDataX11 *data )$/;"	f	file:
X11_MessageBoxShutdown	video/x11/SDL_x11messagebox.c	/^X11_MessageBoxShutdown( SDL_MessageBoxDataX11 *data )$/;"	f	file:
X11_MinimizeWindow	video/x11/SDL_x11window.c	/^X11_MinimizeWindow(_THIS, SDL_Window * window)$/;"	f
X11_Pending	video/x11/SDL_x11events.c	/^X11_Pending(Display * display)$/;"	f	file:
X11_PickTarget	video/x11/SDL_x11events.c	/^static Atom X11_PickTarget(Display *disp, Atom list[], int list_count)$/;"	f	file:
X11_PickTargetFromAtoms	video/x11/SDL_x11events.c	/^static Atom X11_PickTargetFromAtoms(Display *disp, Atom a0, Atom a1, Atom a2)$/;"	f	file:
X11_PumpEvents	video/x11/SDL_x11events.c	/^X11_PumpEvents(_THIS)$/;"	f
X11_QuitDBus	video/x11/SDL_x11video.c	/^X11_QuitDBus(_THIS)$/;"	f	file:
X11_QuitKeyboard	video/x11/SDL_x11keyboard.c	/^X11_QuitKeyboard(_THIS)$/;"	f
X11_QuitModes	video/x11/SDL_x11modes.c	/^X11_QuitModes(_THIS)$/;"	f
X11_QuitMouse	video/x11/SDL_x11mouse.c	/^X11_QuitMouse(_THIS)$/;"	f
X11_QuitTouch	video/x11/SDL_x11touch.c	/^X11_QuitTouch(_THIS)$/;"	f
X11_RaiseWindow	video/x11/SDL_x11window.c	/^X11_RaiseWindow(_THIS, SDL_Window * window)$/;"	f
X11_ReadProperty	video/x11/SDL_x11events.c	/^static void X11_ReadProperty(SDL_x11Prop *p, Display *disp, Window w, Atom prop)$/;"	f	file:
X11_ResizeWindowShape	video/x11/SDL_x11shape.c	/^X11_ResizeWindowShape(SDL_Window* window) {$/;"	f
X11_RestoreWindow	video/x11/SDL_x11window.c	/^X11_RestoreWindow(_THIS, SDL_Window * window)$/;"	f
X11_SafetyNetErrHandler	video/x11/SDL_x11video.c	/^X11_SafetyNetErrHandler(Display * d, XErrorEvent * e)$/;"	f	file:
X11_SetClipboardText	video/x11/SDL_x11clipboard.c	/^X11_SetClipboardText(_THIS, const char *text)$/;"	f
X11_SetDisplayMode	video/x11/SDL_x11modes.c	/^X11_SetDisplayMode(_THIS, SDL_VideoDisplay * sdl_display, SDL_DisplayMode * mode)$/;"	f
X11_SetNetWMState	video/x11/SDL_x11window.c	/^X11_SetNetWMState(_THIS, Window xwindow, Uint32 flags)$/;"	f
X11_SetRelativeMouseMode	video/x11/SDL_x11mouse.c	/^X11_SetRelativeMouseMode(SDL_bool enabled)$/;"	f	file:
X11_SetWindowBordered	video/x11/SDL_x11window.c	/^X11_SetWindowBordered(_THIS, SDL_Window * window, SDL_bool bordered)$/;"	f
X11_SetWindowFullscreen	video/x11/SDL_x11window.c	/^X11_SetWindowFullscreen(_THIS, SDL_Window * window, SDL_VideoDisplay * _display, SDL_bool fullscreen)$/;"	f
X11_SetWindowFullscreenViaWM	video/x11/SDL_x11window.c	/^X11_SetWindowFullscreenViaWM(_THIS, SDL_Window * window, SDL_VideoDisplay * _display, SDL_bool fullscreen)$/;"	f	file:
X11_SetWindowGammaRamp	video/x11/SDL_x11window.c	/^X11_SetWindowGammaRamp(_THIS, SDL_Window * window, const Uint16 * ramp)$/;"	f
X11_SetWindowGrab	video/x11/SDL_x11window.c	/^X11_SetWindowGrab(_THIS, SDL_Window * window, SDL_bool grabbed)$/;"	f
X11_SetWindowIcon	video/x11/SDL_x11window.c	/^X11_SetWindowIcon(_THIS, SDL_Window * window, SDL_Surface * icon)$/;"	f
X11_SetWindowMaximumSize	video/x11/SDL_x11window.c	/^X11_SetWindowMaximumSize(_THIS, SDL_Window * window)$/;"	f
X11_SetWindowMinimumSize	video/x11/SDL_x11window.c	/^X11_SetWindowMinimumSize(_THIS, SDL_Window * window)$/;"	f
X11_SetWindowPosition	video/x11/SDL_x11window.c	/^X11_SetWindowPosition(_THIS, SDL_Window * window)$/;"	f
X11_SetWindowShape	video/x11/SDL_x11shape.c	/^X11_SetWindowShape(SDL_WindowShaper *shaper,SDL_Surface *shape,SDL_WindowShapeMode *shape_mode) {$/;"	f
X11_SetWindowSize	video/x11/SDL_x11window.c	/^X11_SetWindowSize(_THIS, SDL_Window * window)$/;"	f
X11_SetWindowTitle	video/x11/SDL_x11window.c	/^X11_SetWindowTitle(_THIS, SDL_Window * window)$/;"	f
X11_ShowCursor	video/x11/SDL_x11mouse.c	/^X11_ShowCursor(SDL_Cursor * cursor)$/;"	f	file:
X11_ShowMessageBox	video/x11/SDL_x11messagebox.c	/^X11_ShowMessageBox(const SDL_MessageBoxData *messageboxdata, int *buttonid)$/;"	f
X11_ShowMessageBoxImpl	video/x11/SDL_x11messagebox.c	/^X11_ShowMessageBoxImpl(const SDL_MessageBoxData *messageboxdata, int *buttonid)$/;"	f	file:
X11_ShowWindow	video/x11/SDL_x11window.c	/^X11_ShowWindow(_THIS, SDL_Window * window)$/;"	f
X11_SuspendScreenSaver	video/x11/SDL_x11events.c	/^X11_SuspendScreenSaver(_THIS)$/;"	f
X11_URIToLocal	video/x11/SDL_x11events.c	/^static char* X11_URIToLocal(char* uri) {$/;"	f	file:
X11_UpdateKeymap	video/x11/SDL_x11keyboard.c	/^X11_UpdateKeymap(_THIS)$/;"	f
X11_UpdateWindowFramebuffer	video/x11/SDL_x11framebuffer.c	/^X11_UpdateWindowFramebuffer(_THIS, SDL_Window * window, const SDL_Rect * rects,$/;"	f
X11_UseDirectColorVisuals	video/x11/SDL_x11video.c	/^X11_UseDirectColorVisuals(void)$/;"	f
X11_VideoInit	video/x11/SDL_x11video.c	/^X11_VideoInit(_THIS)$/;"	f
X11_VideoQuit	video/x11/SDL_x11video.c	/^X11_VideoQuit(_THIS)$/;"	f
X11_WarpMouse	video/x11/SDL_x11mouse.c	/^X11_WarpMouse(SDL_Window * window, int x, int y)$/;"	f	file:
X11_Xinput2IsInitialized	video/x11/SDL_x11xinput2.c	/^X11_Xinput2IsInitialized()$/;"	f
X11_Xinput2IsMultitouchSupported	video/x11/SDL_x11xinput2.c	/^X11_Xinput2IsMultitouchSupported()$/;"	f
X11_Xinput2SelectTouch	video/x11/SDL_x11xinput2.c	/^X11_Xinput2SelectTouch(_THIS, SDL_Window *window)$/;"	f
X11_bootstrap	video/x11/SDL_x11video.c	/^VideoBootStrap X11_bootstrap = {$/;"	v
XAUDIO2_CloseDevice	audio/xaudio2/SDL_xaudio2.c	/^XAUDIO2_CloseDevice(_THIS)$/;"	f	file:
XAUDIO2_Deinitialize	audio/xaudio2/SDL_xaudio2.c	/^XAUDIO2_Deinitialize(void)$/;"	f	file:
XAUDIO2_DetectDevices	audio/xaudio2/SDL_xaudio2.c	/^XAUDIO2_DetectDevices(int iscapture, SDL_AddAudioDevice addfn)$/;"	f	file:
XAUDIO2_GetDeviceBuf	audio/xaudio2/SDL_xaudio2.c	/^XAUDIO2_GetDeviceBuf(_THIS)$/;"	f	file:
XAUDIO2_Init	audio/xaudio2/SDL_xaudio2.c	/^XAUDIO2_Init(SDL_AudioDriverImpl * impl)$/;"	f	file:
XAUDIO2_OpenDevice	audio/xaudio2/SDL_xaudio2.c	/^XAUDIO2_OpenDevice(_THIS, const char *devname, int iscapture)$/;"	f	file:
XAUDIO2_PlayDevice	audio/xaudio2/SDL_xaudio2.c	/^XAUDIO2_PlayDevice(_THIS)$/;"	f	file:
XAUDIO2_WaitDevice	audio/xaudio2/SDL_xaudio2.c	/^XAUDIO2_WaitDevice(_THIS)$/;"	f	file:
XAUDIO2_WaitDone	audio/xaudio2/SDL_xaudio2.c	/^XAUDIO2_WaitDone(_THIS)$/;"	f	file:
XAUDIO2_bootstrap	audio/xaudio2/SDL_xaudio2.c	/^AudioBootStrap XAUDIO2_bootstrap = {$/;"	v
XF86VidModeGetModeInfo	video/x11/SDL_x11modes.c	/^Bool XF86VidModeGetModeInfo(Display * dpy, int scr,$/;"	f	file:
XGenericEventCookie	video/x11/SDL_x11xinput2.h	/^typedef struct XGenericEventCookie XGenericEventCookie;$/;"	t	typeref:struct:XGenericEventCookie
XINPUTGETCAPABILITIES	joystick/windows/SDL_dxjoystick_c.h	96;"	d
XINPUTGETSTATE	joystick/windows/SDL_dxjoystick_c.h	94;"	d
XINPUTSETSTATE	joystick/windows/SDL_dxjoystick_c.h	95;"	d
XINPUT_CAPS_FFB_SUPPORTED	joystick/windows/SDL_dxjoystick_c.h	101;"	d
XINPUT_GAMEPAD_EX	joystick/windows/SDL_dxjoystick_c.h	/^} XINPUT_GAMEPAD_EX;$/;"	t	typeref:struct:__anon72
XINPUT_STATE_EX	joystick/windows/SDL_dxjoystick_c.h	/^} XINPUT_STATE_EX;$/;"	t	typeref:struct:__anon73
XInputGetCapabilities_t	joystick/windows/SDL_dxjoystick_c.h	/^typedef DWORD (WINAPI *XInputGetCapabilities_t)$/;"	t
XInputGetState_t	joystick/windows/SDL_dxjoystick_c.h	/^typedef DWORD (WINAPI *XInputGetState_t)$/;"	t
XInputSetState_t	joystick/windows/SDL_dxjoystick_c.h	/^typedef DWORD (WINAPI *XInputSetState_t)$/;"	t
XInputState	joystick/windows/SDL_dxjoystick_c.h	/^    XINPUT_STATE_EX XInputState[2];$/;"	m	struct:joystick_hwdata
XInputUserId	joystick/windows/SDL_dxjoystick.c	/^    Uint8 XInputUserId;$/;"	m	struct:JoyStick_DeviceData_	file:
XRANDR_ROTATION_LEFT	video/x11/SDL_x11modes.c	243;"	d	file:
XRANDR_ROTATION_RIGHT	video/x11/SDL_x11modes.c	244;"	d	file:
X_handler	video/x11/SDL_x11framebuffer.c	/^static int (*X_handler)(Display *, XErrorEvent *) = NULL;$/;"	v	file:
XdndActionCopy	video/x11/SDL_x11video.h	/^    Atom XdndActionCopy;$/;"	m	struct:SDL_VideoData
XdndDrop	video/x11/SDL_x11video.h	/^    Atom XdndDrop;$/;"	m	struct:SDL_VideoData
XdndEnter	video/x11/SDL_x11video.h	/^    Atom XdndEnter;$/;"	m	struct:SDL_VideoData
XdndFinished	video/x11/SDL_x11video.h	/^    Atom XdndFinished;$/;"	m	struct:SDL_VideoData
XdndPosition	video/x11/SDL_x11video.h	/^    Atom XdndPosition;$/;"	m	struct:SDL_VideoData
XdndSelection	video/x11/SDL_x11video.h	/^    Atom XdndSelection;$/;"	m	struct:SDL_VideoData
XdndStatus	video/x11/SDL_x11video.h	/^    Atom XdndStatus;$/;"	m	struct:SDL_VideoData
XdndTypeList	video/x11/SDL_x11video.h	/^    Atom XdndTypeList;$/;"	m	struct:SDL_VideoData
Zoom	video/bwindow/SDL_BWin.h	/^    virtual void Zoom(BPoint origin,$/;"	f	class:SDL_BWin
_AddDisplay	video/bwindow/SDL_bmodes.cc	/^static void _AddDisplay(BScreen *screen) {$/;"	f	file:
_BDisplayModeToSdlDisplayMode	video/bwindow/SDL_bmodes.cc	/^static void _BDisplayModeToSdlDisplayMode(display_mode *bmode,$/;"	f	file:
_CRT_SECURE_NO_WARNINGS	test/SDL_test_log.c	29;"	d	file:
_CompareSurfaceCount	test/SDL_test_compare.c	/^static int _CompareSurfaceCount = 0;$/;"	v	file:
_ControllerMapping_t	joystick/SDL_gamecontroller.c	/^typedef struct _ControllerMapping_t$/;"	s	file:
_DFB_CursorData	video/directfb/SDL_DirectFB_mouse.h	/^struct _DFB_CursorData$/;"	s
_DFB_DeviceData	video/directfb/SDL_DirectFB_video.h	/^struct _DFB_DeviceData$/;"	s
_DFB_DisplayData	video/directfb/SDL_DirectFB_modes.h	/^struct _DFB_DisplayData$/;"	s
_DFB_KeyboardData	video/directfb/SDL_DirectFB_video.h	/^struct _DFB_KeyboardData$/;"	s
_DFB_Theme	video/directfb/SDL_DirectFB_WM.h	/^struct _DFB_Theme$/;"	s
_DFB_WindowData	video/directfb/SDL_DirectFB_window.h	/^struct _DFB_WindowData$/;"	s
_DirectFB_GLContext	video/directfb/SDL_DirectFB_opengl.h	/^struct _DirectFB_GLContext$/;"	s
_DllMainCRTStartup	SDL.c	/^_DllMainCRTStartup(HANDLE hModule,$/;"	f
_ExtractBMode	video/bwindow/SDL_bmodes.cc	/^static inline display_mode * _ExtractBMode(SDL_DisplayMode *mode) {$/;"	f	file:
_GNU_SOURCE	thread/pthread/SDL_sysmutex.c	23;"	d	file:
_GetBeApp	video/bwindow/SDL_bframebuffer.cc	/^static inline SDL_BApp *_GetBeApp() {$/;"	f	file:
_GetBeApp	video/bwindow/SDL_bmodes.cc	/^static inline SDL_BApp *_GetBeApp() {$/;"	f	file:
_GetBeApp	video/bwindow/SDL_bopengl.cc	/^static inline SDL_BApp *_GetBeApp() {$/;"	f	file:
_GetBeApp	video/bwindow/SDL_bwindow.cc	/^static inline SDL_BApp *_GetBeApp() {$/;"	f	file:
_GetNumWindowSlots	main/beos/SDL_BApp.h	/^    int32 _GetNumWindowSlots() {$/;"	f	class:SDL_BApp
_GetWinID	main/beos/SDL_BApp.h	/^    bool _GetWinID(BMessage *msg, int32 *winID) {$/;"	f	class:SDL_BApp
_HandleBasicWindowEvent	main/beos/SDL_BApp.h	/^    void _HandleBasicWindowEvent(BMessage *msg, int32 sdlEventType) {$/;"	f	class:SDL_BApp
_HandleKey	main/beos/SDL_BApp.h	/^    void _HandleKey(BMessage *msg) {$/;"	f	class:SDL_BApp
_HandleKeyboardFocus	main/beos/SDL_BApp.h	/^    void _HandleKeyboardFocus(BMessage *msg) {$/;"	f	class:SDL_BApp
_HandleMouseButton	main/beos/SDL_BApp.h	/^    void _HandleMouseButton(BMessage *msg) {$/;"	f	class:SDL_BApp
_HandleMouseFocus	main/beos/SDL_BApp.h	/^    void _HandleMouseFocus(BMessage *msg) {$/;"	f	class:SDL_BApp
_HandleMouseMove	main/beos/SDL_BApp.h	/^    void _HandleMouseMove(BMessage *msg) {$/;"	f	class:SDL_BApp
_HandleMouseWheel	main/beos/SDL_BApp.h	/^    void _HandleMouseWheel(BMessage *msg) {$/;"	f	class:SDL_BApp
_HandleWindowMoved	main/beos/SDL_BApp.h	/^    void _HandleWindowMoved(BMessage *msg) {$/;"	f	class:SDL_BApp
_HandleWindowResized	main/beos/SDL_BApp.h	/^    void _HandleWindowResized(BMessage *msg) {$/;"	f	class:SDL_BApp
_ID	stdlib/SDL_qsort.c	/^static const char _ID[] = "<qsort.c gjm 1.12 1998-03-19>";$/;"	v	file:
_INCLUDED_WINDOWS_H	core/windows/SDL_windows.h	25;"	d
_InitWindow	video/bwindow/SDL_bwindow.cc	/^static int _InitWindow(_THIS, SDL_Window *window) {$/;"	f	file:
_KeyEvent	video/bwindow/SDL_BWin.h	/^    void _KeyEvent(int32 keyCode, int32 keyState) {$/;"	f	class:SDL_BWin
_LARGEFILE64_SOURCE	file/SDL_rwops.c	22;"	d	file:
_MATH_PRIVATE_H_	libm/math_private.h	18;"	d
_MMX_H	render/mmx.h	28;"	d
_MouseButtonEvent	video/bwindow/SDL_BWin.h	/^    void _MouseButtonEvent(int32 buttons) {$/;"	f	class:SDL_BWin
_MouseFocusEvent	video/bwindow/SDL_BWin.h	/^    void _MouseFocusEvent(bool focusGained) {$/;"	f	class:SDL_BWin
_MouseMotionEvent	video/bwindow/SDL_BWin.h	/^    void _MouseMotionEvent(BPoint &where, int32 transit) {$/;"	f	class:SDL_BWin
_MouseWheelEvent	video/bwindow/SDL_BWin.h	/^    void _MouseWheelEvent(int32 x, int32 y) {$/;"	f	class:SDL_BWin
_MoveTo	video/bwindow/SDL_BWin.h	/^    void _MoveTo(BMessage *msg) {$/;"	f	class:SDL_BWin
_NET_ACTIVE_WINDOW	video/x11/SDL_x11video.h	/^    Atom _NET_ACTIVE_WINDOW;$/;"	m	struct:SDL_VideoData
_NET_WM_ACTION_FULLSCREEN	video/x11/SDL_x11video.h	/^    Atom _NET_WM_ACTION_FULLSCREEN;$/;"	m	struct:SDL_VideoData
_NET_WM_ALLOWED_ACTIONS	video/x11/SDL_x11video.h	/^    Atom _NET_WM_ALLOWED_ACTIONS;$/;"	m	struct:SDL_VideoData
_NET_WM_ICON	video/x11/SDL_x11video.h	/^    Atom _NET_WM_ICON;$/;"	m	struct:SDL_VideoData
_NET_WM_ICON_NAME	video/x11/SDL_x11video.h	/^    Atom _NET_WM_ICON_NAME;$/;"	m	struct:SDL_VideoData
_NET_WM_NAME	video/x11/SDL_x11video.h	/^    Atom _NET_WM_NAME;$/;"	m	struct:SDL_VideoData
_NET_WM_PING	video/x11/SDL_x11video.h	/^    Atom _NET_WM_PING;$/;"	m	struct:SDL_VideoData
_NET_WM_STATE	video/x11/SDL_x11video.h	/^    Atom _NET_WM_STATE;$/;"	m	struct:SDL_VideoData
_NET_WM_STATE_ADD	video/x11/SDL_x11window.c	46;"	d	file:
_NET_WM_STATE_FOCUSED	video/x11/SDL_x11video.h	/^    Atom _NET_WM_STATE_FOCUSED;$/;"	m	struct:SDL_VideoData
_NET_WM_STATE_FULLSCREEN	video/x11/SDL_x11video.h	/^    Atom _NET_WM_STATE_FULLSCREEN;$/;"	m	struct:SDL_VideoData
_NET_WM_STATE_HIDDEN	video/x11/SDL_x11video.h	/^    Atom _NET_WM_STATE_HIDDEN;$/;"	m	struct:SDL_VideoData
_NET_WM_STATE_MAXIMIZED_HORZ	video/x11/SDL_x11video.h	/^    Atom _NET_WM_STATE_MAXIMIZED_HORZ;$/;"	m	struct:SDL_VideoData
_NET_WM_STATE_MAXIMIZED_VERT	video/x11/SDL_x11video.h	/^    Atom _NET_WM_STATE_MAXIMIZED_VERT;$/;"	m	struct:SDL_VideoData
_NET_WM_STATE_REMOVE	video/x11/SDL_x11window.c	45;"	d	file:
_NET_WM_STATE_TOGGLE	video/x11/SDL_x11window.c	47;"	d	file:
_PATH_DEV_AUDIO	audio/SDL_audiodev.c	46;"	d	file:
_PATH_DEV_DSP	audio/SDL_audiodev.c	37;"	d	file:
_PATH_DEV_DSP	audio/SDL_audiodev.c	39;"	d	file:
_PATH_DEV_DSP	audio/paudio/SDL_paudio.c	57;"	d	file:
_PATH_DEV_DSP24	audio/SDL_audiodev.c	43;"	d	file:
_PopBackWindow	main/beos/SDL_BApp.h	/^    void _PopBackWindow() {$/;"	f	class:SDL_BApp
_PostWindowEvent	video/bwindow/SDL_BWin.h	/^    void _PostWindowEvent(BMessage &msg) {$/;"	f	class:SDL_BWin
_PushBackWindow	main/beos/SDL_BApp.h	/^    void _PushBackWindow(SDL_Window *win) {$/;"	f	class:SDL_BApp
_QSA_Device	audio/qsa/SDL_qsa_audio.c	/^typedef struct _QSA_Device$/;"	s	file:
_RepaintEvent	video/bwindow/SDL_BWin.h	/^    void _RepaintEvent() {$/;"	f	class:SDL_BWin
_ResizeTo	video/bwindow/SDL_BWin.h	/^    void _ResizeTo(BMessage *msg) {$/;"	f	class:SDL_BWin
_Restore	video/bwindow/SDL_BWin.h	/^    void _Restore() {$/;"	f	class:SDL_BWin
_SC_PAGE_SIZE	stdlib/SDL_malloc.c	1266;"	d	file:
_SDL_ALSA_audio_h	audio/alsa/SDL_alsa_audio.h	24;"	d
_SDL_BWin_h	video/bwindow/SDL_BWin.h	23;"	d
_SDL_ControllerMapping	joystick/SDL_gamecontroller.c	/^struct _SDL_ControllerMapping$/;"	s	file:
_SDL_DirectFB_Symbols	video/directfb/SDL_DirectFB_dyn.c	/^static struct _SDL_DirectFB_Symbols$/;"	s	file:
_SDL_DirectFB_dyn_h	video/directfb/SDL_DirectFB_dyn.h	23;"	d
_SDL_DirectFB_events_h	video/directfb/SDL_DirectFB_events.h	23;"	d
_SDL_DirectFB_mouse_h	video/directfb/SDL_DirectFB_mouse.h	23;"	d
_SDL_DirectFB_shape_h	video/directfb/SDL_DirectFB_shape.h	23;"	d
_SDL_DirectFB_video_h	video/directfb/SDL_DirectFB_video.h	25;"	d
_SDL_EventEntry	events/SDL_events.c	/^typedef struct _SDL_EventEntry$/;"	s	file:
_SDL_GLView	video/bwindow/SDL_BWin.h	/^    BGLView * _SDL_GLView;$/;"	m	class:SDL_BWin
_SDL_GameController	joystick/SDL_gamecontroller.c	/^struct _SDL_GameController$/;"	s	file:
_SDL_Haptic	haptic/SDL_syshaptic.h	/^struct _SDL_Haptic$/;"	s
_SDL_HatMapping	joystick/SDL_gamecontroller.c	/^struct _SDL_HatMapping$/;"	s	file:
_SDL_Joystick	joystick/SDL_sysjoystick.h	/^struct _SDL_Joystick$/;"	s
_SDL_SysWMEntry	events/SDL_events.c	/^typedef struct _SDL_SysWMEntry$/;"	s	file:
_SDL_Timer	timer/SDL_timer.c	/^typedef struct _SDL_Timer$/;"	s	file:
_SDL_TimerMap	timer/SDL_timer.c	/^typedef struct _SDL_TimerMap$/;"	s	file:
_SDL_androidaudio_h	audio/android/SDL_androidaudio.h	24;"	d
_SDL_androidclipboard_h	video/android/SDL_androidclipboard.h	24;"	d
_SDL_androidvideo_h	video/android/SDL_androidvideo.h	24;"	d
_SDL_androidwindow_h	video/android/SDL_androidwindow.h	24;"	d
_SDL_artscaudio_h	audio/arts/SDL_artsaudio.h	24;"	d
_SDL_beaudio_h	audio/baudio/SDL_beaudio.h	24;"	d
_SDL_blit_h	video/SDL_blit.h	24;"	d
_SDL_bsdaudio_h	audio/bsd/SDL_bsdaudio.h	24;"	d
_SDL_clipboardevents_c_h	events/SDL_clipboardevents_c.h	24;"	d
_SDL_cocoaclipboard_h	video/cocoa/SDL_cocoaclipboard.h	24;"	d
_SDL_cocoaevents_h	video/cocoa/SDL_cocoaevents.h	24;"	d
_SDL_cocoakeyboard_h	video/cocoa/SDL_cocoakeyboard.h	24;"	d
_SDL_cocoamodes_h	video/cocoa/SDL_cocoamodes.h	24;"	d
_SDL_cocoamouse_h	video/cocoa/SDL_cocoamouse.h	24;"	d
_SDL_cocoamousetap_h	video/cocoa/SDL_cocoamousetap.h	24;"	d
_SDL_cocoaopengl_h	video/cocoa/SDL_cocoaopengl.h	24;"	d
_SDL_cocoashape_h	video/cocoa/SDL_cocoashape.h	25;"	d
_SDL_cocoavideo_h	video/cocoa/SDL_cocoavideo.h	24;"	d
_SDL_cocoawindow_h	video/cocoa/SDL_cocoawindow.h	24;"	d
_SDL_coreaudio_h	audio/coreaudio/SDL_coreaudio.h	24;"	d
_SDL_directfb_modes_h	video/directfb/SDL_DirectFB_modes.h	23;"	d
_SDL_directfb_opengl_h	video/directfb/SDL_DirectFB_opengl.h	24;"	d
_SDL_directfb_window_h	video/directfb/SDL_DirectFB_window.h	23;"	d
_SDL_directfb_wm_h	video/directfb/SDL_DirectFB_WM.h	23;"	d
_SDL_directsound_h	audio/directsound/SDL_directsound.h	24;"	d
_SDL_diskaudio_h	audio/disk/SDL_diskaudio.h	24;"	d
_SDL_dropevents_c_h	events/SDL_dropevents_c.h	24;"	d
_SDL_dspaudio_h	audio/dsp/SDL_dspaudio.h	24;"	d
_SDL_dummyaudio_h	audio/dummy/SDL_dummyaudio.h	24;"	d
_SDL_error_c_h	SDL_error_c.h	28;"	d
_SDL_esdaudio_h	audio/esd/SDL_esdaudio.h	24;"	d
_SDL_fsaudio_h	audio/fusionsound/SDL_fsaudio.h	24;"	d
_SDL_gesture_c_h	events/SDL_gesture_c.h	24;"	d
_SDL_iconv_t	stdlib/SDL_iconv.c	/^struct _SDL_iconv_t$/;"	s	file:
_SDL_keyboard_c_h	events/SDL_keyboard_c.h	24;"	d
_SDL_mouse_c_h	events/SDL_mouse_c.h	24;"	d
_SDL_msctf_h	video/windows/SDL_msctf.h	2;"	d
_SDL_mutex_c_h	thread/pthread/SDL_sysmutex_c.h	24;"	d
_SDL_nasaudio_h	audio/nas/SDL_nasaudio.h	24;"	d
_SDL_nullvideo_h	video/dummy/SDL_nullvideo.h	24;"	d
_SDL_paudaudio_h	audio/paudio/SDL_paudio.h	24;"	d
_SDL_pspaudio_h	audio/psp/SDL_pspaudio.h	23;"	d
_SDL_pspgl_c_h	video/psp/SDL_pspgl_c.h	23;"	d
_SDL_pulseaudio_h	audio/pulseaudio/SDL_pulseaudio.h	24;"	d
_SDL_shape_internals_h	video/SDL_shape_internals.h	24;"	d
_SDL_sndioaudio_h	audio/sndio/SDL_sndioaudio.h	24;"	d
_SDL_sunaudio_h	audio/sun/SDL_sunaudio.h	24;"	d
_SDL_sysaudio_h	audio/SDL_sysaudio.h	24;"	d
_SDL_sysrender_h	render/SDL_sysrender.h	24;"	d
_SDL_systhread_c_h	thread/windows/SDL_systhread_c.h	24;"	d
_SDL_systhread_h	thread/SDL_systhread.h	26;"	d
_SDL_sysvideo_h	video/SDL_sysvideo.h	24;"	d
_SDL_thread_c_h	thread/SDL_thread_c.h	24;"	d
_SDL_touch_c_h	events/SDL_touch_c.h	25;"	d
_SDL_uikitevents_h	video/uikit/SDL_uikitevents.h	22;"	d
_SDL_uikitmodes_h	video/uikit/SDL_uikitmodes.h	24;"	d
_SDL_uikitopengles	video/uikit/SDL_uikitopengles.h	22;"	d
_SDL_uikitvideo_h	video/uikit/SDL_uikitvideo.h	22;"	d
_SDL_uikitwindow_h	video/uikit/SDL_uikitwindow.h	22;"	d
_SDL_windowevents_c_h	events/SDL_windowevents_c.h	24;"	d
_SDL_windowsclipboard_h	video/windows/SDL_windowsclipboard.h	24;"	d
_SDL_windowsevents_h	video/windows/SDL_windowsevents.h	24;"	d
_SDL_windowskeyboard_h	video/windows/SDL_windowskeyboard.h	24;"	d
_SDL_windowsmodes_h	video/windows/SDL_windowsmodes.h	24;"	d
_SDL_windowsmouse_h	video/windows/SDL_windowsmouse.h	24;"	d
_SDL_windowsopengl_h	video/windows/SDL_windowsopengl.h	24;"	d
_SDL_windowsshape_h	video/windows/SDL_windowsshape.h	25;"	d
_SDL_windowsvideo_h	video/windows/SDL_windowsvideo.h	24;"	d
_SDL_windowswindow_h	video/windows/SDL_windowswindow.h	24;"	d
_SDL_winmm_h	audio/winmm/SDL_winmm.h	24;"	d
_SDL_x11clipboard_h	video/x11/SDL_x11clipboard.h	24;"	d
_SDL_x11dyn_h	video/x11/SDL_x11dyn.h	24;"	d
_SDL_x11events_h	video/x11/SDL_x11events.h	24;"	d
_SDL_x11keyboard_h	video/x11/SDL_x11keyboard.h	24;"	d
_SDL_x11modes_h	video/x11/SDL_x11modes.h	24;"	d
_SDL_x11mouse_h	video/x11/SDL_x11mouse.h	24;"	d
_SDL_x11opengl_h	video/x11/SDL_x11opengl.h	24;"	d
_SDL_x11opengles_h	video/x11/SDL_x11opengles.h	24;"	d
_SDL_x11shape_h	video/x11/SDL_x11shape.h	24;"	d
_SDL_x11touch_h	video/x11/SDL_x11touch.h	24;"	d
_SDL_x11video_h	video/x11/SDL_x11video.h	24;"	d
_SDL_x11window_h	video/x11/SDL_x11window.h	24;"	d
_SDL_x11xinput2_h	video/x11/SDL_x11xinput2.h	24;"	d
_SendMouseButton	video/bwindow/SDL_BWin.h	/^    void _SendMouseButton(int32 button, int32 state) {$/;"	f	class:SDL_BWin
_SetBordered	video/bwindow/SDL_BWin.h	/^    void _SetBordered(BMessage *msg) {$/;"	f	class:SDL_BWin
_SetFullScreen	video/bwindow/SDL_BWin.h	/^    void _SetFullScreen(BMessage *msg) {$/;"	f	class:SDL_BWin
_SetSDLWindow	main/beos/SDL_BApp.h	/^    void _SetSDLWindow(SDL_Window *win, int32 winID) {$/;"	f	class:SDL_BApp
_SetTitle	video/bwindow/SDL_BWin.h	/^    void _SetTitle(BMessage *msg) {$/;"	f	class:SDL_BWin
_THIS	audio/SDL_audio.c	31;"	d	file:
_THIS	audio/SDL_sysaudio.h	126;"	d
_THIS	audio/SDL_sysaudio.h	31;"	d
_THIS	audio/alsa/SDL_alsa_audio.h	31;"	d
_THIS	audio/android/SDL_androidaudio.h	29;"	d
_THIS	audio/arts/SDL_artsaudio.h	31;"	d
_THIS	audio/baudio/SDL_beaudio.h	29;"	d
_THIS	audio/bsd/SDL_bsdaudio.h	28;"	d
_THIS	audio/coreaudio/SDL_coreaudio.h	42;"	d
_THIS	audio/directsound/SDL_directsound.h	31;"	d
_THIS	audio/disk/SDL_diskaudio.h	30;"	d
_THIS	audio/dsp/SDL_dspaudio.h	29;"	d
_THIS	audio/dummy/SDL_dummyaudio.h	29;"	d
_THIS	audio/esd/SDL_esdaudio.h	29;"	d
_THIS	audio/fusionsound/SDL_fsaudio.h	31;"	d
_THIS	audio/nas/SDL_nasaudio.h	36;"	d
_THIS	audio/paudio/SDL_paudio.h	29;"	d
_THIS	audio/psp/SDL_pspaudio.h	28;"	d
_THIS	audio/pulseaudio/SDL_pulseaudio.h	31;"	d
_THIS	audio/qsa/SDL_qsa_audio.h	32;"	d
_THIS	audio/sndio/SDL_sndioaudio.h	31;"	d
_THIS	audio/sun/SDL_sunaudio.h	29;"	d
_THIS	audio/winmm/SDL_winmm.h	29;"	d
_THIS	audio/xaudio2/SDL_xaudio2.c	49;"	d	file:
_THIS	video/SDL_sysvideo.h	133;"	d
_TOUCHINPUT	video/windows/SDL_windowsvideo.h	/^typedef struct _TOUCHINPUT {$/;"	s
_ToBeWin	video/bwindow/SDL_bframebuffer.cc	/^static inline SDL_BWin *_ToBeWin(SDL_Window *window) {$/;"	f	file:
_ToBeWin	video/bwindow/SDL_bmodes.cc	/^static inline SDL_BWin *_ToBeWin(SDL_Window *window) {$/;"	f	file:
_ToBeWin	video/bwindow/SDL_bopengl.cc	/^static inline SDL_BWin *_ToBeWin(SDL_Window *window) {$/;"	f	file:
_ToBeWin	video/bwindow/SDL_bwindow.cc	/^static inline SDL_BWin *_ToBeWin(SDL_Window *window) {$/;"	f	file:
_UIKIT_KeyInfo	video/uikit/keyinfotable.h	23;"	d
_WIN32_WINNT	core/windows/SDL_windows.h	32;"	d
_WIN32_WINNT	core/windows/SDL_windows.h	33;"	d
__FLTUSED__	stdlib/SDL_stdlib.c	197;"	d	file:
__FreeBSD_kernel_version	joystick/bsd/SDL_sysjoystick.c	39;"	d	file:
__IWbemLocator_INTERFACE_DEFINED__	joystick/windows/SDL_dxjoystick.c	54;"	d	file:
__SDL_NOGETPROCADDR__	render/opengles/SDL_render_gles.c	177;"	d	file:
__SDL_NOGETPROCADDR__	render/opengles2/SDL_render_gles2.c	178;"	d	file:
__SDL_PANDORA_H__	video/pandora/SDL_pandora.h	23;"	d
__SDL_PANDORA_H__	video/psp/SDL_pspvideo.h	23;"	d
__SDL_QSA_AUDIO_H__	audio/qsa/SDL_qsa_audio.h	25;"	d
__declspec	stdlib/SDL_stdlib.c	/^__declspec(naked)$/;"	f
__ieee754_atan2	libm/e_atan2.c	/^double attribute_hidden __ieee754_atan2(double y, double x)$/;"	f
__ieee754_atan2	libm/math_private.h	33;"	d
__ieee754_log	libm/e_log.c	/^__ieee754_log(double x)$/;"	f
__ieee754_log	libm/math_private.h	38;"	d
__ieee754_pow	libm/e_pow.c	/^     double attribute_hidden __ieee754_pow(double x, double y)$/;"	f
__ieee754_pow	libm/math_private.h	39;"	d
__ieee754_rem_pio2	libm/e_rem_pio2.c	/^__ieee754_rem_pio2(double x, double *y)$/;"	f
__ieee754_sqrt	libm/e_sqrt.c	/^__ieee754_sqrt(double x)$/;"	f
__ieee754_sqrt	libm/math_private.h	42;"	d
__kernel_cos	libm/k_cos.c	/^__kernel_cos(double x, double y)$/;"	f
__kernel_rem_pio2	libm/k_rem_pio2.c	/^__kernel_rem_pio2(double *x, double *y, int e0, int nx, int prec,$/;"	f
__kernel_sin	libm/k_sin.c	/^__kernel_sin(double x, double y, int iy)$/;"	f
__watcall	thread/windows/SDL_systhread.c	46;"	d	file:
_bitmap	video/bwindow/SDL_BWin.h	/^    BBitmap        *_bitmap;$/;"	m	class:SDL_BWin
_bits	video/bwindow/SDL_BWin.h	/^    uint8          *_bits;$/;"	m	class:SDL_BWin
_bounds	video/bwindow/SDL_BWin.h	/^    clipping_rect   _bounds;$/;"	m	class:SDL_BWin
_buffer_created	video/bwindow/SDL_BWin.h	/^                    _buffer_created,$/;"	m	class:SDL_BWin
_buffer_dirty	video/bwindow/SDL_BWin.h	/^                    _buffer_dirty,$/;"	m	class:SDL_BWin
_buffer_locker	video/bwindow/SDL_BWin.h	/^    BLocker        *_buffer_locker;$/;"	m	class:SDL_BWin
_bytes_per_px	video/bwindow/SDL_BWin.h	/^    int32           _bytes_per_px;$/;"	m	class:SDL_BWin
_cb_data	video/directfb/SDL_DirectFB_events.c	/^struct _cb_data$/;"	s	file:
_clips	video/bwindow/SDL_BWin.h	/^    clipping_rect  *_clips;$/;"	m	class:SDL_BWin
_colorkey	render/software/SDL_rotate.c	/^Uint32 _colorkey(SDL_Surface *src)$/;"	f
_connected	video/bwindow/SDL_BWin.h	/^    bool            _connected,$/;"	m	class:SDL_BWin
_connection_disabled	video/bwindow/SDL_BWin.h	/^                    _connection_disabled,$/;"	m	class:SDL_BWin
_current_context	main/beos/SDL_BApp.h	/^    BGLView      *_current_context;$/;"	m	class:SDL_BApp
_directx_h	audio/directsound/directx.h	3;"	d
_draw_thread_id	video/bwindow/SDL_BWin.h	/^    thread_id       _draw_thread_id;$/;"	m	class:SDL_BWin
_ftol2_sse	stdlib/SDL_stdlib.c	/^_ftol2_sse()$/;"	f
_gm_	stdlib/SDL_malloc.c	/^static struct malloc_state _gm_;$/;"	v	typeref:struct:malloc_state	file:
_id	video/bwindow/SDL_BWin.h	/^    int32 _id;  \/* Window id used by SDL_BApp *\/$/;"	m	class:SDL_BWin
_imKStoUCS_h	video/x11/imKStoUCS.h	2;"	d
_inhibit_resize	video/bwindow/SDL_BWin.h	/^    bool  _inhibit_resize;$/;"	m	class:SDL_BWin
_last_buttons	video/bwindow/SDL_BWin.h	/^    int32 _last_buttons;$/;"	m	class:SDL_BWin
_mouse_focused	video/bwindow/SDL_BWin.h	/^    bool  _mouse_focused;       \/* Does this window have mouse focus? *\/$/;"	m	class:SDL_BWin
_num_clips	video/bwindow/SDL_BWin.h	/^    int32           _num_clips;$/;"	m	class:SDL_BWin
_prev_frame	video/bwindow/SDL_BWin.h	/^    BRect *_prev_frame; \/* Previous position and size of the window *\/$/;"	m	class:SDL_BWin
_rotateSurface	render/software/SDL_rotate.c	/^SDL_Surface *_rotateSurface(SDL_Surface * src, double angle, int centerx, int centery, int smooth, int flipx, int flipy, int dstwidth, int dstheight, double cangle, double sangle)$/;"	f
_rotozoomSurfaceSizeTrig	render/software/SDL_rotate.c	/^void _rotozoomSurfaceSizeTrig(int width, int height, double angle,$/;"	f
_row_bytes	video/bwindow/SDL_BWin.h	/^    uint32          _row_bytes;$/;"	m	class:SDL_BWin
_saved_mode	main/beos/SDL_BApp.h	/^    display_mode *_saved_mode;$/;"	m	class:SDL_BApp
_shown	video/bwindow/SDL_BWin.h	/^    bool  _shown;$/;"	m	class:SDL_BWin
_this	video/SDL_video.c	/^static SDL_VideoDevice *_this = NULL;$/;"	v	file:
_transaxis	joystick/windows/SDL_mmjoystick.c	/^    struct _transaxis$/;"	s	struct:joystick_hwdata	file:
_transformSurfaceRGBA	render/software/SDL_rotate.c	/^void _transformSurfaceRGBA(SDL_Surface * src, SDL_Surface * dst, int cx, int cy, int isin, int icos, int flipx, int flipy, int smooth)$/;"	f
_trash_window_buffer	video/bwindow/SDL_BWin.h	/^                    _trash_window_buffer;$/;"	m	class:SDL_BWin
_window_map	main/beos/SDL_BApp.h	/^    vector<SDL_Window*> _window_map; \/* Keeps track of SDL_Windows by index-id*\/$/;"	m	class:SDL_BApp
a	joystick/psp/SDL_sysjoystick.c	/^static point a = { 0, 0 };$/;"	v	file:
a	render/SDL_sysrender.h	/^    Uint8 r, g, b, a;                   \/**< Color for drawing operations values *\/$/;"	m	struct:SDL_Renderer
a	render/SDL_sysrender.h	/^    Uint8 r, g, b, a;           \/**< Texture modulation values *\/$/;"	m	struct:SDL_Texture
a	render/software/SDL_rotate.c	/^    Uint8 a;$/;"	m	struct:tColorRGBA	file:
a	video/SDL_blit.h	/^    Uint8 r, g, b, a;$/;"	m	struct:__anon37
aCoeff	audio/SDL_wave.c	/^    Sint16 aCoeff[7][2];$/;"	m	struct:MS_ADPCM_decoder	file:
aT	libm/s_atan.c	/^static const double aT[] = {$/;"	v	file:
abs_correct	joystick/linux/SDL_sysjoystick_c.h	/^    } abs_correct[ABS_MAX];$/;"	m	struct:joystick_hwdata	typeref:struct:joystick_hwdata::axis_correct
abs_map	joystick/linux/SDL_sysjoystick_c.h	/^    Uint8 abs_map[ABS_MAX];$/;"	m	struct:joystick_hwdata
accelerated	video/SDL_sysvideo.h	/^        int accelerated;$/;"	m	struct:SDL_VideoDevice::__anon27
accelerometerName	joystick/android/SDL_sysjoystick.c	/^static const char *accelerometerName = "Android accelerometer";$/;"	v	file:
access	render/SDL_sysrender.h	/^    int access;                 \/**< SDL_TextureAccess *\/$/;"	m	struct:SDL_Texture
accum_alpha_size	video/SDL_sysvideo.h	/^        int accum_alpha_size;$/;"	m	struct:SDL_VideoDevice::__anon27
accum_blue_size	video/SDL_sysvideo.h	/^        int accum_blue_size;$/;"	m	struct:SDL_VideoDevice::__anon27
accum_green_size	video/SDL_sysvideo.h	/^        int accum_green_size;$/;"	m	struct:SDL_VideoDevice::__anon27
accum_red_size	video/SDL_sysvideo.h	/^        int accum_red_size;$/;"	m	struct:SDL_VideoDevice::__anon27
active	events/SDL_events.c	/^    volatile SDL_bool active;$/;"	m	struct:__anon60	file:
active	timer/SDL_timer.c	/^    volatile SDL_bool active;$/;"	m	struct:__anon114	file:
active_off	video/x11/edid.h	/^    int			active_off;$/;"	m	struct:MonitorInfo
adapter	render/direct3d/SDL_render_d3d.c	/^    UINT adapter;$/;"	m	struct:__anon94	file:
addDevFn	audio/coreaudio/SDL_coreaudio.c	/^typedef void (*addDevFn)(const char *name, AudioDeviceID devId, void *data);$/;"	t	file:
addToDevList	audio/coreaudio/SDL_coreaudio.c	/^addToDevList(const char *name, AudioDeviceID devId, void *data)$/;"	f	file:
add_segment	stdlib/SDL_malloc.c	/^add_segment(mstate m, char *tbase, size_t tsize, flag_t mmapped)$/;"	f	file:
align_as_chunk	stdlib/SDL_malloc.c	1715;"	d	file:
align_offset	stdlib/SDL_malloc.c	1332;"	d	file:
allocate_balldata	joystick/linux/SDL_sysjoystick.c	/^allocate_balldata(SDL_Joystick * joystick)$/;"	f	file:
allocate_hatdata	joystick/linux/SDL_sysjoystick.c	/^allocate_hatdata(SDL_Joystick * joystick)$/;"	f	file:
alpha	video/SDL_blit_N.c	/^    { NO_ALPHA = 1, SET_ALPHA = 2, COPY_ALPHA = 4 } alpha;$/;"	m	struct:blit_table	typeref:enum:blit_table::__anon35	file:
alpha_size	video/SDL_sysvideo.h	/^        int alpha_size;$/;"	m	struct:SDL_VideoDevice::__anon27
alsa_handle	audio/alsa/SDL_alsa_audio.c	/^static void *alsa_handle = NULL;$/;"	v	file:
alsa_library	audio/alsa/SDL_alsa_audio.c	/^static const char *alsa_library = SDL_AUDIO_DRIVER_ALSA_DYNAMIC;$/;"	v	file:
analog	video/x11/edid.h	/^	} analog;$/;"	m	union:DetailedTiming::__anon12	typeref:struct:DetailedTiming::__anon12::__anon13
analog	video/x11/edid.h	/^	} analog;$/;"	m	union:MonitorInfo::__anon15	typeref:struct:MonitorInfo::__anon15::__anon17
analog_map	joystick/psp/SDL_sysjoystick.c	/^static int analog_map[256];  \/* Map analog inputs to -32768 -> 32767 *\/$/;"	v	file:
app_registered	video/windows/SDL_windowsevents.c	/^static int app_registered = 0;$/;"	v	file:
arena	stdlib/SDL_malloc.c	/^    MALLINFO_FIELD_TYPE arena;  \/* non-mmapped space allocated from system *\/$/;"	m	struct:mallinfo	file:
argc	SDL_error_c.h	/^    int argc;$/;"	m	struct:SDL_error
args	SDL_error_c.h	/^    } args[ERR_MAX_ARGS];$/;"	m	struct:SDL_error	typeref:union:SDL_error::__anon101
args	thread/windows/SDL_systhread.c	/^    void *args;$/;"	m	struct:ThreadStartParms	file:
array	thread/SDL_thread_c.h	/^    } array[1];$/;"	m	struct:__anon1	typeref:struct:__anon1::__anon2
arrow	video/directfb/SDL_DirectFB_mouse.c	/^static const char *arrow[] = {$/;"	v	file:
arts_functions	audio/arts/SDL_artsaudio.c	/^} arts_functions[] = {$/;"	v	typeref:struct:__anon111	file:
arts_handle	audio/arts/SDL_artsaudio.c	/^static void *arts_handle = NULL;$/;"	v	file:
arts_library	audio/arts/SDL_artsaudio.c	/^static const char *arts_library = SDL_AUDIO_DRIVER_ARTS_DYNAMIC;$/;"	v	file:
aspect_ratio	video/x11/edid.h	/^    double		aspect_ratio;		\/* -1.0 if not specififed *\/$/;"	m	struct:MonitorInfo
assert	stdlib/SDL_malloc.c	1229;"	d	file:
assert	stdlib/SDL_malloc.c	1234;"	d	file:
assert	stdlib/SDL_qsort.c	63;"	d	file:
assert	stdlib/SDL_qsort.c	65;"	d	file:
assertion_handler	SDL_assert.c	/^static SDL_AssertionHandler assertion_handler = SDL_PromptAssertion;$/;"	v	file:
assertion_mutex	SDL_assert.c	/^static SDL_mutex *assertion_mutex = NULL;$/;"	v	file:
assertion_userdata	SDL_assert.c	/^static void *assertion_userdata = NULL;$/;"	v	file:
atan	libm/math_private.h	32;"	d
atan	libm/s_atan.c	/^double atan(double x)$/;"	f
atanhi	libm/s_atan.c	/^static const double atanhi[] = {$/;"	v	file:
atanlo	libm/s_atan.c	/^static const double atanlo[] = {$/;"	v	file:
attribute_hidden	libm/math_private.h	24;"	d
aud	audio/nas/SDL_nasaudio.h	/^    AuServer *aud;$/;"	m	struct:SDL_PrivateAudioData
audioBuffer	core/android/SDL_android.c	/^static jobject audioBuffer = NULL;$/;"	v	file:
audioBuffer16Bit	core/android/SDL_android.c	/^static jboolean audioBuffer16Bit = JNI_FALSE;$/;"	v	file:
audioBufferPinned	core/android/SDL_android.c	/^static void* audioBufferPinned = NULL;$/;"	v	file:
audioBufferStereo	core/android/SDL_android.c	/^static jboolean audioBufferStereo = JNI_FALSE;$/;"	v	file:
audioDevice	audio/android/SDL_androidaudio.c	/^static void * audioDevice;$/;"	v	file:
audioUnit	audio/coreaudio/SDL_coreaudio.h	/^    AudioUnit audioUnit;$/;"	m	struct:SDL_PrivateAudioData
audioUnitOpened	audio/coreaudio/SDL_coreaudio.h	/^    int audioUnitOpened;$/;"	m	struct:SDL_PrivateAudioData
audio_fd	audio/bsd/SDL_bsdaudio.h	/^    int audio_fd;$/;"	m	struct:SDL_PrivateAudioData
audio_fd	audio/dsp/SDL_dspaudio.h	/^    int audio_fd;$/;"	m	struct:SDL_PrivateAudioData
audio_fd	audio/esd/SDL_esdaudio.h	/^    int audio_fd;$/;"	m	struct:SDL_PrivateAudioData
audio_fd	audio/paudio/SDL_paudio.h	/^    int audio_fd;$/;"	m	struct:SDL_PrivateAudioData
audio_fd	audio/qsa/SDL_qsa_audio.h	/^    int audio_fd;$/;"	m	struct:SDL_PrivateAudioData
audio_fd	audio/sun/SDL_sunaudio.h	/^    int audio_fd;$/;"	m	struct:SDL_PrivateAudioData
audio_fmt	audio/sun/SDL_sunaudio.h	/^    SDL_AudioFormat audio_fmt;  \/* The app audio format *\/$/;"	m	struct:SDL_PrivateAudioData
audio_handle	audio/qsa/SDL_qsa_audio.h	/^    snd_pcm_t *audio_handle;$/;"	m	struct:SDL_PrivateAudioData
audio_obj	audio/baudio/SDL_beaudio.h	/^    BSoundPlayer *audio_obj;$/;"	m	struct:SDL_PrivateAudioData
audio_sem	audio/winmm/SDL_winmm.h	/^    HANDLE audio_sem;$/;"	m	struct:SDL_PrivateAudioData
aux	video/directfb/SDL_DirectFB_modes.c	/^    int aux;                    \/* auxiliary integer for callbacks *\/$/;"	m	struct:screen_callback_t	file:
available	video/SDL_sysvideo.h	/^    int (*available) (void);$/;"	m	struct:VideoBootStrap
axes	haptic/darwin/SDL_syshaptic.c	/^    UInt8 axes[3];$/;"	m	struct:haptic_hwdata	file:
axes	haptic/windows/SDL_syshaptic.c	/^    DWORD axes[3];              \/* Axes to use. *\/$/;"	m	struct:haptic_hwdata	file:
axes	joystick/SDL_gamecontroller.c	/^    int axes[SDL_CONTROLLER_AXIS_MAX];$/;"	m	struct:_SDL_ControllerMapping	file:
axes	joystick/SDL_sysjoystick.h	/^    Sint16 *axes;               \/* Current axis states *\/$/;"	m	struct:_SDL_Joystick
axes	joystick/darwin/SDL_sysjoystick_c.h	/^    long axes;                  \/* number of axis (calculated, not reported by device) *\/$/;"	m	struct:joystick_hwdata
axesasbutton	joystick/SDL_gamecontroller.c	/^    int axesasbutton[SDL_CONTROLLER_BUTTON_MAX];$/;"	m	struct:_SDL_ControllerMapping	file:
axis	joystick/linux/SDL_sysjoystick_c.h	/^        int axis[2];$/;"	m	struct:joystick_hwdata::hwdata_ball
axis	joystick/linux/SDL_sysjoystick_c.h	/^        int axis[2];$/;"	m	struct:joystick_hwdata::hwdata_hat
axis_correct	joystick/linux/SDL_sysjoystick_c.h	/^    struct axis_correct$/;"	s	struct:joystick_hwdata
axis_map	joystick/bsd/SDL_sysjoystick.c	/^    int axis_map[JOYAXE_count]; \/* map present JOYAXE_* to 0,1,.. *\/$/;"	m	struct:joystick_hwdata	file:
b	joystick/psp/SDL_sysjoystick.c	/^static point b = { 50, 0  };$/;"	v	file:
b	render/SDL_sysrender.h	/^    Uint8 r, g, b, a;                   \/**< Color for drawing operations values *\/$/;"	m	struct:SDL_Renderer
b	render/SDL_sysrender.h	/^    Uint8 r, g, b, a;           \/**< Texture modulation values *\/$/;"	m	struct:SDL_Texture
b	render/mmx.h	/^    char b[8];                  \/* 8 Byte (8-bit) values *\/$/;"	m	union:__anon97
b	render/software/SDL_rotate.c	/^    Uint8 b;$/;"	m	struct:tColorRGBA	file:
b	video/SDL_blit.h	/^    Uint8 r, g, b, a;$/;"	m	struct:__anon37
bHasNewData	core/android/SDL_android.c	/^static bool bHasNewData;$/;"	v	file:
bLeftTrigger	joystick/windows/SDL_dxjoystick_c.h	/^    BYTE bLeftTrigger;$/;"	m	struct:__anon72
bRightTrigger	joystick/windows/SDL_dxjoystick_c.h	/^    BYTE bRightTrigger;$/;"	m	struct:__anon72
bXInputDevice	joystick/windows/SDL_dxjoystick.c	/^    SDL_bool bXInputDevice;$/;"	m	struct:JoyStick_DeviceData_	file:
bXInputDevice	joystick/windows/SDL_dxjoystick_c.h	/^    Uint8 bXInputDevice; \/* 1 if this device supports using the xinput API rather than DirectInput *\/$/;"	m	struct:joystick_hwdata
bXInputHaptic	haptic/windows/SDL_syshaptic.c	/^    Uint8 bXInputHaptic; \/* Supports force feedback via XInput. *\/$/;"	m	struct:__anon100	file:
bXInputHaptic	haptic/windows/SDL_syshaptic.c	/^    Uint8 bXInputHaptic; \/* Supports force feedback via XInput. *\/$/;"	m	struct:haptic_hwdata	file:
bXInputHaptic	joystick/windows/SDL_dxjoystick_c.h	/^    Uint8 bXInputHaptic; \/* Supports force feedback via XInput. *\/$/;"	m	struct:joystick_hwdata
backbuffer	render/psp/SDL_render_psp.c	/^    void*           backbuffer ;$/;"	m	struct:__anon76	file:
balldelta	joystick/SDL_sysjoystick.h	/^    struct balldelta {$/;"	s	struct:_SDL_Joystick
balls	joystick/SDL_sysjoystick.h	/^    } *balls;                   \/* Current ball motion deltas *\/$/;"	m	struct:_SDL_Joystick	typeref:struct:_SDL_Joystick::balldelta
balls	joystick/linux/SDL_sysjoystick_c.h	/^    } *balls;$/;"	m	struct:joystick_hwdata	typeref:struct:joystick_hwdata::hwdata_ball
base	stdlib/SDL_malloc.c	/^    char *base;                 \/* base address *\/$/;"	m	struct:malloc_segment	file:
beginScene	render/direct3d/SDL_render_d3d.c	/^    SDL_bool beginScene;$/;"	m	struct:__anon94	file:
bestDollarDifference	events/SDL_gesture.c	/^static float bestDollarDifference(SDL_FloatPoint* points,SDL_FloatPoint* templ)$/;"	f	file:
bin_find	stdlib/SDL_malloc.c	/^bin_find(mstate m, mchunkptr x)$/;"	f	file:
bindex_t	stdlib/SDL_malloc.c	/^typedef size_t bindex_t;        \/* Described below *\/$/;"	t	file:
binmap_t	stdlib/SDL_malloc.c	/^typedef unsigned int binmap_t;  \/* Described below *\/$/;"	t	file:
bipolar	video/x11/edid.h	/^	    int bipolar;$/;"	m	struct:DetailedTiming::__anon12::__anon13
bit_for_tree_index	stdlib/SDL_malloc.c	2325;"	d	file:
bitmap	video/x11/SDL_x11shape.h	/^    void* bitmap;$/;"	m	struct:__anon21
bitmap_blit	video/SDL_blit_0.c	/^static const SDL_BlitFunc bitmap_blit[] = {$/;"	v	file:
bitmapsize	video/x11/SDL_x11shape.h	/^    Uint32 bitmapsize;$/;"	m	struct:__anon21
bits	events/SDL_events.c	/^    Uint32 bits[8];$/;"	m	struct:__anon59	file:
bits	render/psp/SDL_render_psp.c	/^    unsigned int        bits;                               \/**< Image bits per pixel. *\/$/;"	m	struct:__anon77	file:
bits_per_primary	video/x11/edid.h	/^	    int		bits_per_primary;$/;"	m	struct:MonitorInfo::__anon15::__anon16
bitspersample	audio/SDL_wave.h	/^    Uint16 bitspersample;       \/* One of 8, 12, 16, or 4 for ADPCM *\/$/;"	m	struct:WaveFMT
bk	stdlib/SDL_malloc.c	/^    struct malloc_chunk *bk;$/;"	m	struct:malloc_chunk	typeref:struct:malloc_chunk::malloc_chunk	file:
bk	stdlib/SDL_malloc.c	/^    struct malloc_tree_chunk *bk;$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
blank_cdata	events/blank_cursor.h	/^static const unsigned char blank_cdata[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
blank_cmask	events/blank_cursor.h	/^static const unsigned char blank_cmask[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
blank_to_black	video/x11/edid.h	/^	    int		blank_to_black;$/;"	m	struct:MonitorInfo::__anon15::__anon17
blendMode	render/SDL_sysrender.h	/^    SDL_BlendMode blendMode;            \/**< The drawing blend mode *\/$/;"	m	struct:SDL_Renderer
blendMode	render/SDL_sysrender.h	/^    SDL_BlendMode blendMode;    \/**< The texture blend mode *\/$/;"	m	struct:SDL_Texture
blendMode	render/opengl/SDL_render_gl.c	/^        int blendMode;$/;"	m	struct:__anon90::__anon91	file:
blendMode	render/opengles/SDL_render_gles.c	/^        int blendMode;$/;"	m	struct:__anon80::__anon81	file:
blendMode	render/opengles2/SDL_render_gles2.c	/^        int blendMode;$/;"	m	struct:GLES2_DriverContext::__anon86	file:
blend_mode	render/opengles2/SDL_render_gles2.c	/^    SDL_BlendMode blend_mode;$/;"	m	struct:GLES2_ProgramCacheEntry	file:
blit	video/SDL_blit.h	/^    SDL_blit blit;$/;"	m	struct:SDL_BlitMap
blitFlags	video/directfb/SDL_DirectFB_render.c	/^    DFBSurfaceBlittingFlags blitFlags;$/;"	m	struct:__anon48	file:
blit_features	video/SDL_blit_N.c	/^    Uint32 blit_features;$/;"	m	struct:blit_table	file:
blit_table	video/SDL_blit_N.c	/^struct blit_table$/;"	s	file:
blitfunc	video/SDL_blit_N.c	/^    SDL_BlitFunc blitfunc;$/;"	m	struct:blit_table	file:
blockalign	audio/SDL_wave.h	/^    Uint16 blockalign;          \/* Bytes per sample block *\/$/;"	m	struct:WaveFMT
blue_size	video/SDL_sysvideo.h	/^        int blue_size;$/;"	m	struct:SDL_VideoDevice::__anon27
blue_x	video/x11/edid.h	/^    double		blue_x;$/;"	m	struct:MonitorInfo
blue_y	video/x11/edid.h	/^    double		blue_y;$/;"	m	struct:MonitorInfo
bmode	video/bwindow/SDL_bmodes.cc	/^	display_mode *bmode;$/;"	m	struct:SDL_DisplayModeData	file:
bootstrap	audio/SDL_audio.c	/^static const AudioBootStrap *const bootstrap[] = {$/;"	v	file:
bootstrap	video/SDL_video.c	/^static VideoBootStrap *bootstrap[] = {$/;"	v	file:
bottom_size	video/directfb/SDL_DirectFB_WM.h	/^    int bottom_size;$/;"	m	struct:_DFB_Theme
bp	libm/e_pow.c	/^       bp[] = { 1.0, 1.5, }, dp_h[] = {$/;"	v	file:
bpp	render/psp/SDL_render_psp.c	/^    unsigned int    bpp ;$/;"	m	struct:__anon76	file:
bps	audio/nas/SDL_nasaudio.h	/^    int bps;$/;"	m	struct:SDL_PrivateAudioData
brightness	video/SDL_sysvideo.h	/^    float brightness;$/;"	m	struct:SDL_Window
buf	SDL_error_c.h	/^        char buf[ERR_MAX_STRLEN];$/;"	m	union:SDL_error::__anon101
buf	joystick/bsd/SDL_sysjoystick.c	/^    void *buf; \/* Buffer *\/$/;"	m	struct:report	file:
buf_free	audio/nas/SDL_nasaudio.h	/^    int buf_free;$/;"	m	struct:SDL_PrivateAudioData
buffer	audio/SDL_sysaudio.h	/^    Uint8 *buffer;$/;"	m	struct:__anon107
buffer	audio/coreaudio/SDL_coreaudio.h	/^    void *buffer;$/;"	m	struct:SDL_PrivateAudioData
bufferOffset	audio/coreaudio/SDL_coreaudio.h	/^    UInt32 bufferOffset;$/;"	m	struct:SDL_PrivateAudioData
bufferSize	audio/coreaudio/SDL_coreaudio.h	/^    UInt32 bufferSize;$/;"	m	struct:SDL_PrivateAudioData
buffer_size	video/SDL_sysvideo.h	/^        int buffer_size;$/;"	m	struct:SDL_VideoDevice::__anon27
buffered	joystick/windows/SDL_dxjoystick_c.h	/^    int buffered;$/;"	m	struct:joystick_hwdata
buggycards	audio/qsa/SDL_qsa_audio.c	/^struct BuggyCards buggycards[QSA_WA_CARDS] = {$/;"	v	typeref:struct:BuggyCards
bugtype	audio/qsa/SDL_qsa_audio.c	/^    unsigned long bugtype;$/;"	m	struct:BuggyCards	file:
buildArbitraryResampleFunc	audio/sdlgenaudiocvt.pl	/^sub buildArbitraryResampleFunc {$/;"	s
buildCvtFunc	audio/sdlgenaudiocvt.pl	/^sub buildCvtFunc {$/;"	s
buildMultipleResampleFunc	audio/sdlgenaudiocvt.pl	/^sub buildMultipleResampleFunc {$/;"	s
buildResamplers	audio/sdlgenaudiocvt.pl	/^sub buildResamplers {$/;"	s
buildTypeConverters	audio/sdlgenaudiocvt.pl	/^sub buildTypeConverters {$/;"	s
build_device_list	audio/coreaudio/SDL_coreaudio.c	/^build_device_list(int iscapture, addDevFn addfn, void *addfndata)$/;"	f	file:
button_map	joystick/psp/SDL_sysjoystick.c	/^static const enum PspCtrlButtons button_map[] = {$/;"	v	typeref:enum:PspCtrlButtons	file:
button_press_index	video/x11/SDL_x11messagebox.c	/^    int button_press_index;             \/* Index into buttondata\/buttonpos for button which is pressed (or -1). *\/$/;"	m	struct:SDL_MessageBoxDataX11	file:
buttonasaxis	joystick/SDL_gamecontroller.c	/^    int buttonasaxis[SDL_CONTROLLER_AXIS_MAX];$/;"	m	struct:_SDL_ControllerMapping	file:
buttondata	video/x11/SDL_x11messagebox.c	/^    const SDL_MessageBoxButtonData *buttondata;   \/* Button data from caller *\/$/;"	m	struct:SDL_MessageBoxButtonDataX11	file:
buttondata	video/x11/SDL_x11messagebox.c	/^    const SDL_MessageBoxButtonData *buttondata;$/;"	m	struct:SDL_MessageBoxDataX11	file:
buttonpos	video/x11/SDL_x11messagebox.c	/^    SDL_MessageBoxButtonDataX11 buttonpos[ MAX_BUTTONS ];$/;"	m	struct:SDL_MessageBoxDataX11	file:
buttons	joystick/SDL_gamecontroller.c	/^    int buttons[SDL_CONTROLLER_BUTTON_MAX];$/;"	m	struct:_SDL_ControllerMapping	file:
buttons	joystick/SDL_sysjoystick.h	/^    Uint8 *buttons;             \/* Current button states *\/$/;"	m	struct:_SDL_Joystick
buttons	joystick/darwin/SDL_sysjoystick_c.h	/^    long buttons;               \/* number of buttons (calculated, not reported by device) *\/$/;"	m	struct:joystick_hwdata
buttonstate	events/SDL_mouse_c.h	/^    Uint32 buttonstate;$/;"	m	struct:__anon65
byterate	audio/SDL_wave.h	/^    Uint32 byterate;            \/* Average bytes per second *\/$/;"	m	struct:WaveFMT
bytes_per_pixel	video/SDL_video.c	/^    int bytes_per_pixel;$/;"	m	struct:__anon44	file:
c	joystick/psp/SDL_sysjoystick.c	/^static point c = { 78, 32767 };$/;"	v	file:
cDlgItems	video/windows/SDL_windowsmessagebox.c	/^    WORD cDlgItems;$/;"	m	struct:__anon52	file:
c_dfDIJoystick2	joystick/windows/SDL_dxjoystick.c	/^const DIDATAFORMAT c_dfDIJoystick2 = {$/;"	v
cache_pad	timer/SDL_timer.c	/^    char cache_pad[SDL_CACHELINE_SIZE];$/;"	m	struct:__anon114	file:
calc_bezier_y	joystick/psp/SDL_sysjoystick.c	/^static int calc_bezier_y(float t)$/;"	f	file:
calc_swizzle32	video/SDL_blit_N.c	/^calc_swizzle32(const SDL_PixelFormat * srcfmt, const SDL_PixelFormat * dstfmt)$/;"	f	file:
callback	SDL_hints.c	/^    SDL_HintCallback callback;$/;"	m	struct:SDL_HintWatch	file:
callback	events/SDL_events.c	/^    SDL_EventFilter callback;$/;"	m	struct:SDL_EventWatcher	file:
callback	timer/SDL_timer.c	/^    SDL_TimerCallback callback;$/;"	m	struct:_SDL_Timer	file:
callbacks	SDL_hints.c	/^    SDL_HintWatch *callbacks;$/;"	m	struct:SDL_Hint	file:
calloc	stdlib/SDL_malloc.c	636;"	d	file:
calloc_must_clear	stdlib/SDL_malloc.c	1787;"	d	file:
calloc_must_clear	stdlib/SDL_malloc.c	1789;"	d	file:
canceled	timer/SDL_timer.c	/^    volatile SDL_bool canceled;$/;"	m	struct:_SDL_Timer	file:
capabilities	haptic/windows/SDL_syshaptic.c	/^    DIDEVCAPS capabilities;$/;"	m	struct:__anon100	file:
caption_color	video/directfb/SDL_DirectFB_WM.h	/^    DFBColor caption_color;$/;"	m	struct:_DFB_Theme
caption_size	video/directfb/SDL_DirectFB_WM.h	/^    int caption_size;$/;"	m	struct:_DFB_Theme
cardname	audio/qsa/SDL_qsa_audio.c	/^    char *cardname;$/;"	m	struct:BuggyCards	file:
cardno	audio/qsa/SDL_qsa_audio.c	/^    int cardno;$/;"	m	struct:_QSA_Device	file:
cardno	audio/qsa/SDL_qsa_audio.h	/^    int cardno;$/;"	m	struct:SDL_PrivateAudioData
category	SDL_log.c	/^    int category;$/;"	m	struct:SDL_LogLevel	file:
cb_data	video/directfb/SDL_DirectFB_events.c	/^typedef struct _cb_data cb_data;$/;"	t	typeref:struct:_cb_data	file:
centroid	events/SDL_gesture.c	/^    SDL_FloatPoint centroid;$/;"	m	struct:__anon64	file:
cfCandForm	video/windows/SDL_windowsvideo.h	/^    CANDIDATEFORM cfCandForm[4];$/;"	m	struct:tagINPUTCONTEXT2
cfCompForm	video/windows/SDL_windowsvideo.h	/^    COMPOSITIONFORM cfCompForm;$/;"	m	struct:tagINPUTCONTEXT2
ch	video/directfb/SDL_DirectFB_modes.h	/^    int                     ch;$/;"	m	struct:_DFB_DisplayData
change_mparam	stdlib/SDL_malloc.c	/^change_mparam(int param_number, int value)$/;"	f	file:
channel	audio/psp/SDL_pspaudio.h	/^    int     channel;$/;"	m	struct:SDL_PrivateAudioData
channels	audio/SDL_audio_c.h	/^    int channels;$/;"	m	struct:__anon113
channels	audio/SDL_wave.h	/^    Uint16 channels;            \/* 1 = mono, 2 = stereo *\/$/;"	m	struct:WaveFMT
check_free_chunk	stdlib/SDL_malloc.c	2249;"	d	file:
check_free_chunk	stdlib/SDL_malloc.c	2257;"	d	file:
check_inuse_chunk	stdlib/SDL_malloc.c	2250;"	d	file:
check_inuse_chunk	stdlib/SDL_malloc.c	2258;"	d	file:
check_malloc_state	stdlib/SDL_malloc.c	2253;"	d	file:
check_malloc_state	stdlib/SDL_malloc.c	2262;"	d	file:
check_malloced_chunk	stdlib/SDL_malloc.c	2251;"	d	file:
check_malloced_chunk	stdlib/SDL_malloc.c	2260;"	d	file:
check_mmapped_chunk	stdlib/SDL_malloc.c	2252;"	d	file:
check_mmapped_chunk	stdlib/SDL_malloc.c	2261;"	d	file:
check_proc_acpi_ac_adapter	power/linux/SDL_syspower.c	/^check_proc_acpi_ac_adapter(const char * node, SDL_bool * have_ac)$/;"	f	file:
check_proc_acpi_battery	power/linux/SDL_syspower.c	/^check_proc_acpi_battery(const char * node, SDL_bool * have_battery,$/;"	f	file:
check_top_chunk	stdlib/SDL_malloc.c	2254;"	d	file:
check_top_chunk	stdlib/SDL_malloc.c	2259;"	d	file:
checked_setname	thread/pthread/SDL_systhread.c	/^static SDL_bool checked_setname = SDL_FALSE;$/;"	v	file:
checkps	power/macosx/SDL_syspower.c	/^checkps(CFDictionaryRef dict, SDL_bool * have_ac, SDL_bool * have_battery,$/;"	f	file:
checksum	video/x11/edid.h	/^    int			checksum;$/;"	m	struct:MonitorInfo
child	stdlib/SDL_malloc.c	/^    struct malloc_tree_chunk *child[2];$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
children	video/SDL_shape_internals.h	/^	SDL_QuadTreeChildren children;$/;"	m	union:__anon32
chunk2mem	stdlib/SDL_malloc.c	1712;"	d	file:
chunk_minus_offset	stdlib/SDL_malloc.c	1757;"	d	file:
chunk_plus_offset	stdlib/SDL_malloc.c	1756;"	d	file:
chunksize	stdlib/SDL_malloc.c	1750;"	d	file:
cinuse	stdlib/SDL_malloc.c	1748;"	d	file:
classname	video/x11/SDL_x11video.h	/^    char *classname;$/;"	m	struct:SDL_VideoData
clear_cinuse	stdlib/SDL_malloc.c	1753;"	d	file:
clear_pinuse	stdlib/SDL_malloc.c	1752;"	d	file:
clear_smallmap	stdlib/SDL_malloc.c	2346;"	d	file:
clear_treemap	stdlib/SDL_malloc.c	2350;"	d	file:
client	video/directfb/SDL_DirectFB_window.h	/^    DFBRectangle            client;$/;"	m	struct:_DFB_WindowData
clip_rect	render/SDL_sysrender.h	/^    SDL_Rect clip_rect;$/;"	m	struct:SDL_Renderer
clip_rect_backup	render/SDL_sysrender.h	/^    SDL_Rect clip_rect_backup;$/;"	m	struct:SDL_Renderer
clipboard_count	video/cocoa/SDL_cocoavideo.h	/^    NSInteger clipboard_count;$/;"	m	struct:SDL_VideoData
clipboard_count	video/windows/SDL_windowsvideo.h	/^    DWORD clipboard_count;$/;"	m	struct:SDL_VideoData
clipboard_text	video/SDL_sysvideo.h	/^    char * clipboard_text;$/;"	m	struct:SDL_VideoDevice
close_audio_device	audio/SDL_audio.c	/^close_audio_device(SDL_AudioDevice * device)$/;"	f	file:
close_color	video/directfb/SDL_DirectFB_WM.h	/^    DFBColor close_color;$/;"	m	struct:_DFB_Theme
close_file	video/sdlgenblit.pl	/^sub close_file {$/;"	s
closed	joystick/SDL_sysjoystick.h	/^    Uint8 closed;               \/* 1 if this device is no longer valid *\/$/;"	m	struct:_SDL_Joystick
cmpmodes	video/SDL_video.c	/^cmpmodes(const void *A, const void *B)$/;"	f	file:
cocoaTouchType	video/cocoa/SDL_cocoawindow.h	/^} cocoaTouchType;$/;"	t	typeref:enum:__anon43
code	video/uikit/keyinfotable.h	/^    SDL_Scancode code;$/;"	m	struct:__anon28
coef	joystick/linux/SDL_sysjoystick_c.h	/^        int coef[3];$/;"	m	struct:joystick_hwdata::axis_correct
coinitialized	haptic/windows/SDL_syshaptic.c	/^static SDL_bool coinitialized = SDL_FALSE;$/;"	v	file:
coinitialized	joystick/windows/SDL_dxjoystick.c	/^static SDL_bool coinitialized = SDL_FALSE;$/;"	v	file:
color	render/direct3d/SDL_render_d3d.c	/^    DWORD color;$/;"	m	struct:__anon96	file:
color	render/opengl/SDL_render_gl.c	/^        Uint32 color;$/;"	m	struct:__anon90::__anon91	file:
color	render/opengles/SDL_render_gles.c	/^        Uint32 color;$/;"	m	struct:__anon80::__anon81	file:
color	video/x11/SDL_x11messagebox.c	/^    Uint32 color[ SDL_MESSAGEBOX_COLOR_MAX ];$/;"	m	struct:SDL_MessageBoxDataX11	file:
color_type	video/x11/edid.h	/^	    ColorType	color_type;$/;"	m	struct:MonitorInfo::__anon15::__anon17
colorkey	video/SDL_blit.h	/^    Uint32 colorkey;$/;"	m	struct:__anon37
colorkey_blit	video/SDL_blit_0.c	/^static const SDL_BlitFunc colorkey_blit[] = {$/;"	v	file:
colormap	video/x11/SDL_x11window.h	/^    Colormap colormap;$/;"	m	struct:__anon25
colortab	render/SDL_yuv_sw_c.h	/^    int *colortab;$/;"	m	struct:SDL_SW_YUVTexture
composite	video/x11/edid.h	/^	    int composite;$/;"	m	struct:DetailedTiming::__anon12::__anon14
composite_sync_on_green	video/x11/edid.h	/^	    int		composite_sync_on_green;$/;"	m	struct:MonitorInfo::__anon15::__anon17
composite_sync_on_h	video/x11/edid.h	/^	    int		composite_sync_on_h;$/;"	m	struct:MonitorInfo::__anon15::__anon17
compute_bit2idx	stdlib/SDL_malloc.c	2356;"	d	file:
compute_bit2idx	stdlib/SDL_malloc.c	2365;"	d	file:
compute_bit2idx	stdlib/SDL_malloc.c	2368;"	d	file:
compute_tree_index	stdlib/SDL_malloc.c	2291;"	d	file:
compute_tree_index	stdlib/SDL_malloc.c	2305;"	d	file:
cond	thread/pthread/SDL_syscond.c	/^    pthread_cond_t cond;$/;"	m	struct:SDL_cond	file:
consoleAttached	SDL_log.c	/^static int consoleAttached = 0;$/;"	v	file:
console_main	main/windows/SDL_windows_main.c	/^console_main(int argc, char *argv[])$/;"	f
console_main	main/windows/SDL_windows_main.c	128;"	d	file:
context	audio/pulseaudio/SDL_pulseaudio.h	/^    pa_context *context;$/;"	m	struct:SDL_PrivateAudioData
context	render/opengl/SDL_render_gl.c	/^    SDL_GLContext context;$/;"	m	struct:__anon90	file:
context	render/opengles/SDL_render_gles.c	/^    SDL_GLContext context;$/;"	m	struct:__anon80	file:
context	render/opengles2/SDL_render_gles2.c	/^    SDL_GLContext *context;$/;"	m	struct:GLES2_DriverContext	file:
context	video/cocoa/SDL_cocoashape.h	/^    NSGraphicsContext* context;$/;"	m	struct:__anon39
context	video/directfb/SDL_DirectFB_opengl.h	/^    IDirectFBGL         *context;$/;"	m	struct:_DirectFB_GLContext
context	video/psp/SDL_pspgl_c.h	/^        EGLContext context;$/;"	m	struct:SDL_GLDriverData
context	video/uikit/SDL_uikitopenglview.h	/^@property (nonatomic, retain, readonly) EAGLContext *context;$/;"	v
continuous_frequency	video/x11/edid.h	/^    int			continuous_frequency;$/;"	m	struct:MonitorInfo
controller_guids	joystick/sort_controllers.py	/^controller_guids = {}$/;"	v
controllers	joystick/sort_controllers.py	/^controllers = []$/;"	v
convert	audio/SDL_sysaudio.h	/^    SDL_AudioCVT convert;$/;"	m	struct:SDL_AudioDevice
convert_format	render/opengl/SDL_render_gl.c	/^convert_format(GL_RenderData *renderdata, Uint32 pixel_format,$/;"	f
cookie	joystick/darwin/SDL_sysjoystick_c.h	/^    IOHIDElementCookie cookie;  \/* unique value which identifies element, will NOT change *\/$/;"	m	struct:recElement
copy_32	video/SDL_RLEaccel.c	/^copy_32(void *dst, Uint32 * src, int n,$/;"	f	file:
copy_opaque_16	video/SDL_RLEaccel.c	/^copy_opaque_16(void *dst, Uint32 * src, int n,$/;"	f	file:
copy_row3	video/SDL_stretch.c	/^copy_row3(Uint8 * src, int src_w, Uint8 * dst, int dst_w)$/;"	f	file:
copy_transl_555	video/SDL_RLEaccel.c	/^copy_transl_555(void *dst, Uint32 * src, int n,$/;"	f	file:
copy_transl_565	video/SDL_RLEaccel.c	/^copy_transl_565(void *dst, Uint32 * src, int n,$/;"	f	file:
copysign	libm/math_private.h	34;"	d
cos	libm/math_private.h	35;"	d
count	events/SDL_events.c	/^    volatile int count;$/;"	m	struct:__anon60	file:
count	render/opengles2/SDL_render_gles2.c	/^    int count;$/;"	m	struct:GLES2_ProgramCache	file:
count	render/opengles2/SDL_render_gles2.c	/^    int count;$/;"	m	struct:GLES2_ShaderCache	file:
count	thread/generic/SDL_syssem.c	/^    Uint32 count;$/;"	m	struct:SDL_semaphore	file:
count	thread/windows/SDL_syssem.c	/^    LONG count;$/;"	m	struct:SDL_semaphore	file:
count	video/x11/SDL_x11events.c	/^    int format, count;$/;"	m	struct:__anon20	file:
count_lock	thread/generic/SDL_syssem.c	/^    SDL_mutex *count_lock;$/;"	m	struct:SDL_semaphore	file:
count_nonzero	thread/generic/SDL_syssem.c	/^    SDL_cond *count_nonzero;$/;"	m	struct:SDL_semaphore	file:
cp	libm/e_pow.c	/^         cp = 9.61796693925975554329e-01,       \/* 0x3FEEC709, 0xDC3A03FD =2\/(3ln2) *\/$/;"	v	file:
cp_h	libm/e_pow.c	/^         cp_h = 9.61796700954437255859e-01,     \/* 0x3FEEC709, 0xE0000000 =(float)cp *\/$/;"	v	file:
cp_l	libm/e_pow.c	/^         cp_l = -7.02846165095275826516e-09,    \/* 0xBE3E2FE0, 0x145B01F5 =tail of cp_h *\/$/;"	v	file:
cpu	video/SDL_blit.h	/^    int cpu;$/;"	m	struct:__anon38
cpuid	cpuinfo/SDL_cpuinfo.c	164;"	d	file:
cpuid	cpuinfo/SDL_cpuinfo.c	172;"	d	file:
cpuid	cpuinfo/SDL_cpuinfo.c	180;"	d	file:
cpuid	cpuinfo/SDL_cpuinfo.c	190;"	d	file:
create	video/SDL_sysvideo.h	/^    SDL_VideoDevice *(*create) (int devindex);$/;"	m	struct:VideoBootStrap
create_mspace	stdlib/SDL_malloc.c	/^create_mspace(size_t capacity, int locked)$/;"	f
create_mspace_with_base	stdlib/SDL_malloc.c	/^create_mspace_with_base(void *base, size_t capacity, int locked)$/;"	f
created	video/cocoa/SDL_cocoawindow.h	/^    SDL_bool created;$/;"	m	struct:SDL_WindowData
created	video/windows/SDL_windowswindow.h	/^    SDL_bool created;$/;"	m	struct:__anon57
created	video/x11/SDL_x11window.h	/^    SDL_bool created;$/;"	m	struct:__anon25
cs	thread/windows/SDL_sysmutex.c	/^    CRITICAL_SECTION cs;$/;"	m	struct:SDL_mutex	file:
cur_cursor	events/SDL_mouse_c.h	/^    SDL_Cursor *cur_cursor;$/;"	m	struct:__anon65
current	render/opengl/SDL_render_gl.c	/^    } current;$/;"	m	struct:__anon90	typeref:struct:__anon90::__anon91	file:
current	render/opengles/SDL_render_gles.c	/^    } current;$/;"	m	struct:__anon80	typeref:struct:__anon80::__anon81	file:
current	render/opengles2/SDL_render_gles2.c	/^    } current;$/;"	m	struct:GLES2_DriverContext	typeref:struct:GLES2_DriverContext::__anon86	file:
currentBlendMode	render/psp/SDL_render_psp.c	/^    int             currentBlendMode;$/;"	m	struct:__anon76	file:
currentColor	render/psp/SDL_render_psp.c	/^    unsigned int    currentColor;$/;"	m	struct:__anon76	file:
currentRenderTarget	render/direct3d/SDL_render_d3d.c	/^    IDirect3DSurface9 *currentRenderTarget;$/;"	m	struct:__anon94	file:
currentXInputSlot	joystick/windows/SDL_dxjoystick_c.h	/^    Uint8 currentXInputSlot; \/* the current position to write to in XInputState below, used so we can compare old and new values *\/$/;"	m	struct:joystick_hwdata
current_audio	audio/SDL_audio.c	/^static SDL_AudioDriver current_audio;$/;"	v	file:
current_glctx	video/SDL_sysvideo.h	/^    SDL_GLContext current_glctx;$/;"	m	struct:SDL_VideoDevice
current_glctx_tls	video/SDL_sysvideo.h	/^    SDL_TLSID current_glctx_tls;$/;"	m	struct:SDL_VideoDevice
current_glwin	video/SDL_sysvideo.h	/^    SDL_Window *current_glwin;$/;"	m	struct:SDL_VideoDevice
current_glwin_tls	video/SDL_sysvideo.h	/^    SDL_TLSID current_glwin_tls;$/;"	m	struct:SDL_VideoDevice
current_mode	video/SDL_sysvideo.h	/^    SDL_DisplayMode current_mode;$/;"	m	struct:SDL_VideoDisplay
current_program	render/opengles2/SDL_render_gles2.c	/^    GLES2_ProgramCacheEntry *current_program;$/;"	m	struct:GLES2_DriverContext	file:
cursor_shown	events/SDL_mouse_c.h	/^    SDL_bool cursor_shown;$/;"	m	struct:__anon65
cursors	events/SDL_mouse_c.h	/^    SDL_Cursor *cursors;$/;"	m	struct:__anon65
cw	video/directfb/SDL_DirectFB_modes.h	/^    int                     cw;$/;"	m	struct:_DFB_DisplayData
cx	video/windows/SDL_windowsmessagebox.c	/^    short cx;$/;"	m	struct:__anon52	file:
cx	video/windows/SDL_windowsmessagebox.c	/^    short cx;$/;"	m	struct:__anon53	file:
cxContact	video/windows/SDL_windowsvideo.h	/^    DWORD     cxContact;$/;"	m	struct:_TOUCHINPUT
cy	video/windows/SDL_windowsmessagebox.c	/^    short cy;$/;"	m	struct:__anon52	file:
cy	video/windows/SDL_windowsmessagebox.c	/^    short cy;$/;"	m	struct:__anon53	file:
cyContact	video/windows/SDL_windowsvideo.h	/^    DWORD     cyContact;$/;"	m	struct:_TOUCHINPUT
d	joystick/psp/SDL_sysjoystick.c	/^static point d = { 128, 32767 };$/;"	v	file:
d	render/mmx.h	/^    int d[2];                   \/* 2 Doubleword (32-bit) values *\/$/;"	m	union:__anon97
d3d	render/direct3d/SDL_render_d3d.c	/^    IDirect3D9 *d3d;$/;"	m	struct:__anon94	file:
d3dDLL	render/direct3d/SDL_render_d3d.c	/^    void* d3dDLL;$/;"	m	struct:__anon94	file:
d3dxDLL	render/direct3d/SDL_render_d3d.c	/^    void* d3dxDLL;$/;"	m	struct:__anon94	file:
darwin_scancode_table	events/scancodes_darwin.h	/^static const SDL_Scancode darwin_scancode_table[] = {$/;"	v
data	audio/SDL_wave.h	/^    Uint8 *data;$/;"	m	struct:Chunk
data	render/opengles2/SDL_shaders_gles2.h	/^    const void *data;$/;"	m	struct:GLES2_ShaderInstance
data	render/psp/SDL_render_psp.c	/^    void                *data;                              \/**< Image data. *\/$/;"	m	struct:__anon77	file:
data	thread/SDL_thread.c	/^    void *data;$/;"	m	struct:__anon3	file:
data	thread/SDL_thread_c.h	/^        void *data;$/;"	m	struct:__anon1::__anon2
data	thread/SDL_thread_c.h	/^    void *data;$/;"	m	struct:SDL_Thread
data	video/SDL_blit.h	/^    void *data;$/;"	m	struct:SDL_BlitMap
data	video/SDL_shape_internals.h	/^	SDL_ShapeUnion data;$/;"	m	struct:__anon34
data	video/SDL_sysvideo.h	/^    SDL_WindowUserData *data;$/;"	m	struct:SDL_Window
data	video/SDL_sysvideo.h	/^    void *data;$/;"	m	struct:SDL_WindowUserData
data	video/windows/SDL_windowsmessagebox.c	/^    Uint8 *data;$/;"	m	struct:__anon54	file:
data	video/windows/SDL_windowsvideo.h	/^    void *data;$/;"	m	struct:__anon55
data	video/x11/SDL_x11events.c	/^    unsigned char *data;$/;"	m	struct:__anon20	file:
dbus	video/x11/SDL_x11video.h	/^    DBusConnection *dbus;$/;"	m	struct:SDL_VideoData
dbus_handle	video/x11/SDL_x11video.c	/^static void *dbus_handle = NULL;$/;"	v	file:
dbus_library	video/x11/SDL_x11video.c	/^static const char *dbus_library = "libdbus-1.so.3";$/;"	v	file:
debug_enabled	render/opengl/SDL_render_gl.c	/^    SDL_bool debug_enabled;$/;"	m	struct:__anon90	file:
debug_print	SDL_assert.c	/^debug_print(const char *fmt, ...)$/;"	f	file:
decode_check_sum	video/x11/edid-parse.c	/^decode_check_sum (const uchar *edid,$/;"	f	file:
decode_color_characteristics	video/x11/edid-parse.c	/^decode_color_characteristics (const uchar *edid, MonitorInfo *info)$/;"	f	file:
decode_descriptors	video/x11/edid-parse.c	/^decode_descriptors (const uchar *edid, MonitorInfo *info)$/;"	f	file:
decode_detailed_timing	video/x11/edid-parse.c	/^decode_detailed_timing (const uchar *timing,$/;"	f	file:
decode_display_descriptor	video/x11/edid-parse.c	/^decode_display_descriptor (const uchar *desc,$/;"	f	file:
decode_display_parameters	video/x11/edid-parse.c	/^decode_display_parameters (const uchar *edid, MonitorInfo *info)$/;"	f	file:
decode_edid	video/x11/edid-parse.c	/^decode_edid (const uchar *edid)$/;"	f
decode_edid_version	video/x11/edid-parse.c	/^decode_edid_version (const uchar *edid, MonitorInfo *info)$/;"	f	file:
decode_established_timings	video/x11/edid-parse.c	/^decode_established_timings (const uchar *edid, MonitorInfo *info)$/;"	f	file:
decode_fraction	video/x11/edid-parse.c	/^decode_fraction (int high, int low)$/;"	f	file:
decode_header	video/x11/edid-parse.c	/^decode_header (const uchar *edid)$/;"	f	file:
decode_lf_string	video/x11/edid-parse.c	/^decode_lf_string (const uchar *s, int n_chars, char *result)$/;"	f	file:
decode_standard_timings	video/x11/edid-parse.c	/^decode_standard_timings (const uchar *edid, MonitorInfo *info)$/;"	f	file:
decode_vendor_and_product_identification	video/x11/edid-parse.c	/^decode_vendor_and_product_identification (const uchar *edid, MonitorInfo *info)$/;"	f	file:
def_cursor	events/SDL_mouse_c.h	/^    SDL_Cursor *def_cursor;$/;"	m	struct:__anon65
defaultRenderTarget	render/direct3d/SDL_render_d3d.c	/^    IDirect3DSurface9 *defaultRenderTarget;$/;"	m	struct:__anon94	file:
default_cdata	events/default_cursor.h	/^static const unsigned char default_cdata[] = {$/;"	v
default_cmask	events/default_cursor.h	/^static const unsigned char default_cmask[] = {$/;"	v
default_mflags	stdlib/SDL_malloc.c	/^    flag_t default_mflags;$/;"	m	struct:malloc_params	file:
degToRad	render/psp/SDL_render_psp.c	723;"	d	file:
deltaXOffset	video/cocoa/SDL_cocoamouse.h	/^    int deltaXOffset;$/;"	m	struct:__anon40
deltaYOffset	video/cocoa/SDL_cocoamouse.h	/^    int deltaYOffset;$/;"	m	struct:__anon40
demand_only	audio/SDL_sysaudio.h	/^    int demand_only;  \/* 1==request explicitly, or it won't be available. *\/$/;"	m	struct:AudioBootStrap
depth	video/x11/SDL_x11modes.h	/^    int depth;$/;"	m	struct:__anon18
depth_size	video/SDL_sysvideo.h	/^        int depth_size;$/;"	m	struct:SDL_VideoDevice::__anon27
desc	audio/SDL_sysaudio.h	/^    const char *desc;$/;"	m	struct:AudioBootStrap
desc	audio/SDL_sysaudio.h	/^    const char *desc;$/;"	m	struct:SDL_AudioDriver
desc	video/SDL_sysvideo.h	/^    const char *desc;$/;"	m	struct:VideoBootStrap
desktop_mode	video/SDL_sysvideo.h	/^    SDL_DisplayMode desktop_mode;$/;"	m	struct:SDL_VideoDisplay
destroy_mspace	stdlib/SDL_malloc.c	/^destroy_mspace(mspace msp)$/;"	f
destructor	thread/SDL_thread_c.h	/^        void (*destructor)(void*);$/;"	m	struct:__anon1::__anon2
detailed_timings	video/x11/edid.h	/^    DetailedTiming	detailed_timings[4];	\/* If monitor has a preferred$/;"	m	struct:MonitorInfo
dev	audio/nas/SDL_nasaudio.h	/^    AuDeviceID dev;$/;"	m	struct:SDL_PrivateAudioData
dev	audio/sndio/SDL_sndioaudio.h	/^    struct sio_hdl *dev;$/;"	m	struct:SDL_PrivateAudioData	typeref:struct:SDL_PrivateAudioData::sio_hdl
dev	haptic/darwin/SDL_syshaptic.c	/^    io_service_t dev;           \/* Node we use to create the device. *\/$/;"	m	struct:__anon99	file:
devId	audio/coreaudio/SDL_coreaudio.c	/^    AudioDeviceID devId;$/;"	m	struct:__anon109	file:
dev_zero_fd	stdlib/SDL_malloc.c	/^static int dev_zero_fd = -1;    \/* Cached file descriptor for \/dev\/zero. *\/$/;"	v	file:
devdata	video/directfb/SDL_DirectFB_events.c	/^    DFB_DeviceData *devdata;$/;"	m	struct:_cb_data	file:
device	haptic/darwin/SDL_syshaptic.c	/^    FFDeviceObjectReference device;     \/* Hardware device. *\/$/;"	m	struct:haptic_hwdata	file:
device	haptic/windows/SDL_syshaptic.c	/^    LPDIRECTINPUTDEVICE8 device;$/;"	m	struct:haptic_hwdata	file:
device	render/direct3d/SDL_render_d3d.c	/^    IDirect3DDevice9 *device;$/;"	m	struct:__anon94	file:
device	video/SDL_sysvideo.h	/^    SDL_VideoDevice *device;$/;"	m	struct:SDL_VideoDisplay
deviceID	audio/coreaudio/SDL_coreaudio.h	/^    AudioDeviceID deviceID;$/;"	m	struct:SDL_PrivateAudioData
device_instance	joystick/linux/SDL_sysjoystick.c	/^    int device_instance;$/;"	m	struct:SDL_joylist_item	file:
deviceno	audio/qsa/SDL_qsa_audio.c	/^    int deviceno;$/;"	m	struct:_QSA_Device	file:
deviceno	audio/qsa/SDL_qsa_audio.h	/^    int deviceno;$/;"	m	struct:SDL_PrivateAudioData
devname	audio/directsound/SDL_directsound.c	/^    const char *devname;$/;"	m	struct:FindDevGUIDData	file:
devnum	joystick/linux/SDL_sysjoystick.c	/^    dev_t devnum;$/;"	m	struct:SDL_joylist_item	file:
devsettings	audio/paudio/SDL_paudio.c	/^static char devsettings[][3] = {$/;"	v	file:
dfDIJoystick2	joystick/windows/SDL_dxjoystick.c	/^DIOBJECTDATAFORMAT dfDIJoystick2[] = {$/;"	v
dfb	video/directfb/SDL_DirectFB_video.c	/^    DFBSurfacePixelFormat dfb;$/;"	m	struct:__anon46	file:
dfb	video/directfb/SDL_DirectFB_video.h	/^    IDirectFB           *dfb;$/;"	m	struct:_DFB_DeviceData
dfbwin	video/directfb/SDL_DirectFB_window.h	/^    IDirectFBWindow         *dfbwin;$/;"	m	struct:_DFB_WindowData
dialog_height	video/x11/SDL_x11messagebox.c	/^    int dialog_height;                  \/* Dialog box height. *\/$/;"	m	struct:SDL_MessageBoxDataX11	file:
dialog_width	video/x11/SDL_x11messagebox.c	/^    int dialog_width;                   \/* Dialog box width. *\/$/;"	m	struct:SDL_MessageBoxDataX11	file:
digital	video/x11/edid.h	/^	} digital;$/;"	m	union:DetailedTiming::__anon12	typeref:struct:DetailedTiming::__anon12::__anon14
digital	video/x11/edid.h	/^	} digital;$/;"	m	union:MonitorInfo::__anon15	typeref:struct:MonitorInfo::__anon15::__anon16
digital_sync	video/x11/edid.h	/^    int		digital_sync;$/;"	m	struct:DetailedTiming
dinput	haptic/windows/SDL_syshaptic.c	/^static LPDIRECTINPUT8 dinput = NULL;$/;"	v	file:
dinput	joystick/windows/SDL_dxjoystick.c	/^static LPDIRECTINPUT8 dinput = NULL;$/;"	v	file:
directfb_major_version	video/directfb/SDL_DirectFB_dyn.c	/^    const unsigned int *directfb_major_version;$/;"	m	struct:_SDL_DirectFB_Symbols	file:
directfb_micro_version	video/directfb/SDL_DirectFB_dyn.c	/^    const unsigned int *directfb_micro_version;$/;"	m	struct:_SDL_DirectFB_Symbols	file:
directfb_minor_version	video/directfb/SDL_DirectFB_dyn.c	/^    const unsigned int *directfb_minor_version;$/;"	m	struct:_SDL_DirectFB_Symbols	file:
disable_contiguous	stdlib/SDL_malloc.c	2122;"	d	file:
disable_lock	stdlib/SDL_malloc.c	2115;"	d	file:
disable_mmap	stdlib/SDL_malloc.c	2119;"	d	file:
display	render/SDL_yuv_sw_c.h	/^    SDL_Surface *display;$/;"	m	struct:SDL_SW_YUVTexture
display	video/cocoa/SDL_cocoamodes.h	/^    CGDirectDisplayID display;$/;"	m	struct:__anon41
display	video/directfb/SDL_DirectFB_render.c	/^    SDL_VideoDisplay *display;      \/* only for yuv textures *\/$/;"	m	struct:__anon49	file:
display	video/psp/SDL_pspgl_c.h	/^        EGLDisplay display;$/;"	m	struct:SDL_GLDriverData
display	video/x11/SDL_x11messagebox.c	/^    Display *display;$/;"	m	struct:SDL_MessageBoxDataX11	file:
display	video/x11/SDL_x11video.h	/^    Display *display;$/;"	m	struct:SDL_VideoData
displayListAvail	render/psp/SDL_render_psp.c	/^    SDL_bool        displayListAvail ;$/;"	m	struct:__anon76	file:
display_modes	video/SDL_sysvideo.h	/^    SDL_DisplayMode *display_modes;$/;"	m	struct:SDL_VideoDisplay
displays	video/SDL_sysvideo.h	/^    SDL_VideoDisplay *displays;$/;"	m	struct:SDL_VideoDevice
dlcalloc	stdlib/SDL_malloc.c	/^dlcalloc(size_t n_elements, size_t elem_size)$/;"	f
dlcalloc	stdlib/SDL_malloc.c	709;"	d	file:
dlfree	stdlib/SDL_malloc.c	/^dlfree(void *mem)$/;"	f
dlfree	stdlib/SDL_malloc.c	710;"	d	file:
dlgVer	video/windows/SDL_windowsmessagebox.c	/^    WORD dlgVer;$/;"	m	struct:__anon52	file:
dlindependent_calloc	stdlib/SDL_malloc.c	/^dlindependent_calloc(size_t n_elements, size_t elem_size, void *chunks[])$/;"	f
dlindependent_calloc	stdlib/SDL_malloc.c	723;"	d	file:
dlindependent_comalloc	stdlib/SDL_malloc.c	/^dlindependent_comalloc(size_t n_elements, size_t sizes[], void *chunks[])$/;"	f
dlindependent_comalloc	stdlib/SDL_malloc.c	724;"	d	file:
dll_handle	video/SDL_sysvideo.h	/^        void *dll_handle;$/;"	m	struct:SDL_VideoDevice::__anon27
dlmallinfo	stdlib/SDL_malloc.c	/^dlmallinfo(void)$/;"	f
dlmallinfo	stdlib/SDL_malloc.c	716;"	d	file:
dlmalloc	stdlib/SDL_malloc.c	/^dlmalloc(size_t bytes)$/;"	f
dlmalloc	stdlib/SDL_malloc.c	711;"	d	file:
dlmalloc_footprint	stdlib/SDL_malloc.c	/^dlmalloc_footprint(void)$/;"	f
dlmalloc_footprint	stdlib/SDL_malloc.c	721;"	d	file:
dlmalloc_max_footprint	stdlib/SDL_malloc.c	/^dlmalloc_max_footprint(void)$/;"	f
dlmalloc_max_footprint	stdlib/SDL_malloc.c	722;"	d	file:
dlmalloc_stats	stdlib/SDL_malloc.c	/^dlmalloc_stats()$/;"	f
dlmalloc_stats	stdlib/SDL_malloc.c	719;"	d	file:
dlmalloc_trim	stdlib/SDL_malloc.c	/^dlmalloc_trim(size_t pad)$/;"	f
dlmalloc_trim	stdlib/SDL_malloc.c	718;"	d	file:
dlmalloc_usable_size	stdlib/SDL_malloc.c	/^dlmalloc_usable_size(void *mem)$/;"	f
dlmalloc_usable_size	stdlib/SDL_malloc.c	720;"	d	file:
dlmallopt	stdlib/SDL_malloc.c	/^dlmallopt(int param_number, int value)$/;"	f
dlmallopt	stdlib/SDL_malloc.c	717;"	d	file:
dlmemalign	stdlib/SDL_malloc.c	/^dlmemalign(size_t alignment, size_t bytes)$/;"	f
dlmemalign	stdlib/SDL_malloc.c	712;"	d	file:
dlpvalloc	stdlib/SDL_malloc.c	/^dlpvalloc(size_t bytes)$/;"	f
dlpvalloc	stdlib/SDL_malloc.c	715;"	d	file:
dlrealloc	stdlib/SDL_malloc.c	/^dlrealloc(void *oldmem, size_t bytes)$/;"	f
dlrealloc	stdlib/SDL_malloc.c	713;"	d	file:
dlsym	video/x11/SDL_x11opengles.c	60;"	d	file:
dlsym	video/x11/SDL_x11opengles.h	31;"	d
dlvalloc	stdlib/SDL_malloc.c	/^dlvalloc(size_t bytes)$/;"	f
dlvalloc	stdlib/SDL_malloc.c	714;"	d	file:
doLeft	stdlib/SDL_qsort.c	123;"	d	file:
doRight	stdlib/SDL_qsort.c	124;"	d	file:
do_check_any_chunk	stdlib/SDL_malloc.c	/^do_check_any_chunk(mstate m, mchunkptr p)$/;"	f	file:
do_check_free_chunk	stdlib/SDL_malloc.c	/^do_check_free_chunk(mstate m, mchunkptr p)$/;"	f	file:
do_check_inuse_chunk	stdlib/SDL_malloc.c	/^do_check_inuse_chunk(mstate m, mchunkptr p)$/;"	f	file:
do_check_malloc_state	stdlib/SDL_malloc.c	/^do_check_malloc_state(mstate m)$/;"	f	file:
do_check_malloced_chunk	stdlib/SDL_malloc.c	/^do_check_malloced_chunk(mstate m, void *mem, size_t s)$/;"	f	file:
do_check_mmapped_chunk	stdlib/SDL_malloc.c	/^do_check_mmapped_chunk(mstate m, mchunkptr p)$/;"	f	file:
do_check_smallbin	stdlib/SDL_malloc.c	/^do_check_smallbin(mstate m, bindex_t i)$/;"	f	file:
do_check_top_chunk	stdlib/SDL_malloc.c	/^do_check_top_chunk(mstate m, mchunkptr p)$/;"	f	file:
do_check_tree	stdlib/SDL_malloc.c	/^do_check_tree(mstate m, tchunkptr t)$/;"	f	file:
do_check_treebin	stdlib/SDL_malloc.c	/^do_check_treebin(mstate m, bindex_t i)$/;"	f	file:
do_lowercase	stdlib/SDL_string.c	/^    SDL_bool do_lowercase;$/;"	m	struct:__anon4	file:
dollarDifference	events/SDL_gesture.c	/^static float dollarDifference(SDL_FloatPoint* points,SDL_FloatPoint* templ,float ang)$/;"	f	file:
dollarNormalize	events/SDL_gesture.c	/^static int dollarNormalize(const SDL_DollarPath *path,SDL_FloatPoint *points)$/;"	f	file:
dollarPath	events/SDL_gesture.c	/^    SDL_DollarPath dollarPath;$/;"	m	struct:__anon64	file:
dollarRecognize	events/SDL_gesture.c	/^static float dollarRecognize(const SDL_DollarPath *path,int *bestTempl,SDL_GestureTouch* touch)$/;"	f	file:
dollarTemplate	events/SDL_gesture.c	/^    SDL_DollarTemplate *dollarTemplate;$/;"	m	struct:__anon64	file:
double_buffer	video/SDL_sysvideo.h	/^        int double_buffer;$/;"	m	struct:SDL_VideoDevice::__anon27
downleft	video/SDL_shape_internals.h	/^	struct SDL_ShapeTree *upleft,*upright,*downleft,*downright;$/;"	m	struct:__anon31	typeref:struct:__anon31::
downright	video/SDL_shape_internals.h	/^	struct SDL_ShapeTree *upleft,*upright,*downleft,*downright;$/;"	m	struct:__anon31	typeref:struct:__anon31::
dp_h	libm/e_pow.c	/^       bp[] = { 1.0, 1.5, }, dp_h[] = {$/;"	v	file:
dp_l	libm/e_pow.c	/^         dp_l[] = {$/;"	v	file:
drawFlags	video/directfb/SDL_DirectFB_render.c	/^    DFBSurfaceDrawingFlags drawFlags;$/;"	m	struct:__anon48	file:
driver_loaded	video/SDL_sysvideo.h	/^        int driver_loaded;$/;"	m	struct:SDL_VideoDevice::__anon27
driver_path	video/SDL_sysvideo.h	/^        char driver_path[256];$/;"	m	struct:SDL_VideoDevice::__anon27
driverdata	events/SDL_mouse_c.h	/^    void *driverdata;$/;"	m	struct:SDL_Cursor
driverdata	events/SDL_mouse_c.h	/^    void *driverdata;$/;"	m	struct:__anon65
driverdata	render/SDL_sysrender.h	/^    void *driverdata;           \/**< Driver specific texture representation *\/$/;"	m	struct:SDL_Texture
driverdata	render/SDL_sysrender.h	/^    void *driverdata;$/;"	m	struct:SDL_Renderer
driverdata	video/SDL_sysvideo.h	/^    void *driverdata;$/;"	m	struct:SDL_VideoDevice
driverdata	video/SDL_sysvideo.h	/^    void *driverdata;$/;"	m	struct:SDL_VideoDisplay
driverdata	video/SDL_sysvideo.h	/^    void *driverdata;$/;"	m	struct:SDL_Window
driverdata	video/SDL_sysvideo.h	/^    void *driverdata;$/;"	m	struct:SDL_WindowShaper
dsc_product_name	video/x11/edid.h	/^    char		dsc_product_name[14];$/;"	m	struct:MonitorInfo
dsc_serial_number	video/x11/edid.h	/^    char		dsc_serial_number[14];$/;"	m	struct:MonitorInfo
dsc_string	video/x11/edid.h	/^    char		dsc_string[14];		\/* Unspecified ASCII data *\/$/;"	m	struct:MonitorInfo
dst	video/SDL_blit.h	/^    SDL_Surface *dst;$/;"	m	struct:SDL_BlitMap
dst	video/SDL_blit.h	/^    Uint8 *dst;$/;"	m	struct:__anon37
dstB	video/SDL_blit_N.c	/^    Uint32 dstR, dstG, dstB;$/;"	m	struct:blit_table	file:
dstG	video/SDL_blit_N.c	/^    Uint32 dstR, dstG, dstB;$/;"	m	struct:blit_table	file:
dstR	video/SDL_blit_N.c	/^    Uint32 dstR, dstG, dstB;$/;"	m	struct:blit_table	file:
dst_fmt	audio/SDL_audio_c.h	/^    SDL_AudioFormat dst_fmt;$/;"	m	struct:__anon112
dst_fmt	stdlib/SDL_iconv.c	/^    int dst_fmt;$/;"	m	struct:_SDL_iconv_t	file:
dst_fmt	video/SDL_blit.h	/^    SDL_PixelFormat *dst_fmt;$/;"	m	struct:__anon37
dst_format	video/SDL_blit.h	/^    Uint32 dst_format;$/;"	m	struct:__anon38
dst_h	video/SDL_blit.h	/^    int dst_w, dst_h;$/;"	m	struct:__anon37
dst_palette_version	video/SDL_blit.h	/^    Uint32 dst_palette_version;$/;"	m	struct:SDL_BlitMap
dst_pitch	video/SDL_blit.h	/^    int dst_pitch;$/;"	m	struct:__anon37
dst_skip	video/SDL_blit.h	/^    int dst_skip;$/;"	m	struct:__anon37
dst_w	video/SDL_blit.h	/^    int dst_w, dst_h;$/;"	m	struct:__anon37
dstbpp	video/SDL_blit_N.c	/^    int dstbpp;$/;"	m	struct:blit_table	file:
dump_monitor_info	video/x11/edid-parse.c	/^dump_monitor_info (MonitorInfo *info)$/;"	f
dup_chans_1_to_2	audio/SDL_audiocvt.c	291;"	d	file:
dup_chans_1_to_2	audio/SDL_audiocvt.c	315;"	d	file:
dv	stdlib/SDL_malloc.c	/^    mchunkptr dv;$/;"	m	struct:malloc_state	file:
dvsize	stdlib/SDL_malloc.c	/^    size_t dvsize;$/;"	m	struct:malloc_state	file:
dwExtraInfo	video/windows/SDL_windowsvideo.h	/^    ULONG_PTR dwExtraInfo;$/;"	m	struct:_TOUCHINPUT
dwFlags	thread/windows/SDL_systhread.c	/^    DWORD dwFlags; \/* reserved for future use, must be zero *\/$/;"	m	struct:tagTHREADNAME_INFO	file:
dwFlags	video/windows/SDL_windowsvideo.h	/^    DWORD     dwFlags;$/;"	m	struct:_TOUCHINPUT
dwID	video/windows/SDL_windowsvideo.h	/^    DWORD     dwID;$/;"	m	struct:_TOUCHINPUT
dwMask	video/windows/SDL_windowsvideo.h	/^    DWORD     dwMask;$/;"	m	struct:_TOUCHINPUT
dwNumMsgBuf	video/windows/SDL_windowsvideo.h	/^    DWORD dwNumMsgBuf;$/;"	m	struct:tagINPUTCONTEXT2
dwPacketNumber	joystick/windows/SDL_dxjoystick_c.h	/^    DWORD dwPacketNumber;$/;"	m	struct:__anon73
dwPaddingReserved	joystick/windows/SDL_dxjoystick_c.h	/^    DWORD dwPaddingReserved;$/;"	m	struct:__anon72
dwReserve	video/windows/SDL_windowsvideo.h	/^    DWORD dwReserve[3];$/;"	m	struct:tagINPUTCONTEXT2
dwThreadID	thread/windows/SDL_systhread.c	/^    DWORD dwThreadID; \/* thread ID (-1=caller thread) *\/$/;"	m	struct:tagTHREADNAME_INFO	file:
dwTime	video/windows/SDL_windowsvideo.h	/^    DWORD     dwTime;$/;"	m	struct:_TOUCHINPUT
dwType	thread/windows/SDL_systhread.c	/^    DWORD dwType; \/* must be 0x1000 *\/$/;"	m	struct:tagTHREADNAME_INFO	file:
dx	joystick/SDL_sysjoystick.h	/^        int dx;$/;"	m	struct:_SDL_Joystick::balldelta
dxdevice	joystick/windows/SDL_dxjoystick.c	/^    DIDEVICEINSTANCE dxdevice;$/;"	m	struct:JoyStick_DeviceData_	file:
dy	joystick/SDL_sysjoystick.h	/^        int dy;$/;"	m	struct:_SDL_Joystick::balldelta
effect	haptic/SDL_syshaptic.h	/^    SDL_HapticEffect effect;    \/* The current event *\/$/;"	m	struct:haptic_effect
effect	haptic/darwin/SDL_syshaptic.c	/^    struct FFEFFECT effect;     \/* Hardware effect. *\/$/;"	m	struct:haptic_hweffect	typeref:struct:haptic_hweffect::FFEFFECT	file:
effect	haptic/linux/SDL_syshaptic.c	/^    struct ff_effect effect;    \/* The linux kernel effect structure. *\/$/;"	m	struct:haptic_hweffect	typeref:struct:haptic_hweffect::ff_effect	file:
effect	haptic/windows/SDL_syshaptic.c	/^    DIEFFECT effect;$/;"	m	struct:haptic_hweffect	file:
effects	haptic/SDL_syshaptic.h	/^    struct haptic_effect *effects;      \/* Allocated effects *\/$/;"	m	struct:_SDL_Haptic	typeref:struct:_SDL_Haptic::haptic_effect
eglChooseConfig	video/x11/SDL_x11opengles.h	/^      EGLBoolean(*eglChooseConfig) (EGLDisplay dpy,$/;"	m	struct:SDL_PrivateGLESData
eglCreateContext	video/x11/SDL_x11opengles.h	/^      EGLContext(*eglCreateContext) (EGLDisplay dpy,$/;"	m	struct:SDL_PrivateGLESData
eglCreateWindowSurface	video/x11/SDL_x11opengles.h	/^      EGLSurface(*eglCreateWindowSurface) (EGLDisplay dpy,$/;"	m	struct:SDL_PrivateGLESData
eglDestroyContext	video/x11/SDL_x11opengles.h	/^      EGLBoolean(*eglDestroyContext) (EGLDisplay dpy, EGLContext ctx);$/;"	m	struct:SDL_PrivateGLESData
eglDestroySurface	video/x11/SDL_x11opengles.h	/^      EGLBoolean(*eglDestroySurface) (EGLDisplay dpy, EGLSurface surface);$/;"	m	struct:SDL_PrivateGLESData
eglGetConfigAttrib	video/x11/SDL_x11opengles.h	/^      EGLBoolean(*eglGetConfigAttrib) (EGLDisplay dpy, EGLConfig config,$/;"	m	struct:SDL_PrivateGLESData
eglGetDisplay	video/x11/SDL_x11opengles.h	/^      EGLDisplay(*eglGetDisplay) (NativeDisplayType display);$/;"	m	struct:SDL_PrivateGLESData
eglGetProcAddress	video/x11/SDL_x11opengles.h	/^    void *(*eglGetProcAddress) (const char * procName);$/;"	m	struct:SDL_PrivateGLESData
eglInitialize	video/x11/SDL_x11opengles.h	/^      EGLBoolean(*eglInitialize) (EGLDisplay dpy, EGLint * major,$/;"	m	struct:SDL_PrivateGLESData
eglMakeCurrent	video/x11/SDL_x11opengles.h	/^      EGLBoolean(*eglMakeCurrent) (EGLDisplay dpy, EGLSurface draw,$/;"	m	struct:SDL_PrivateGLESData
eglQueryString	video/x11/SDL_x11opengles.h	/^    const char *(*eglQueryString) (EGLDisplay dpy, EGLint name);$/;"	m	struct:SDL_PrivateGLESData
eglSwapBuffers	video/x11/SDL_x11opengles.h	/^      EGLBoolean(*eglSwapBuffers) (EGLDisplay dpy, EGLSurface draw);$/;"	m	struct:SDL_PrivateGLESData
eglSwapInterval	video/x11/SDL_x11opengles.h	/^      EGLBoolean(*eglSwapInterval) (EGLDisplay dpy, EGLint interval);$/;"	m	struct:SDL_PrivateGLESData
eglTerminate	video/x11/SDL_x11opengles.h	/^      EGLBoolean(*eglTerminate) (EGLDisplay dpy);$/;"	m	struct:SDL_PrivateGLESData
egl_config	video/x11/SDL_x11opengles.h	/^    EGLConfig egl_config;$/;"	m	struct:SDL_PrivateGLESData
egl_context	video/x11/SDL_x11opengles.h	/^    EGLContext egl_context;     \/* Current GLES context *\/$/;"	m	struct:SDL_PrivateGLESData
egl_display	video/pandora/SDL_pandora.h	/^    EGLDisplay egl_display;     \/* OpenGL ES display connection           *\/$/;"	m	struct:SDL_VideoData
egl_display	video/x11/SDL_x11opengles.h	/^    EGLDisplay egl_display;$/;"	m	struct:SDL_PrivateGLESData
egl_dll_handle	video/x11/SDL_x11opengles.h	/^    void *egl_dll_handle;$/;"	m	struct:SDL_PrivateGLESData
egl_initialized	video/pandora/SDL_pandora.h	/^    SDL_bool egl_initialized;   \/* OpenGL ES device initialization status *\/$/;"	m	struct:SDL_VideoData
egl_initialized	video/psp/SDL_pspvideo.h	/^    SDL_bool egl_initialized;   \/* OpenGL ES device initialization status *\/$/;"	m	struct:SDL_VideoData
egl_refcount	video/pandora/SDL_pandora.h	/^    uint32_t egl_refcount;      \/* OpenGL ES reference count              *\/$/;"	m	struct:SDL_VideoData
egl_refcount	video/psp/SDL_pspvideo.h	/^    uint32_t egl_refcount;      \/* OpenGL ES reference count              *\/$/;"	m	struct:SDL_VideoData
egl_surface	video/x11/SDL_x11opengles.h	/^    EGLSurface egl_surface;$/;"	m	struct:SDL_PrivateGLESData
egl_swapinterval	video/x11/SDL_x11opengles.h	/^    int egl_swapinterval;$/;"	m	struct:SDL_PrivateGLESData
egl_visualinfo	video/x11/SDL_x11opengles.h	/^    XVisualInfo *egl_visualinfo;$/;"	m	struct:SDL_PrivateGLESData
elements	joystick/darwin/SDL_sysjoystick_c.h	/^    long elements;              \/* number of total elements (should be total of above) (calculated, not reported by device) *\/$/;"	m	struct:joystick_hwdata
emms	render/mmx.h	629;"	d
emms	render/mmx.h	637;"	d
enableSeparateAlphaBlend	render/direct3d/SDL_render_d3d.c	/^    SDL_bool enableSeparateAlphaBlend;$/;"	m	struct:__anon94	file:
enable_lock	stdlib/SDL_malloc.c	2114;"	d	file:
enable_mmap	stdlib/SDL_malloc.c	2118;"	d	file:
enabled	audio/SDL_sysaudio.h	/^    int enabled;$/;"	m	struct:SDL_AudioDevice
encoding	audio/SDL_wave.h	/^    Uint16 encoding;$/;"	m	struct:WaveFMT
encodings	stdlib/SDL_iconv.c	/^} encodings[] = {$/;"	v	typeref:struct:__anon7	file:
enterLock	atomic/SDL_atomic.c	/^enterLock(void *a)$/;"	f	file:
errbuf	thread/SDL_thread_c.h	/^    SDL_error errbuf;$/;"	m	struct:SDL_Thread
error	SDL_error_c.h	/^    int error;$/;"	m	struct:SDL_error
errorBase	video/x11/SDL_x11opengl.c	/^static int errorBase = 0;$/;"	v	file:
errorBase	video/x11/SDL_x11opengl.h	/^    int errorBase, eventBase;$/;"	m	struct:SDL_GLDriverData
error_messages	render/opengl/SDL_render_gl.c	/^    char **error_messages;$/;"	m	struct:__anon90	file:
errors	render/opengl/SDL_render_gl.c	/^    int errors;$/;"	m	struct:__anon90	file:
esd_functions	audio/esd/SDL_esdaudio.c	/^} const esd_functions[] = {$/;"	v	file:
esd_handle	audio/esd/SDL_esdaudio.c	/^static void *esd_handle = NULL;$/;"	v	file:
esd_library	audio/esd/SDL_esdaudio.c	/^static const char *esd_library = SDL_AUDIO_DRIVER_ESD_DYNAMIC;$/;"	v	file:
established	video/x11/edid.h	/^    Timing		established[24];	\/* Terminated by 0x0x0 *\/$/;"	m	struct:MonitorInfo
event	events/SDL_events.c	/^    SDL_Event event;$/;"	m	struct:_SDL_EventEntry	file:
event	video/x11/SDL_x11events.c	/^    XEvent *event;$/;"	m	struct:KeyRepeatCheckData	file:
eventBase	video/x11/SDL_x11opengl.h	/^    int errorBase, eventBase;$/;"	m	struct:SDL_GLDriverData
event_handler	audio/nas/SDL_nasaudio.c	/^event_handler(AuServer * aud, AuEvent * ev, AuEventHandlerRec * hnd)$/;"	f	file:
event_mask	video/x11/SDL_x11messagebox.c	/^    long event_mask;$/;"	m	struct:SDL_MessageBoxDataX11	file:
event_sem	video/psp/SDL_pspevents.c	/^static SDL_sem *event_sem = NULL;$/;"	v	file:
eventbuffer	video/directfb/SDL_DirectFB_window.h	/^    IDirectFBEventBuffer    *eventbuffer;$/;"	m	struct:_DFB_WindowData
events	video/directfb/SDL_DirectFB_video.h	/^    IDirectFBEventBuffer *events;$/;"	m	struct:_DFB_DeviceData
exStyle	video/windows/SDL_windowsmessagebox.c	/^    DWORD exStyle;$/;"	m	struct:__anon52	file:
exStyle	video/windows/SDL_windowsmessagebox.c	/^    DWORD exStyle;$/;"	m	struct:__anon53	file:
fLastAccelerometer	core/android/SDL_android.c	/^static float fLastAccelerometer[3];$/;"	v	file:
fOpen	video/windows/SDL_windowsvideo.h	/^    BOOL fOpen;$/;"	m	struct:tagINPUTCONTEXT2
fabs	libm/math_private.h	36;"	d
fake_stream	audio/SDL_sysaudio.h	/^    Uint8 *fake_stream;$/;"	m	struct:SDL_AudioDevice
fbo	render/opengl/SDL_render_gl.c	/^    GL_FBOList *fbo;$/;"	m	struct:__anon92	file:
fbo	render/opengles/SDL_render_gles.c	/^    GLES_FBOList *fbo;$/;"	m	struct:__anon82	file:
fbo	render/opengles2/SDL_render_gles2.c	/^    GLES2_FBOList *fbo;$/;"	m	struct:GLES2_TextureData	file:
fd	haptic/linux/SDL_syshaptic.c	/^    int fd;                     \/* File descriptor of the device. *\/$/;"	m	struct:haptic_hwdata	file:
fd	joystick/bsd/SDL_sysjoystick.c	/^    int fd;$/;"	m	struct:joystick_hwdata	file:
fd	joystick/linux/SDL_sysjoystick_c.h	/^    int fd;$/;"	m	struct:joystick_hwdata
fd	stdlib/SDL_malloc.c	/^    struct malloc_chunk *fd;    \/* double links -- used only if free. *\/$/;"	m	struct:malloc_chunk	typeref:struct:malloc_chunk::malloc_chunk	file:
fd	stdlib/SDL_malloc.c	/^    struct malloc_tree_chunk *fd;$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
fdwConversion	video/windows/SDL_windowsvideo.h	/^    DWORD fdwConversion;$/;"	m	struct:tagINPUTCONTEXT2
fdwInit	video/windows/SDL_windowsvideo.h	/^    DWORD fdwInit;$/;"	m	struct:tagINPUTCONTEXT2
fdwSentence	video/windows/SDL_windowsvideo.h	/^    DWORD fdwSentence;$/;"	m	struct:tagINPUTCONTEXT2
ffservice	joystick/darwin/SDL_sysjoystick_c.h	/^    io_service_t ffservice;     \/* Interface for force feedback, 0 = no ff *\/$/;"	m	struct:joystick_hwdata
fieldEdit	video/cocoa/SDL_cocoavideo.h	/^    SDLTranslatorResponder *fieldEdit;$/;"	m	struct:SDL_VideoData
filename	joystick/sort_controllers.py	/^filename = "SDL_gamecontrollerdb.h"$/;"	v
filter	audio/SDL_audio_c.h	/^    SDL_AudioFilter filter;$/;"	m	struct:__anon112
filter	audio/SDL_audio_c.h	/^    SDL_AudioFilter filter;$/;"	m	struct:__anon113
finalize_audio_entry_points	audio/SDL_audio.c	/^finalize_audio_entry_points(void)$/;"	f	file:
findDevId	audio/coreaudio/SDL_coreaudio.c	/^findDevId(const char *name, AudioDeviceID devId, void *_data)$/;"	f	file:
find_device	audio/nas/SDL_nasaudio.c	/^find_device(_THIS, int nch)$/;"	f	file:
find_device_by_name	audio/coreaudio/SDL_coreaudio.c	/^find_device_by_name(_THIS, const char *devname, int iscapture)$/;"	f	file:
findname	audio/coreaudio/SDL_coreaudio.c	/^    const char *findname;$/;"	m	struct:__anon109	file:
fingers	events/SDL_touch_c.h	/^    SDL_Finger** fingers;$/;"	m	struct:SDL_Touch
first	stdlib/SDL_qsort.c	/^    char *first;$/;"	m	struct:__anon5	file:
firstAxis	joystick/darwin/SDL_sysjoystick_c.h	/^    recElement *firstAxis;$/;"	m	struct:joystick_hwdata
firstButton	joystick/darwin/SDL_sysjoystick_c.h	/^    recElement *firstButton;$/;"	m	struct:joystick_hwdata
firstHat	joystick/darwin/SDL_sysjoystick_c.h	/^    recElement *firstHat;$/;"	m	struct:joystick_hwdata
firstgl	video/directfb/SDL_DirectFB_opengl.c	/^    DirectFB_GLContext *firstgl;        \/* linked list *\/$/;"	m	struct:SDL_GLDriverData	file:
firstwin	video/directfb/SDL_DirectFB_video.h	/^    SDL_Window          *firstwin;$/;"	m	struct:_DFB_DeviceData
flag_t	stdlib/SDL_malloc.c	/^typedef unsigned int flag_t;    \/* The type of various bit flag sets *\/$/;"	t	file:
flags	video/SDL_blit.h	/^    int flags;$/;"	m	struct:__anon37
flags	video/SDL_blit.h	/^    int flags;$/;"	m	struct:__anon38
flags	video/SDL_sysvideo.h	/^        int flags;$/;"	m	struct:SDL_VideoDevice::__anon27
flags	video/SDL_sysvideo.h	/^    Uint32 flags;$/;"	m	struct:SDL_Window
flipflags	video/directfb/SDL_DirectFB_render.c	/^    DFBSurfaceFlipFlags flipflags;$/;"	m	struct:__anon48	file:
floor	libm/math_private.h	37;"	d
flow	audio/nas/SDL_nasaudio.h	/^    AuFlowID flow;$/;"	m	struct:SDL_PrivateAudioData
fm	stdlib/SDL_malloc.c	4391;"	d	file:
fmt	audio/SDL_audio_c.h	/^    SDL_AudioFormat fmt;$/;"	m	struct:__anon113
fnDirectSoundCaptureEnumerateW	audio/directsound/SDL_directsound.c	/^typedef HRESULT(WINAPI*fnDirectSoundCaptureEnumerateW)(LPDSENUMCALLBACKW,LPVOID);$/;"	t	file:
fnDirectSoundCreate8	audio/directsound/SDL_directsound.c	/^typedef HRESULT(WINAPI*fnDirectSoundCreate8)(LPGUID,LPDIRECTSOUND*,LPUNKNOWN);$/;"	t	file:
fnDirectSoundEnumerateW	audio/directsound/SDL_directsound.c	/^typedef HRESULT(WINAPI*fnDirectSoundEnumerateW)(LPDSENUMCALLBACKW, LPVOID);$/;"	t	file:
fname	haptic/linux/SDL_syshaptic.c	/^    char *fname;                \/* Dev path name (like \/dev\/input\/event1) *\/$/;"	m	struct:__anon98	file:
fname	haptic/linux/SDL_syshaptic.c	/^    char *fname;                \/* Points to the name in SDL_hapticlist. *\/$/;"	m	struct:haptic_hwdata	file:
fname	joystick/linux/SDL_sysjoystick_c.h	/^    char *fname;                \/* Used in haptic subsystem *\/$/;"	m	struct:joystick_hwdata
focus	events/SDL_keyboard.c	/^    SDL_Window *focus;$/;"	m	struct:SDL_Keyboard	file:
focus	events/SDL_mouse_c.h	/^    SDL_Window *focus;$/;"	m	struct:__anon65
font	video/directfb/SDL_DirectFB_WM.h	/^    char *font;$/;"	m	struct:_DFB_Theme
font	video/directfb/SDL_DirectFB_window.h	/^    IDirectFBFont           *font;$/;"	m	struct:_DFB_WindowData
font_color	video/directfb/SDL_DirectFB_WM.h	/^    DFBColor font_color;$/;"	m	struct:_DFB_Theme
font_set	video/x11/SDL_x11messagebox.c	/^    XFontSet font_set;                  \/* for UTF-8 systems *\/$/;"	m	struct:SDL_MessageBoxDataX11	file:
font_size	video/directfb/SDL_DirectFB_WM.h	/^    int font_size;$/;"	m	struct:_DFB_Theme
font_struct	video/x11/SDL_x11messagebox.c	/^    XFontStruct *font_struct;           \/* Latin1 (ASCII) fallback. *\/$/;"	m	struct:SDL_MessageBoxDataX11	file:
footprint	stdlib/SDL_malloc.c	/^    size_t footprint;$/;"	m	struct:malloc_state	file:
force_sign	stdlib/SDL_string.c	/^    SDL_bool force_sign;$/;"	m	struct:__anon4	file:
force_type	stdlib/SDL_string.c	/^    SDL_bool force_type;$/;"	m	struct:__anon4	file:
fordblks	stdlib/SDL_malloc.c	/^    MALLINFO_FIELD_TYPE fordblks;       \/* total free space *\/$/;"	m	struct:mallinfo	file:
format	render/SDL_sysrender.h	/^    Uint32 format;              \/**< The pixel format of the texture *\/$/;"	m	struct:SDL_Texture
format	render/SDL_yuv_sw_c.h	/^    Uint32 format;$/;"	m	struct:SDL_SW_YUVTexture
format	render/opengl/SDL_render_gl.c	/^    GLenum format;$/;"	m	struct:__anon92	file:
format	render/opengles/SDL_render_gles.c	/^    GLenum format;$/;"	m	struct:__anon82	file:
format	render/opengles2/SDL_shaders_gles2.h	/^    GLenum format;$/;"	m	struct:GLES2_ShaderInstance
format	render/psp/SDL_render_psp.c	/^    unsigned int        format;                             \/**< Image format - one of ::pgePixelFormat. *\/$/;"	m	struct:__anon77	file:
format	stdlib/SDL_iconv.c	/^    int format;$/;"	m	struct:__anon7	file:
format	video/directfb/SDL_DirectFB_render.c	/^    Uint32 format;$/;"	m	struct:__anon49	file:
format	video/x11/SDL_x11events.c	/^    int format, count;$/;"	m	struct:__anon20	file:
format_idx	audio/SDL_audio.c	/^static int format_idx;$/;"	v	file:
format_idx_sub	audio/SDL_audio.c	/^static int format_idx_sub;$/;"	v	file:
format_list	audio/SDL_audio.c	/^static SDL_AudioFormat format_list[NUM_FORMATS][NUM_FORMATS] = {$/;"	v	file:
formats	video/SDL_pixels.c	/^static SDL_PixelFormat *formats;$/;"	v	file:
formattype	render/opengl/SDL_render_gl.c	/^    GLenum formattype;$/;"	m	struct:__anon92	file:
formattype	render/opengles/SDL_render_gles.c	/^    GLenum formattype;$/;"	m	struct:__anon82	file:
found	audio/coreaudio/SDL_coreaudio.c	/^    int found;$/;"	m	struct:__anon109	file:
found	audio/directsound/SDL_directsound.c	/^    int found;$/;"	m	struct:FindDevGUIDData	file:
found	video/x11/SDL_x11events.c	/^    SDL_bool found;$/;"	m	struct:KeyRepeatCheckData	file:
frag_shader	render/opengl/SDL_shaders_gl.c	/^    GLhandleARB frag_shader;$/;"	m	struct:__anon89	file:
fragment_shader	render/opengles2/SDL_render_gles2.c	/^    GLES2_ShaderCacheEntry *fragment_shader;$/;"	m	struct:GLES2_ProgramCacheEntry	file:
fragsize	audio/sun/SDL_sunaudio.h	/^    int fragsize;               \/* The audio fragment size in samples *\/$/;"	m	struct:SDL_PrivateAudioData
frame_color	video/directfb/SDL_DirectFB_WM.h	/^    DFBColor frame_color;$/;"	m	struct:_DFB_Theme
frame_ticks	audio/arts/SDL_artsaudio.h	/^    float frame_ticks;$/;"	m	struct:SDL_PrivateAudioData
frame_ticks	audio/bsd/SDL_bsdaudio.h	/^    float frame_ticks;$/;"	m	struct:SDL_PrivateAudioData
frame_ticks	audio/esd/SDL_esdaudio.h	/^    float frame_ticks;$/;"	m	struct:SDL_PrivateAudioData
frame_ticks	audio/paudio/SDL_paudio.h	/^    float frame_ticks;$/;"	m	struct:SDL_PrivateAudioData
framebuffers	render/opengl/SDL_render_gl.c	/^    GL_FBOList *framebuffers;$/;"	m	struct:__anon90	file:
framebuffers	render/opengles/SDL_render_gles.c	/^    GLES_FBOList *framebuffers;$/;"	m	struct:__anon80	file:
framebuffers	render/opengles2/SDL_render_gles2.c	/^    GLES2_FBOList *framebuffers;$/;"	m	struct:GLES2_DriverContext	file:
free	events/SDL_events.c	/^    SDL_EventEntry *free;$/;"	m	struct:__anon60	file:
free	stdlib/SDL_malloc.c	638;"	d	file:
free	stdlib/SDL_qsort.c	71;"	d	file:
free	stdlib/SDL_qsort.c	73;"	d	file:
free	video/SDL_sysvideo.h	/^    void (*free) (_THIS);$/;"	m	struct:SDL_VideoDevice
free_bits_at_bottom	render/SDL_yuv_sw.c	/^free_bits_at_bottom(Uint32 a)$/;"	f	file:
free_device_list	audio/SDL_audio.c	/^free_device_list(char ***devices, int *devCount)$/;"	f	file:
freelist	timer/SDL_timer.c	/^    SDL_Timer * volatile freelist;$/;"	m	struct:__anon114	file:
frequency	audio/SDL_wave.h	/^    Uint32 frequency;           \/* One of 11025, 22050, or 44100 Hz *\/$/;"	m	struct:WaveFMT
frequency	audio/sun/SDL_sunaudio.h	/^    int frequency;              \/* The audio frequency in KHz *\/$/;"	m	struct:SDL_PrivateAudioData
frequency	video/x11/edid.h	/^    int frequency;$/;"	m	struct:Timing
fresh	joystick/linux/SDL_sysjoystick_c.h	/^    int fresh;$/;"	m	struct:joystick_hwdata
frontbuffer	render/psp/SDL_render_psp.c	/^    void*           frontbuffer ;$/;"	m	struct:__anon76	file:
fs	audio/fusionsound/SDL_fsaudio.h	/^    IFusionSound *fs;$/;"	m	struct:SDL_PrivateAudioData
fs_functions	audio/fusionsound/SDL_fsaudio.c	/^} fs_functions[] = {$/;"	v	typeref:struct:__anon108	file:
fs_handle	audio/fusionsound/SDL_fsaudio.c	/^static void *fs_handle = NULL;$/;"	v	file:
fs_library	audio/fusionsound/SDL_fsaudio.c	/^static const char *fs_library = SDL_AUDIO_DRIVER_FUSIONSOUND_DYNAMIC;$/;"	v	file:
fsmblks	stdlib/SDL_malloc.c	/^    MALLINFO_FIELD_TYPE fsmblks;        \/* always 0 *\/$/;"	m	struct:mallinfo	file:
fswindow	video/x11/SDL_x11window.h	/^    Window fswindow;  \/* used if we can't have the WM handle fullscreen. *\/$/;"	m	struct:__anon25
fullscreen_mode	video/SDL_sysvideo.h	/^    SDL_DisplayMode fullscreen_mode;$/;"	m	struct:SDL_Window
fullscreen_window	video/SDL_sysvideo.h	/^    SDL_Window *fullscreen_window;$/;"	m	struct:SDL_VideoDisplay
func	audio/arts/SDL_artsaudio.c	/^    void **func;$/;"	m	struct:__anon111	file:
func	audio/esd/SDL_esdaudio.c	/^    void **func;$/;"	m	struct:__anon110	file:
func	audio/fusionsound/SDL_fsaudio.c	/^    void **func;$/;"	m	struct:__anon108	file:
func	thread/SDL_thread.c	/^    int (SDLCALL * func) (void *);$/;"	m	struct:__anon3	file:
func	video/SDL_blit.h	/^    SDL_BlitFunc func;$/;"	m	struct:__anon38
fuzzerInvocationCounter	test/SDL_test_fuzzer.c	/^static int fuzzerInvocationCounter = 0;$/;"	v	file:
g	render/SDL_sysrender.h	/^    Uint8 r, g, b, a;                   \/**< Color for drawing operations values *\/$/;"	m	struct:SDL_Renderer
g	render/SDL_sysrender.h	/^    Uint8 r, g, b, a;           \/**< Texture modulation values *\/$/;"	m	struct:SDL_Texture
g	render/software/SDL_rotate.c	/^    Uint8 g;$/;"	m	struct:tColorRGBA	file:
g	video/SDL_blit.h	/^    Uint8 r, g, b, a;$/;"	m	struct:__anon37
g_MessageBoxFont	video/x11/SDL_x11messagebox.c	/^static const char g_MessageBoxFont[] = "-*-*-*-*-*-*-*-*-*-*-*-*-*-*";$/;"	v	file:
g_MessageBoxFontLatin1	video/x11/SDL_x11messagebox.c	/^static const char g_MessageBoxFontLatin1[] = "-*-*-medium-r-normal--0-120-*-*-p-0-iso8859-1";$/;"	v	file:
g_default_colors	video/x11/SDL_x11messagebox.c	/^static const SDL_MessageBoxColor g_default_colors[ SDL_MESSAGEBOX_COLOR_MAX ] = {$/;"	v	file:
gamma	video/SDL_sysvideo.h	/^    Uint16 *gamma;$/;"	m	struct:SDL_Window
gamma	video/x11/edid.h	/^    double		gamma;			\/* -1.0 if not specified *\/$/;"	m	struct:MonitorInfo
gc	video/x11/SDL_x11window.h	/^    GC gc;$/;"	m	struct:__anon25
generate_rowbytes	video/SDL_stretch.c	/^generate_rowbytes(int src_w, int dst_w, int bpp)$/;"	f	file:
generic_local_storage	thread/beos/SDL_systls.c	/^static SDL_bool generic_local_storage = SDL_FALSE;$/;"	v	file:
generic_local_storage	thread/pthread/SDL_systls.c	/^static SDL_bool generic_local_storage = SDL_FALSE;$/;"	v	file:
generic_local_storage	thread/windows/SDL_systls.c	/^static SDL_bool generic_local_storage = SDL_FALSE;$/;"	v	file:
getAppDelegateClassName	video/uikit/SDL_uikitappdelegate.h	/^+ (NSString *)getAppDelegateClassName;$/;"	v
getAppName	audio/pulseaudio/SDL_pulseaudio.c	/^getAppName(void)$/;"	f	file:
getBiggerCtype	audio/sdlgenaudiocvt.pl	/^sub getBiggerCtype {$/;"	s
getFloatToIntMult	audio/sdlgenaudiocvt.pl	/^sub getFloatToIntMult {$/;"	s
getIntToFloatDivBy	audio/sdlgenaudiocvt.pl	/^sub getIntToFloatDivBy {$/;"	s
getResamplerHashId	audio/sdlgenaudiocvt.pl	/^sub getResamplerHashId {$/;"	s
getSignFlipVal	audio/sdlgenaudiocvt.pl	/^sub getSignFlipVal {$/;"	s
getSwapFunc	audio/sdlgenaudiocvt.pl	/^sub getSwapFunc {$/;"	s
getTypeConvertHashId	audio/sdlgenaudiocvt.pl	/^sub getTypeConvertHashId {$/;"	s
get_audio_device	audio/SDL_audio.c	/^get_audio_device(SDL_AudioDeviceID id)$/;"	f	file:
get_audio_device	audio/alsa/SDL_alsa_audio.c	/^get_audio_device(int channels)$/;"	f	file:
get_bit	video/x11/edid-parse.c	/^get_bit (int in, int bit)$/;"	f	file:
get_bits	video/x11/edid-parse.c	/^get_bits (int in, int begin, int end)$/;"	f	file:
get_classname	video/x11/SDL_x11video.c	/^get_classname()$/;"	f	file:
get_dfb_surface	video/directfb/SDL_DirectFB_render.c	/^static inline IDirectFBSurface *get_dfb_surface(SDL_Window *window)$/;"	f	file:
get_dfb_window	video/directfb/SDL_DirectFB_render.c	/^static inline IDirectFBWindow *get_dfb_window(SDL_Window *window)$/;"	f	file:
get_foot	stdlib/SDL_malloc.c	1767;"	d	file:
get_mstate_for	stdlib/SDL_malloc.c	2482;"	d	file:
get_progname	audio/esd/SDL_esdaudio.c	/^get_progname(void)$/;"	f	file:
get_refresh_rate	video/bwindow/SDL_bmodes.cc	/^static float get_refresh_rate(display_mode &mode) {$/;"	f	file:
get_rgba	video/sdlgenblit.pl	/^sub get_rgba$/;"	s
get_visualinfo	video/x11/SDL_x11modes.c	/^get_visualinfo(Display * display, int screen, XVisualInfo * vinfo)$/;"	f	file:
getlocale	stdlib/SDL_iconv.c	/^getlocale(char *buffer, size_t bufsize)$/;"	f	file:
getpix_16	video/SDL_RLEaccel.c	/^getpix_16(Uint8 * srcbuf)$/;"	f	file:
getpix_24	video/SDL_RLEaccel.c	/^getpix_24(Uint8 * srcbuf)$/;"	f	file:
getpix_32	video/SDL_RLEaccel.c	/^getpix_32(Uint8 * srcbuf)$/;"	f	file:
getpix_8	video/SDL_RLEaccel.c	/^getpix_8(Uint8 * srcbuf)$/;"	f	file:
getpix_func	video/SDL_RLEaccel.c	/^typedef Uint32(*getpix_func) (Uint8 *);$/;"	t	file:
getpixes	video/SDL_RLEaccel.c	/^static const getpix_func getpixes[4] = {$/;"	v	file:
glActiveTextureARB	render/opengl/SDL_render_gl.c	/^    PFNGLACTIVETEXTUREARBPROC glActiveTextureARB;$/;"	m	struct:__anon90	file:
glAttachObjectARB	render/opengl/SDL_shaders_gl.c	/^    PFNGLATTACHOBJECTARBPROC glAttachObjectARB;$/;"	m	struct:GL_ShaderContext	file:
glBindFramebufferEXT	render/opengl/SDL_render_gl.c	/^    PFNGLBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;$/;"	m	struct:__anon90	file:
glCheckFramebufferStatusEXT	render/opengl/SDL_render_gl.c	/^    PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;$/;"	m	struct:__anon90	file:
glCompileShaderARB	render/opengl/SDL_shaders_gl.c	/^    PFNGLCOMPILESHADERARBPROC glCompileShaderARB;$/;"	m	struct:GL_ShaderContext	file:
glCreateProgramObjectARB	render/opengl/SDL_shaders_gl.c	/^    PFNGLCREATEPROGRAMOBJECTARBPROC glCreateProgramObjectARB;$/;"	m	struct:GL_ShaderContext	file:
glCreateShaderObjectARB	render/opengl/SDL_shaders_gl.c	/^    PFNGLCREATESHADEROBJECTARBPROC glCreateShaderObjectARB;$/;"	m	struct:GL_ShaderContext	file:
glDeleteFramebuffersEXT	render/opengl/SDL_render_gl.c	/^    PFNGLDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;$/;"	m	struct:__anon90	file:
glDeleteObjectARB	render/opengl/SDL_shaders_gl.c	/^    PFNGLDELETEOBJECTARBPROC glDeleteObjectARB;$/;"	m	struct:GL_ShaderContext	file:
glDrawTexiOES	render/opengles/SDL_render_gles.c	/^glDrawTexiOES(GLint x, GLint y, GLint z, GLint width, GLint height)$/;"	f
glFinish	video/directfb/SDL_DirectFB_opengl.c	/^    void (*glFinish) (void);$/;"	m	struct:SDL_GLDriverData	file:
glFlush	video/directfb/SDL_DirectFB_opengl.c	/^    void (*glFlush) (void);$/;"	m	struct:SDL_GLDriverData	file:
glFramebufferTexture2DEXT	render/opengl/SDL_render_gl.c	/^    PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;$/;"	m	struct:__anon90	file:
glGenFramebuffersEXT	render/opengl/SDL_render_gl.c	/^    PFNGLGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;$/;"	m	struct:__anon90	file:
glGetError	render/opengl/SDL_shaders_gl.c	/^    GLenum (*glGetError)(void);$/;"	m	struct:GL_ShaderContext	file:
glGetInfoLogARB	render/opengl/SDL_shaders_gl.c	/^    PFNGLGETINFOLOGARBPROC glGetInfoLogARB;$/;"	m	struct:GL_ShaderContext	file:
glGetObjectParameterivARB	render/opengl/SDL_shaders_gl.c	/^    PFNGLGETOBJECTPARAMETERIVARBPROC glGetObjectParameterivARB;$/;"	m	struct:GL_ShaderContext	file:
glGetUniformLocationARB	render/opengl/SDL_shaders_gl.c	/^    PFNGLGETUNIFORMLOCATIONARBPROC glGetUniformLocationARB;$/;"	m	struct:GL_ShaderContext	file:
glLinkProgramARB	render/opengl/SDL_shaders_gl.c	/^    PFNGLLINKPROGRAMARBPROC glLinkProgramARB;$/;"	m	struct:GL_ShaderContext	file:
glShaderSourceARB	render/opengl/SDL_shaders_gl.c	/^    PFNGLSHADERSOURCEARBPROC glShaderSourceARB;$/;"	m	struct:GL_ShaderContext	file:
glUniform1fARB	render/opengl/SDL_shaders_gl.c	/^    PFNGLUNIFORM1FARBPROC glUniform1fARB;$/;"	m	struct:GL_ShaderContext	file:
glUniform1iARB	render/opengl/SDL_shaders_gl.c	/^    PFNGLUNIFORM1IARBPROC glUniform1iARB;$/;"	m	struct:GL_ShaderContext	file:
glUseProgramObjectARB	render/opengl/SDL_shaders_gl.c	/^    PFNGLUSEPROGRAMOBJECTARBPROC glUseProgramObjectARB;$/;"	m	struct:GL_ShaderContext	file:
glXChooseVisual	video/x11/SDL_x11opengl.h	/^    XVisualInfo *(*glXChooseVisual) (Display*,int,int*);$/;"	m	struct:SDL_GLDriverData
glXCreateContext	video/x11/SDL_x11opengl.h	/^    GLXContext (*glXCreateContext) (Display*,XVisualInfo*,GLXContext,Bool);$/;"	m	struct:SDL_GLDriverData
glXDestroyContext	video/x11/SDL_x11opengl.h	/^    void (*glXDestroyContext) (Display*, GLXContext);$/;"	m	struct:SDL_GLDriverData
glXGetProcAddress	video/x11/SDL_x11opengl.h	/^    void *(*glXGetProcAddress) (const GLubyte*);$/;"	m	struct:SDL_GLDriverData
glXGetSwapIntervalMESA	video/x11/SDL_x11opengl.h	/^    int (*glXGetSwapIntervalMESA) (void);$/;"	m	struct:SDL_GLDriverData
glXMakeCurrent	video/x11/SDL_x11opengl.h	/^    Bool(*glXMakeCurrent) (Display*,GLXDrawable,GLXContext);$/;"	m	struct:SDL_GLDriverData
glXQueryDrawable	video/x11/SDL_x11opengl.h	/^    void (*glXQueryDrawable) (Display*,GLXDrawable,int,unsigned int*);$/;"	m	struct:SDL_GLDriverData
glXQueryExtension	video/x11/SDL_x11opengl.h	/^    Bool (*glXQueryExtension) (Display*,int*,int*);$/;"	m	struct:SDL_GLDriverData
glXSwapBuffers	video/x11/SDL_x11opengl.h	/^    void (*glXSwapBuffers) (Display*, GLXDrawable);$/;"	m	struct:SDL_GLDriverData
glXSwapIntervalEXT	video/x11/SDL_x11opengl.h	/^    void (*glXSwapIntervalEXT) (Display*,GLXDrawable,int);$/;"	m	struct:SDL_GLDriverData
glXSwapIntervalMESA	video/x11/SDL_x11opengl.h	/^    int (*glXSwapIntervalMESA) (int);$/;"	m	struct:SDL_GLDriverData
glXSwapIntervalSGI	video/x11/SDL_x11opengl.h	/^    int (*glXSwapIntervalSGI) (int);$/;"	m	struct:SDL_GLDriverData
gl_active	video/directfb/SDL_DirectFB_opengl.c	/^    int gl_active;              \/* to stop switching drivers while we have a valid context *\/$/;"	m	struct:SDL_GLDriverData	file:
gl_config	video/SDL_sysvideo.h	/^    } gl_config;$/;"	m	struct:SDL_VideoDevice	typeref:struct:SDL_VideoDevice::__anon27
gl_data	video/SDL_sysvideo.h	/^    struct SDL_GLDriverData *gl_data;$/;"	m	struct:SDL_VideoDevice	typeref:struct:SDL_VideoDevice::SDL_GLDriverData
gles_attributes	video/pandora/SDL_pandora.h	/^    EGLint gles_attributes[256];        \/* OpenGL ES attributes for context   *\/$/;"	m	struct:SDL_WindowData
gles_config	video/pandora/SDL_pandora.h	/^    EGLint gles_config;         \/* OpenGL ES configuration index      *\/$/;"	m	struct:SDL_WindowData
gles_configs	video/pandora/SDL_pandora.h	/^    EGLConfig gles_configs[32];$/;"	m	struct:SDL_WindowData
gles_context	video/pandora/SDL_pandora.h	/^    EGLContext gles_context;    \/* OpenGL ES context                  *\/$/;"	m	struct:SDL_WindowData
gles_data	video/SDL_sysvideo.h	/^    struct SDL_PrivateGLESData *gles_data;$/;"	m	struct:SDL_VideoDevice	typeref:struct:SDL_VideoDevice::SDL_PrivateGLESData
gles_surface	video/pandora/SDL_pandora.h	/^    EGLSurface gles_surface;    \/* OpenGL ES target rendering surface *\/$/;"	m	struct:SDL_WindowData
gm	stdlib/SDL_malloc.c	2105;"	d	file:
gpDeviceList	joystick/darwin/SDL_sysjoystick.c	/^static recDevice *gpDeviceList = NULL;$/;"	v	file:
grabbed_window	video/directfb/SDL_DirectFB_video.h	/^    SDL_Window          *grabbed_window;$/;"	m	struct:_DFB_DeviceData
gralayer	video/directfb/SDL_DirectFB_modes.c	/^    DFBDisplayLayerID gralayer[DFB_MAX_SCREENS];$/;"	m	struct:screen_callback_t	file:
granularity	stdlib/SDL_malloc.c	/^    size_t granularity;$/;"	m	struct:malloc_params	file:
granularity_align	stdlib/SDL_malloc.c	2134;"	d	file:
green_size	video/SDL_sysvideo.h	/^        int green_size;$/;"	m	struct:SDL_VideoDevice::__anon27
green_x	video/x11/edid.h	/^    double		green_x;$/;"	m	struct:MonitorInfo
green_y	video/x11/edid.h	/^    double		green_y;$/;"	m	struct:MonitorInfo
guid	audio/directsound/SDL_directsound.c	/^    GUID guid;$/;"	m	struct:FindDevGUIDData	file:
guid	joystick/SDL_gamecontroller.c	/^    SDL_JoystickGUID guid;$/;"	m	struct:_ControllerMapping_t	file:
guid	joystick/SDL_gamecontroller.c	/^    SDL_JoystickGUID guid;$/;"	m	struct:_SDL_ControllerMapping	file:
guid	joystick/darwin/SDL_sysjoystick_c.h	/^    SDL_JoystickGUID guid;$/;"	m	struct:joystick_hwdata
guid	joystick/linux/SDL_sysjoystick.c	/^    SDL_JoystickGUID guid;$/;"	m	struct:SDL_joylist_item	file:
guid	joystick/linux/SDL_sysjoystick_c.h	/^    SDL_JoystickGUID guid;$/;"	m	struct:joystick_hwdata
guid	joystick/windows/SDL_dxjoystick.c	/^    SDL_JoystickGUID guid;$/;"	m	struct:JoyStick_DeviceData_	file:
guid	joystick/windows/SDL_dxjoystick_c.h	/^    SDL_JoystickGUID guid;$/;"	m	struct:joystick_hwdata
h	render/SDL_sysrender.h	/^    float h;$/;"	m	struct:__anon75
h	render/SDL_sysrender.h	/^    int h;                      \/**< The height of the texture *\/$/;"	m	struct:SDL_Texture
h	render/SDL_yuv_sw_c.h	/^    int w, h;$/;"	m	struct:SDL_SW_YUVTexture
h	render/opengl/SDL_render_gl.c	/^    Uint32 w, h;$/;"	m	struct:GL_FBOList	file:
h	render/opengles/SDL_render_gles.c	/^   Uint32 w, h;$/;"	m	struct:GLES_FBOList	file:
h	render/opengles2/SDL_render_gles2.c	/^   Uint32 w, h;$/;"	m	struct:GLES2_FBOList	file:
h	video/SDL_sysvideo.h	/^    int w, h;$/;"	m	struct:SDL_Window
hCandInfo	video/windows/SDL_windowsvideo.h	/^    HIMCC hCandInfo;$/;"	m	struct:tagINPUTCONTEXT2
hCompStr	video/windows/SDL_windowsvideo.h	/^    HIMCC hCompStr;$/;"	m	struct:tagINPUTCONTEXT2
hGuideLine	video/windows/SDL_windowsvideo.h	/^    HIMCC hGuideLine;$/;"	m	struct:tagINPUTCONTEXT2
hMsgBuf	video/windows/SDL_windowsvideo.h	/^    HIMCC hMsgBuf;$/;"	m	struct:tagINPUTCONTEXT2
hNativeWnd	video/pandora/SDL_pandora.c	/^static NativeWindowType hNativeWnd = 0; \/* A handle to the window we will create. *\/$/;"	v	file:
hPredictor	audio/SDL_wave.c	/^    Uint8 hPredictor;$/;"	m	struct:MS_ADPCM_decodestate	file:
hPrivate	video/windows/SDL_windowsvideo.h	/^    HIMCC hPrivate;$/;"	m	struct:tagINPUTCONTEXT2
hSource	video/windows/SDL_windowsvideo.h	/^    HANDLE    hSource;$/;"	m	struct:_TOUCHINPUT
hWnd	video/windows/SDL_windowsvideo.h	/^    HWND hWnd;$/;"	m	struct:tagINPUTCONTEXT2
h_addr	video/x11/edid.h	/^    int		h_addr;$/;"	m	struct:DetailedTiming
h_blank	video/x11/edid.h	/^    int		h_blank;$/;"	m	struct:DetailedTiming
h_front_porch	video/x11/edid.h	/^    int		h_front_porch;$/;"	m	struct:DetailedTiming
h_sync	video/x11/edid.h	/^    int		h_sync;$/;"	m	struct:DetailedTiming
half	libm/e_rem_pio2.c	/^    half = 5.00000000000000000000e-01,  \/* 0x3FE00000, 0x00000000 *\/$/;"	v	file:
half	libm/k_sin.c	/^  half = 5.00000000000000000000e-01,    \/* 0x3FE00000, 0x00000000 *\/$/;"	v	file:
handle	thread/SDL_thread_c.h	/^    SYS_ThreadHandle handle;$/;"	m	struct:SDL_Thread
handle	video/directfb/SDL_DirectFB_dyn.c	/^static void *handle = NULL;$/;"	v	file:
handler	video/x11/SDL_x11opengl.c	/^static int (*handler) (Display *, XErrorEvent *) = NULL;$/;"	v	file:
handler	video/x11/SDL_x11video.c	/^static int (*handler) (Display *, XErrorEvent *) = NULL;$/;"	v	file:
haptic	haptic/darwin/SDL_syshaptic.c	/^    SDL_Haptic *haptic;         \/* Haptic currently associated with it. *\/$/;"	m	struct:__anon99	file:
haptic	haptic/linux/SDL_syshaptic.c	/^    SDL_Haptic *haptic;         \/* Assosciated haptic. *\/$/;"	m	struct:__anon98	file:
haptic	haptic/windows/SDL_syshaptic.c	/^    SDL_Haptic *haptic;$/;"	m	struct:__anon100	file:
haptic_effect	haptic/SDL_syshaptic.h	/^struct haptic_effect$/;"	s
haptic_hwdata	haptic/darwin/SDL_syshaptic.c	/^struct haptic_hwdata$/;"	s	file:
haptic_hwdata	haptic/linux/SDL_syshaptic.c	/^struct haptic_hwdata$/;"	s	file:
haptic_hwdata	haptic/windows/SDL_syshaptic.c	/^struct haptic_hwdata$/;"	s	file:
haptic_hweffect	haptic/darwin/SDL_syshaptic.c	/^struct haptic_hweffect$/;"	s	file:
haptic_hweffect	haptic/linux/SDL_syshaptic.c	/^struct haptic_hweffect$/;"	s	file:
haptic_hweffect	haptic/windows/SDL_syshaptic.c	/^struct haptic_hweffect$/;"	s	file:
has_monotonic_time	timer/unix/SDL_systimer.c	/^static SDL_bool has_monotonic_time = SDL_FALSE;$/;"	v	file:
has_own_wm	video/directfb/SDL_DirectFB_video.h	/^    int                 has_own_wm;$/;"	m	struct:_DFB_DeviceData
has_segment_link	stdlib/SDL_malloc.c	/^has_segment_link(mstate m, msegmentptr ss)$/;"	f	file:
hash	events/SDL_gesture.c	/^    unsigned long hash;$/;"	m	struct:__anon63	file:
hasshape	video/SDL_sysvideo.h	/^    SDL_bool hasshape;$/;"	m	struct:SDL_WindowShaper
hat	joystick/SDL_gamecontroller.c	/^    int hat;$/;"	m	struct:_SDL_HatMapping	file:
hatState	joystick/SDL_gamecontroller.c	/^    Uint8 hatState[4]; \/* the current hat state for this controller *\/$/;"	m	struct:_SDL_GameController	file:
hatasbutton	joystick/SDL_gamecontroller.c	/^    struct _SDL_HatMapping hatasbutton[SDL_CONTROLLER_BUTTON_MAX];$/;"	m	struct:_SDL_ControllerMapping	typeref:struct:_SDL_ControllerMapping::_SDL_HatMapping	file:
hats	joystick/SDL_sysjoystick.h	/^    Uint8 *hats;                \/* Current hat states *\/$/;"	m	struct:_SDL_Joystick
hats	joystick/darwin/SDL_sysjoystick_c.h	/^    long hats;                  \/* number of hat switches (calculated, not reported by device) *\/$/;"	m	struct:joystick_hwdata
hats	joystick/linux/SDL_sysjoystick_c.h	/^    } *hats;$/;"	m	struct:joystick_hwdata	typeref:struct:joystick_hwdata::hwdata_hat
hatval_to_sdl	joystick/bsd/SDL_sysjoystick.c	/^hatval_to_sdl(Sint32 hatval)$/;"	f	file:
have_mitshm	video/x11/SDL_x11framebuffer.c	/^static SDL_bool have_mitshm(void)$/;"	f	file:
hblkhd	stdlib/SDL_malloc.c	/^    MALLINFO_FIELD_TYPE hblkhd; \/* space in mmapped regions *\/$/;"	m	struct:mallinfo	file:
hblks	stdlib/SDL_malloc.c	/^    MALLINFO_FIELD_TYPE hblks;  \/* always 0 *\/$/;"	m	struct:mallinfo	file:
hbm	video/windows/SDL_windowswindow.h	/^    HBITMAP hbm;$/;"	m	struct:__anon57
hdc	video/windows/SDL_windowswindow.h	/^    HDC hdc;$/;"	m	struct:__anon57
head	events/SDL_events.c	/^    SDL_EventEntry *head;$/;"	m	struct:__anon60	file:
head	render/opengles2/SDL_render_gles2.c	/^    GLES2_ProgramCacheEntry *head;$/;"	m	struct:GLES2_ProgramCache	file:
head	render/opengles2/SDL_render_gles2.c	/^    GLES2_ShaderCacheEntry *head;$/;"	m	struct:GLES2_ShaderCache	file:
head	stdlib/SDL_malloc.c	/^    size_t head;                \/* Size and inuse bits. *\/$/;"	m	struct:malloc_chunk	file:
head	stdlib/SDL_malloc.c	/^    size_t head;$/;"	m	struct:malloc_tree_chunk	file:
height	render/psp/SDL_render_psp.c	/^    unsigned int        height;                             \/**< Image height. *\/$/;"	m	struct:__anon77	file:
height	video/psp/SDL_pspgl.c	/^static EGLint height = 272;$/;"	v	file:
height	video/x11/edid.h	/^    int height;$/;"	m	struct:Timing
height_mm	video/x11/edid.h	/^    int			height_mm;		\/* -1 if not specified *\/$/;"	m	struct:MonitorInfo
height_mm	video/x11/edid.h	/^    int		height_mm;$/;"	m	struct:DetailedTiming
helpID	video/windows/SDL_windowsmessagebox.c	/^    DWORD helpID;$/;"	m	struct:__anon52	file:
helpID	video/windows/SDL_windowsmessagebox.c	/^    DWORD helpID;$/;"	m	struct:__anon53	file:
hidden	audio/SDL_sysaudio.h	/^    struct SDL_PrivateAudioData *hidden;$/;"	m	struct:SDL_AudioDevice	typeref:struct:SDL_AudioDevice::SDL_PrivateAudioData
hidden	render/SDL_sysrender.h	/^    SDL_bool hidden;$/;"	m	struct:SDL_Renderer
hin	audio/winmm/SDL_winmm.h	/^    HWAVEIN hin;$/;"	m	struct:SDL_PrivateAudioData
hires_start_ticks	timer/windows/SDL_systimer.c	/^static LARGE_INTEGER hires_start_ticks;$/;"	v	file:
hires_ticks_per_second	timer/windows/SDL_systimer.c	/^static LARGE_INTEGER hires_ticks_per_second;$/;"	v	file:
hires_timer_available	timer/windows/SDL_systimer.c	/^static BOOL hires_timer_available;$/;"	v	file:
hotx	video/directfb/SDL_DirectFB_mouse.h	/^    int             hotx;$/;"	m	struct:_DFB_CursorData
hoty	video/directfb/SDL_DirectFB_mouse.h	/^    int             hoty;$/;"	m	struct:_DFB_CursorData
hout	audio/winmm/SDL_winmm.h	/^    HWAVEOUT hout;$/;"	m	struct:SDL_PrivateAudioData
hprm	video/psp/SDL_pspevents.c	/^static enum PspHprmKeys hprm = 0;$/;"	v	typeref:enum:PspHprmKeys	file:
huge	libm/s_atan.c	/^huge   = 1.0e300;$/;"	v	file:
huge_val	libm/e_pow.c	/^         huge_val = 1.0e300, tiny = 1.0e-300,$/;"	v	file:
huge_val	libm/s_floor.c	/^static const double huge_val = 1.0e300;$/;"	v	file:
huge_val	libm/s_floor.c	/^static double huge_val = 1.0e300;$/;"	v	file:
huge_val	libm/s_scalbn.c	/^         huge_val = 1.0e+300, tiny = 1.0e-300;$/;"	v	file:
hwdata	haptic/SDL_syshaptic.h	/^    struct haptic_hwdata *hwdata;       \/* Driver dependent *\/$/;"	m	struct:_SDL_Haptic	typeref:struct:_SDL_Haptic::haptic_hwdata
hwdata	joystick/SDL_sysjoystick.h	/^    struct joystick_hwdata *hwdata;     \/* Driver dependent information *\/$/;"	m	struct:_SDL_Joystick	typeref:struct:_SDL_Joystick::joystick_hwdata
hwdata	joystick/linux/SDL_sysjoystick.c	/^    struct joystick_hwdata *hwdata;$/;"	m	struct:SDL_joylist_item	typeref:struct:SDL_joylist_item::joystick_hwdata	file:
hwdata_ball	joystick/linux/SDL_sysjoystick_c.h	/^    struct hwdata_ball$/;"	s	struct:joystick_hwdata
hwdata_hat	joystick/linux/SDL_sysjoystick_c.h	/^    struct hwdata_hat$/;"	s	struct:joystick_hwdata
hweffect	haptic/SDL_syshaptic.h	/^    struct haptic_hweffect *hweffect;   \/* The hardware behind the event *\/$/;"	m	struct:haptic_effect	typeref:struct:haptic_effect::haptic_hweffect
hwnd	video/windows/SDL_windowswindow.h	/^    HWND hwnd;$/;"	m	struct:__anon57
iDelta	audio/SDL_wave.c	/^    Uint16 iDelta;$/;"	m	struct:MS_ADPCM_decodestate	file:
iSamp1	audio/SDL_wave.c	/^    Sint16 iSamp1;$/;"	m	struct:MS_ADPCM_decodestate	file:
iSamp2	audio/SDL_wave.c	/^    Sint16 iSamp2;$/;"	m	struct:MS_ADPCM_decodestate	file:
ialloc	stdlib/SDL_malloc.c	/^ialloc(mstate m, size_t n_elements, size_t * sizes, int opts, void *chunks[])$/;"	f	file:
ic	video/x11/SDL_x11window.h	/^    XIC ic;$/;"	m	struct:__anon25
icon	video/SDL_sysvideo.h	/^    SDL_Surface *icon;$/;"	m	struct:SDL_Window
icon	video/directfb/SDL_DirectFB_window.h	/^    IDirectFBSurface        *icon;$/;"	m	struct:_DFB_WindowData
id	events/SDL_gesture.c	/^    SDL_TouchID id;$/;"	m	struct:__anon64	file:
id	events/SDL_touch_c.h	/^    SDL_TouchID id;$/;"	m	struct:SDL_Touch
id	joystick/windows/SDL_mmjoystick.c	/^    UINT id;$/;"	m	struct:joystick_hwdata	file:
id	render/opengles2/SDL_render_gles2.c	/^    GLuint id;$/;"	m	struct:GLES2_ProgramCacheEntry	file:
id	render/opengles2/SDL_render_gles2.c	/^    GLuint id;$/;"	m	struct:GLES2_ShaderCacheEntry	file:
id	thread/beos/SDL_syssem.c	/^    sem_id id;$/;"	m	struct:SDL_semaphore	file:
id	thread/pthread/SDL_sysmutex.c	/^    pthread_mutex_t id;$/;"	m	struct:SDL_mutex	file:
id	thread/pthread/SDL_sysmutex_c.h	/^    pthread_mutex_t id;$/;"	m	struct:SDL_mutex
id	thread/windows/SDL_syssem.c	/^    HANDLE id;$/;"	m	struct:SDL_semaphore	file:
id	video/SDL_sysvideo.h	/^    Uint32 id;$/;"	m	struct:SDL_Window
id	video/directfb/SDL_DirectFB_video.h	/^    int id;$/;"	m	struct:_DFB_KeyboardData
id	video/psp/SDL_pspevents.c	/^    enum PspHprmKeys id;$/;"	m	struct:__anon8	typeref:enum:__anon8::PspHprmKeys	file:
id	video/windows/SDL_windowsmessagebox.c	/^    DWORD id;$/;"	m	struct:__anon53	file:
id_mask	video/directfb/SDL_DirectFB_mouse.c	/^static int id_mask;$/;"	v	file:
identity	video/SDL_blit.h	/^    int identity;$/;"	m	struct:SDL_BlitMap
idx2bit	stdlib/SDL_malloc.c	2342;"	d	file:
ieee_double_shape_type	libm/math_private.h	/^} ieee_double_shape_type;$/;"	t	typeref:union:__anon102
ieee_double_shape_type	libm/math_private.h	/^} ieee_double_shape_type;$/;"	t	typeref:union:__anon104
ieee_float_shape_type	libm/math_private.h	/^} ieee_float_shape_type;$/;"	t	typeref:union:__anon106
illegal_instruction	cpuinfo/SDL_cpuinfo.c	/^illegal_instruction(int sig)$/;"	f	file:
im	video/x11/SDL_x11video.h	/^    XIM im;$/;"	m	struct:SDL_VideoData
ime_alpnsinkcookie	video/windows/SDL_windowsvideo.h	/^    DWORD ime_alpnsinkcookie;$/;"	m	struct:SDL_VideoData
ime_available	video/windows/SDL_windowsvideo.h	/^    SDL_bool ime_available;$/;"	m	struct:SDL_VideoData
ime_candcount	video/windows/SDL_windowsvideo.h	/^    DWORD ime_candcount;$/;"	m	struct:SDL_VideoData
ime_candidates	video/windows/SDL_windowsvideo.h	/^    WCHAR ime_candidates[MAX_CANDLIST][MAX_CANDLENGTH];$/;"	m	struct:SDL_VideoData
ime_candlist	video/windows/SDL_windowsvideo.h	/^    SDL_bool ime_candlist;$/;"	m	struct:SDL_VideoData
ime_candlistindexbase	video/windows/SDL_windowsvideo.h	/^    int ime_candlistindexbase;$/;"	m	struct:SDL_VideoData
ime_candlistrect	video/windows/SDL_windowsvideo.h	/^    SDL_Rect ime_candlistrect;$/;"	m	struct:SDL_VideoData
ime_candpgsize	video/windows/SDL_windowsvideo.h	/^    UINT ime_candpgsize;$/;"	m	struct:SDL_VideoData
ime_candref	video/windows/SDL_windowsvideo.h	/^    DWORD ime_candref;$/;"	m	struct:SDL_VideoData
ime_candsel	video/windows/SDL_windowsvideo.h	/^    DWORD ime_candsel;$/;"	m	struct:SDL_VideoData
ime_candvertical	video/windows/SDL_windowsvideo.h	/^    SDL_bool ime_candvertical;$/;"	m	struct:SDL_VideoData
ime_com_initialized	video/windows/SDL_windowsvideo.h	/^    SDL_bool ime_com_initialized;$/;"	m	struct:SDL_VideoData
ime_composition	video/windows/SDL_windowsvideo.h	/^    WCHAR ime_composition[SDL_TEXTEDITINGEVENT_TEXT_SIZE];$/;"	m	struct:SDL_VideoData
ime_convmodesinkcookie	video/windows/SDL_windowsvideo.h	/^    DWORD ime_convmodesinkcookie;$/;"	m	struct:SDL_VideoData
ime_cursor	video/windows/SDL_windowsvideo.h	/^    int ime_cursor;$/;"	m	struct:SDL_VideoData
ime_dirty	video/windows/SDL_windowsvideo.h	/^    SDL_bool ime_dirty;$/;"	m	struct:SDL_VideoData
ime_enabled	video/windows/SDL_windowsvideo.h	/^    SDL_bool ime_enabled;$/;"	m	struct:SDL_VideoData
ime_himc	video/windows/SDL_windowsvideo.h	/^    HIMC ime_himc;$/;"	m	struct:SDL_VideoData
ime_himm32	video/windows/SDL_windowsvideo.h	/^    void* ime_himm32;$/;"	m	struct:SDL_VideoData
ime_hkl	video/windows/SDL_windowsvideo.h	/^    HKL ime_hkl;$/;"	m	struct:SDL_VideoData
ime_hwnd_current	video/windows/SDL_windowsvideo.h	/^    HWND ime_hwnd_current;$/;"	m	struct:SDL_VideoData
ime_hwnd_main	video/windows/SDL_windowsvideo.h	/^    HWND ime_hwnd_main;$/;"	m	struct:SDL_VideoData
ime_initialized	video/windows/SDL_windowsvideo.h	/^    SDL_bool ime_initialized;$/;"	m	struct:SDL_VideoData
ime_ippasink	video/windows/SDL_windowsvideo.h	/^    TSFSink *ime_ippasink;$/;"	m	struct:SDL_VideoData
ime_openmodesinkcookie	video/windows/SDL_windowsvideo.h	/^    DWORD ime_openmodesinkcookie;$/;"	m	struct:SDL_VideoData
ime_readingstring	video/windows/SDL_windowsvideo.h	/^    WCHAR ime_readingstring[16];$/;"	m	struct:SDL_VideoData
ime_rect	video/windows/SDL_windowsvideo.h	/^    SDL_Rect ime_rect;$/;"	m	struct:SDL_VideoData
ime_threadmgr	video/windows/SDL_windowsvideo.h	/^    struct ITfThreadMgr *ime_threadmgr;$/;"	m	struct:SDL_VideoData	typeref:struct:SDL_VideoData::ITfThreadMgr
ime_threadmgrex	video/windows/SDL_windowsvideo.h	/^    struct ITfThreadMgrEx *ime_threadmgrex;$/;"	m	struct:SDL_VideoData	typeref:struct:SDL_VideoData::ITfThreadMgrEx
ime_uielemsink	video/windows/SDL_windowsvideo.h	/^    TSFSink *ime_uielemsink;$/;"	m	struct:SDL_VideoData
ime_uielemsinkcookie	video/windows/SDL_windowsvideo.h	/^    DWORD ime_uielemsinkcookie;$/;"	m	struct:SDL_VideoData
ime_uiless	video/windows/SDL_windowsvideo.h	/^    SDL_bool ime_uiless;$/;"	m	struct:SDL_VideoData
ime_winheight	video/windows/SDL_windowsvideo.h	/^    int ime_winheight;$/;"	m	struct:SDL_VideoData
ime_winwidth	video/windows/SDL_windowsvideo.h	/^    int ime_winwidth;$/;"	m	struct:SDL_VideoData
impl	audio/SDL_sysaudio.h	/^    SDL_AudioDriverImpl impl;$/;"	m	struct:SDL_AudioDriver
implementations	power/SDL_power.c	/^static SDL_GetPowerInfo_Impl implementations[] = {$/;"	v	file:
index	audio/SDL_wave.c	/^    Sint8 index;$/;"	m	struct:IMA_ADPCM_decodestate	file:
index	haptic/SDL_syshaptic.h	/^    Uint8 index;                \/* Stores index it is attached to *\/$/;"	m	struct:_SDL_Haptic
index	stdlib/SDL_malloc.c	/^    bindex_t index;$/;"	m	struct:malloc_tree_chunk	file:
info	render/SDL_sysrender.h	/^    SDL_RendererInfo info;$/;"	m	struct:SDL_RenderDriver
info	render/SDL_sysrender.h	/^    SDL_RendererInfo info;$/;"	m	struct:SDL_Renderer
info	thread/SDL_thread.c	/^    SDL_Thread *info;$/;"	m	struct:__anon3	file:
info	video/SDL_blit.h	/^    SDL_BlitInfo info;$/;"	m	struct:SDL_BlitMap
init	audio/SDL_sysaudio.h	/^    int (*init) (SDL_AudioDriverImpl * impl);$/;"	m	struct:AudioBootStrap
init_bins	stdlib/SDL_malloc.c	/^init_bins(mstate m)$/;"	f	file:
init_jk	libm/k_rem_pio2.c	/^     static const int init_jk[] = { 2, 3, 4, 6 };       \/* initial value for jk *\/$/;"	v	file:
init_mparams	stdlib/SDL_malloc.c	/^init_mparams(void)$/;"	f	file:
init_top	stdlib/SDL_malloc.c	/^init_top(mstate m, mchunkptr p, size_t psize)$/;"	f	file:
init_user_mstate	stdlib/SDL_malloc.c	/^init_user_mstate(char *tbase, size_t tsize)$/;"	f	file:
initial_calls	audio/dummy/SDL_dummyaudio.h	/^    Uint32 initial_calls;$/;"	m	struct:SDL_PrivateAudioData
initialized	render/psp/SDL_render_psp.c	/^    SDL_bool        initialized ;$/;"	m	struct:__anon76	file:
initialized	video/cocoa/SDL_cocoaopengl.h	/^    int initialized;$/;"	m	struct:SDL_GLDriverData
initialized	video/directfb/SDL_DirectFB_opengl.c	/^    int initialized;$/;"	m	struct:SDL_GLDriverData	file:
initialized	video/directfb/SDL_DirectFB_video.h	/^    int initialized;$/;"	m	struct:_DFB_DeviceData
input	joystick/sort_controllers.py	/^input = open(filename)$/;"	v
inputCallback	audio/coreaudio/SDL_coreaudio.c	/^inputCallback(void *inRefCon,$/;"	f	file:
inputDeviceCount	audio/SDL_sysaudio.h	/^    int inputDeviceCount;$/;"	m	struct:SDL_AudioDriver
inputDevices	audio/SDL_sysaudio.h	/^    char **inputDevices;$/;"	m	struct:SDL_AudioDriver
input_t	joystick/windows/SDL_dxjoystick_c.h	/^typedef struct input_t$/;"	s
input_t	joystick/windows/SDL_dxjoystick_c.h	/^} input_t;$/;"	t	typeref:struct:input_t
inreport	joystick/bsd/SDL_sysjoystick.c	/^    struct report inreport;$/;"	m	struct:joystick_hwdata	typeref:struct:joystick_hwdata::report	file:
insert_chunk	stdlib/SDL_malloc.c	3197;"	d	file:
insert_large_chunk	stdlib/SDL_malloc.c	3056;"	d	file:
insert_small_chunk	stdlib/SDL_malloc.c	2985;"	d	file:
instance	haptic/windows/SDL_syshaptic.c	/^    DIDEVICEINSTANCE instance;$/;"	m	struct:__anon100	file:
instance	render/opengles2/SDL_render_gles2.c	/^    const GLES2_ShaderInstance *instance;$/;"	m	struct:GLES2_ShaderCacheEntry	file:
instance_count	render/opengles2/SDL_shaders_gles2.h	/^    int instance_count;$/;"	m	struct:GLES2_Shader
instance_counter	joystick/linux/SDL_sysjoystick.c	/^static int instance_counter = 0;$/;"	v	file:
instance_id	joystick/SDL_sysjoystick.h	/^    SDL_JoystickID instance_id; \/* Device instance, monotonically increasing from 0 *\/$/;"	m	struct:_SDL_Joystick
instance_id	joystick/darwin/SDL_sysjoystick_c.h	/^    int instance_id;$/;"	m	struct:joystick_hwdata
instances	render/opengles2/SDL_shaders_gles2.h	/^    const GLES2_ShaderInstance *instances[4];$/;"	m	struct:GLES2_Shader
int_string	power/linux/SDL_syspower.c	/^int_string(char *str, int *val)$/;"	f	file:
interface	joystick/darwin/SDL_sysjoystick_c.h	/^    IOHIDDeviceInterface **interface;   \/* interface to device, NULL = no interface *\/$/;"	m	struct:joystick_hwdata
interface	video/x11/edid.h	/^	    Interface	interface;$/;"	m	struct:MonitorInfo::__anon15::__anon16
interlaced	video/x11/edid.h	/^    int		interlaced;$/;"	m	struct:DetailedTiming
internal_free	stdlib/SDL_malloc.c	3210;"	d	file:
internal_free	stdlib/SDL_malloc.c	3215;"	d	file:
internal_free	stdlib/SDL_malloc.c	3219;"	d	file:
internal_mallinfo	stdlib/SDL_malloc.c	/^internal_mallinfo(mstate m)$/;"	f	file:
internal_malloc	stdlib/SDL_malloc.c	3209;"	d	file:
internal_malloc	stdlib/SDL_malloc.c	3213;"	d	file:
internal_malloc	stdlib/SDL_malloc.c	3218;"	d	file:
internal_malloc_stats	stdlib/SDL_malloc.c	/^internal_malloc_stats(mstate m)$/;"	f	file:
internal_memalign	stdlib/SDL_malloc.c	/^internal_memalign(mstate m, size_t alignment, size_t bytes)$/;"	f	file:
internal_realloc	stdlib/SDL_malloc.c	/^internal_realloc(mstate m, void *oldmem, size_t bytes)$/;"	f	file:
interval	timer/SDL_timer.c	/^    Uint32 interval;$/;"	m	struct:_SDL_Timer	file:
inv255f	render/opengl/SDL_render_gl.c	/^static const float inv255f = 1.0f \/ 255.0f;$/;"	v	file:
inv255f	render/opengles/SDL_render_gles.c	/^static const float inv255f = 1.0f \/ 255.0f;$/;"	v	file:
inv255f	render/opengles2/SDL_render_gles2.c	/^static const float inv255f = 1.0f \/ 255.0f;$/;"	v	file:
invpio2	libm/e_rem_pio2.c	/^    invpio2 = 6.36619772367581382433e-01,       \/* 0x3FE45F30, 0x6DC9C883 *\/$/;"	v	file:
irkbd_ready	video/psp/SDL_pspevents.c	/^static int irkbd_ready = 0;$/;"	v	file:
isAtLeastGL3	video/SDL_video.c	/^isAtLeastGL3(const char *verstr)$/;"	f	file:
isConfigureNotify	video/x11/SDL_x11window.c	/^static Bool isConfigureNotify(Display *dpy, XEvent *ev, XPointer win)$/;"	f	file:
isDirty	video/directfb/SDL_DirectFB_render.c	/^    int isDirty;$/;"	m	struct:__anon49	file:
isMapNotify	video/x11/SDL_x11window.c	/^static Bool isMapNotify(Display *dpy, XEvent *ev, XPointer win)$/;"	f	file:
isUnmapNotify	video/x11/SDL_x11window.c	/^static Bool isUnmapNotify(Display *dpy, XEvent *ev, XPointer win)$/;"	f	file:
is_aligned	stdlib/SDL_malloc.c	1329;"	d	file:
is_digital	video/x11/edid.h	/^    int			is_digital;$/;"	m	struct:MonitorInfo
is_extern_segment	stdlib/SDL_malloc.c	1969;"	d	file:
is_generic	video/directfb/SDL_DirectFB_video.h	/^    int             is_generic; \/* generic keyboard *\/$/;"	m	struct:_DFB_KeyboardData
is_global	stdlib/SDL_malloc.c	2106;"	d	file:
is_granularity_aligned	stdlib/SDL_malloc.c	2139;"	d	file:
is_initialized	stdlib/SDL_malloc.c	2107;"	d	file:
is_joystick	haptic/windows/SDL_syshaptic.c	/^    SDL_bool is_joystick;       \/* Device is loaded as joystick. *\/$/;"	m	struct:haptic_hwdata	file:
is_locked	video/directfb/SDL_DirectFB_opengl.h	/^    int                 is_locked;$/;"	m	struct:_DirectFB_GLContext
is_managed	video/directfb/SDL_DirectFB_window.h	/^    int                     is_managed;$/;"	m	struct:_DFB_WindowData
is_mmapped	stdlib/SDL_malloc.c	1778;"	d	file:
is_mmapped_segment	stdlib/SDL_malloc.c	1968;"	d	file:
is_page_aligned	stdlib/SDL_malloc.c	2137;"	d	file:
is_small	stdlib/SDL_malloc.c	2280;"	d	file:
iscapture	audio/SDL_sysaudio.h	/^    int iscapture;$/;"	m	struct:SDL_AudioDevice
iscapture	audio/qsa/SDL_qsa_audio.h	/^    int iscapture;$/;"	m	struct:SDL_PrivateAudioData
item	joystick/linux/SDL_sysjoystick_c.h	/^    struct SDL_joylist_item *item;$/;"	m	struct:joystick_hwdata	typeref:struct:joystick_hwdata::SDL_joylist_item
ivln2	libm/e_pow.c	/^         ivln2 = 1.44269504088896338700e+00,    \/* 0x3FF71547, 0x652B82FE =1\/ln2 *\/$/;"	v	file:
ivln2_h	libm/e_pow.c	/^         ivln2_h = 1.44269502162933349609e+00,  \/* 0x3FF71547, 0x60000000 =24b 1\/ln2 *\/$/;"	v	file:
ivln2_l	libm/e_pow.c	/^         ivln2_l = 1.92596299112661746887e-08;  \/* 0x3E54AE0B, 0xF85DDF44 =1\/ln2 tail *\/$/;"	v	file:
ixa2	audio/xaudio2/SDL_xaudio2.c	/^    IXAudio2 *ixa2;$/;"	m	struct:SDL_PrivateAudioData	file:
jmpbuf	cpuinfo/SDL_cpuinfo.c	/^static jmp_buf jmpbuf;$/;"	v	file:
joydevnames	joystick/bsd/SDL_sysjoystick.c	/^static char *joydevnames[MAX_JOYS];$/;"	v	file:
joynames	joystick/bsd/SDL_sysjoystick.c	/^static char *joynames[MAX_JOYS];$/;"	v	file:
joystick	joystick/SDL_gamecontroller.c	/^    SDL_Joystick *joystick; \/* underlying joystick device *\/$/;"	m	struct:_SDL_GameController	file:
joystick_hwdata	joystick/beos/SDL_bejoystick.cc	/^    struct joystick_hwdata$/;"	s	file:
joystick_hwdata	joystick/bsd/SDL_sysjoystick.c	/^struct joystick_hwdata$/;"	s	file:
joystick_hwdata	joystick/darwin/SDL_sysjoystick_c.h	/^struct joystick_hwdata$/;"	s
joystick_hwdata	joystick/linux/SDL_sysjoystick_c.h	/^struct joystick_hwdata$/;"	s
joystick_hwdata	joystick/windows/SDL_dxjoystick_c.h	/^struct joystick_hwdata$/;"	s
joystick_hwdata	joystick/windows/SDL_mmjoystick.c	/^struct joystick_hwdata$/;"	s	file:
joystickname	joystick/windows/SDL_dxjoystick.c	/^    char *joystickname;$/;"	m	struct:JoyStick_DeviceData_	file:
k_nMaxHatEntries	joystick/SDL_gamecontroller.c	53;"	d	file:
k_nMaxReverseEntries	joystick/SDL_gamecontroller.c	47;"	d	file:
keepcost	stdlib/SDL_malloc.c	/^    MALLINFO_FIELD_TYPE keepcost;       \/* releasable (via malloc_trim) space *\/$/;"	m	struct:mallinfo	file:
key	SDL_error_c.h	/^    char key[ERR_MAX_STRLEN];$/;"	m	struct:SDL_error
key_layout	video/cocoa/SDL_cocoavideo.h	/^    void *key_layout;$/;"	m	struct:SDL_VideoData
key_layout	video/x11/SDL_x11video.h	/^    SDL_Scancode key_layout[256];$/;"	m	struct:SDL_VideoData
key_map	joystick/linux/SDL_sysjoystick_c.h	/^    Uint8 key_map[KEY_MAX - BTN_MISC];$/;"	m	struct:joystick_hwdata
keyboard	video/directfb/SDL_DirectFB_video.h	/^    DFB_KeyboardData    keyboard[10];$/;"	m	struct:_DFB_DeviceData
keyboardVisible	video/uikit/SDL_uikitview.h	/^@property (readonly) BOOL keyboardVisible;$/;"	v
keymap	events/SDL_keyboard.c	/^    SDL_Keycode keymap[SDL_NUM_SCANCODES];$/;"	m	struct:SDL_Keyboard	file:
keymap	video/bwindow/SDL_bkeyboard.cc	/^static SDL_Scancode keymap[KEYMAP_SIZE];$/;"	v	file:
keymap	video/psp/SDL_pspevents.c	/^static SDLKey keymap[256];$/;"	v	file:
keymap_psp	video/psp/SDL_pspevents.c	/^} keymap_psp[] = {$/;"	v	typeref:struct:__anon8	file:
keystate	events/SDL_keyboard.c	/^    Uint8 keystate[SDL_NUM_SCANCODES];$/;"	m	struct:SDL_Keyboard	file:
keystate	video/bwindow/SDL_bkeyboard.cc	/^static int8 keystate[KEYMAP_SIZE];$/;"	v	file:
keysym	video/x11/SDL_x11keyboard.c	/^    KeySym keysym;$/;"	m	struct:__anon22	file:
keysym_to_unicode_12a1_12fe	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_12a1_12fe[] = {$/;"	v	file:
keysym_to_unicode_13bc_13be	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_13bc_13be[] = {$/;"	v	file:
keysym_to_unicode_14a1_14ff	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_14a1_14ff[] = {$/;"	v	file:
keysym_to_unicode_15d0_15f6	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_15d0_15f6[] = {$/;"	v	file:
keysym_to_unicode_16a0_16f6	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_16a0_16f6[] = {$/;"	v	file:
keysym_to_unicode_1a1_1ff	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_1a1_1ff[] = {$/;"	v	file:
keysym_to_unicode_1e9f_1eff	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_1e9f_1eff[] = {$/;"	v	file:
keysym_to_unicode_20a0_20ac	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_20a0_20ac[] = {$/;"	v	file:
keysym_to_unicode_2a1_2fe	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_2a1_2fe[] = {$/;"	v	file:
keysym_to_unicode_3a2_3fe	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_3a2_3fe[] = {$/;"	v	file:
keysym_to_unicode_4a1_4df	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_4a1_4df[] = {$/;"	v	file:
keysym_to_unicode_590_5fe	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_590_5fe[] = {$/;"	v	file:
keysym_to_unicode_680_6ff	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_680_6ff[] = {$/;"	v	file:
keysym_to_unicode_7a1_7f9	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_7a1_7f9[] = {$/;"	v	file:
keysym_to_unicode_8a4_8fe	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_8a4_8fe[] = {$/;"	v	file:
keysym_to_unicode_9df_9f8	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_9df_9f8[] = {$/;"	v	file:
keysym_to_unicode_aa1_afe	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_aa1_afe[] = {$/;"	v	file:
keysym_to_unicode_cdf_cfa	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_cdf_cfa[] = {$/;"	v	file:
keysym_to_unicode_da1_df9	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_da1_df9[] = {$/;"	v	file:
keysym_to_unicode_ea0_eff	video/x11/imKStoUCS.c	/^static unsigned short const keysym_to_unicode_ea0_eff[] = {$/;"	v	file:
kind	joystick/bsd/SDL_sysjoystick.c	/^    hid_kind_t kind;$/;"	m	struct:__anon68	file:
kind	video/SDL_shape_internals.h	/^	SDL_ShapeKind kind;$/;"	m	struct:__anon34
last	stdlib/SDL_qsort.c	/^    char *last;$/;"	m	struct:__anon5	file:
lastBlendMode	video/directfb/SDL_DirectFB_render.c	/^    int lastBlendMode;$/;"	m	struct:__anon48	file:
last_tv	audio/nas/SDL_nasaudio.h	/^    struct timeval last_tv;$/;"	m	struct:SDL_PrivateAudioData	typeref:struct:SDL_PrivateAudioData::timeval
last_x	events/SDL_mouse_c.h	/^    int last_x, last_y;         \/* the last reported x and y coordinates *\/$/;"	m	struct:__anon65
last_xconfigure	video/x11/SDL_x11window.h	/^    XConfigureEvent last_xconfigure;$/;"	m	struct:__anon25
last_y	events/SDL_mouse_c.h	/^    int last_x, last_y;         \/* the last reported x and y coordinates *\/$/;"	m	struct:__anon65
lastchunk	audio/directsound/SDL_directsound.h	/^    DWORD lastchunk;$/;"	m	struct:SDL_PrivateAudioData
layer	video/directfb/SDL_DirectFB_modes.h	/^    IDirectFBDisplayLayer   *layer;$/;"	m	struct:_DFB_DisplayData
least_addr	stdlib/SDL_malloc.c	/^    char *least_addr;$/;"	m	struct:malloc_state	file:
least_bit	stdlib/SDL_malloc.c	2383;"	d	file:
leaveLock	atomic/SDL_atomic.c	/^leaveLock(void *a)$/;"	f	file:
leftFingerDown	video/android/SDL_androidtouch.c	/^static SDL_FingerID leftFingerDown = 0;$/;"	v	file:
left_bits	stdlib/SDL_malloc.c	2386;"	d	file:
left_justify	stdlib/SDL_string.c	/^    SDL_bool left_justify;$/;"	m	struct:__anon4	file:
left_size	video/directfb/SDL_DirectFB_WM.h	/^    int left_size;$/;"	m	struct:_DFB_Theme
leftmost_child	stdlib/SDL_malloc.c	1901;"	d	file:
leftshift_for_tree_index	stdlib/SDL_malloc.c	2329;"	d	file:
length	audio/SDL_wave.h	/^    Uint32 length;$/;"	m	struct:Chunk
length	events/SDL_gesture.c	/^    float length;$/;"	m	struct:__anon62	file:
length	render/opengles2/SDL_shaders_gles2.h	/^    int length;$/;"	m	struct:GLES2_ShaderInstance
length	video/x11/SDL_x11messagebox.c	/^    int length;                         \/* String length of this text line *\/$/;"	m	struct:TextLineData	file:
length	video/x11/SDL_x11messagebox.c	/^    int length;                         \/* Text length *\/$/;"	m	struct:SDL_MessageBoxButtonDataX11	file:
lerp	joystick/psp/SDL_sysjoystick.c	/^static __inline__ void lerp (point *dest, point *a, point *b, float t)$/;"	f	file:
lfFont	video/windows/SDL_windowsvideo.h	/^    } lfFont;$/;"	m	struct:tagINPUTCONTEXT2	typeref:union:tagINPUTCONTEXT2::__anon56
lg2	libm/e_pow.c	/^         lg2 = 6.93147180559945286227e-01,      \/* 0x3FE62E42, 0xFEFA39EF *\/$/;"	v	file:
lg2_h	libm/e_pow.c	/^         lg2_h = 6.93147182464599609375e-01,    \/* 0x3FE62E43, 0x00000000 *\/$/;"	v	file:
lg2_l	libm/e_pow.c	/^         lg2_l = -1.90465429995776804525e-09,   \/* 0xBE205C61, 0x0CA86C39 *\/$/;"	v	file:
lib	video/x11/SDL_x11dyn.c	/^    void *lib;$/;"	m	struct:__anon26	file:
libm_hidden_def	libm/math_private.h	26;"	d
libm_hidden_proto	libm/math_private.h	25;"	d
libm_hidden_proto	libm/s_copysign.c	/^libm_hidden_proto(copysign)$/;"	f
libm_hidden_proto	libm/s_cos.c	/^libm_hidden_proto(cos)$/;"	f
libm_hidden_proto	libm/s_fabs.c	/^libm_hidden_proto(fabs)$/;"	f
libm_hidden_proto	libm/s_floor.c	/^libm_hidden_proto(floor)$/;"	f
libm_hidden_proto	libm/s_scalbn.c	/^libm_hidden_proto(scalbn)$/;"	f
libm_hidden_proto	libm/s_sin.c	/^libm_hidden_proto(sin)$/;"	f
libname	video/x11/SDL_x11dyn.c	/^    const char *libname;$/;"	m	struct:__anon26	file:
limit	thread/SDL_thread_c.h	/^    unsigned int limit;$/;"	m	struct:__anon1
linedata	video/x11/SDL_x11messagebox.c	/^    TextLineData linedata[ MAX_TEXT_LINES ];$/;"	m	struct:SDL_MessageBoxDataX11	file:
linux_scancode_table	events/scancodes_linux.h	/^static SDL_Scancode const linux_scancode_table[] = {$/;"	v
listener	video/cocoa/SDL_cocoawindow.h	/^    Cocoa_WindowListener *listener;$/;"	m	struct:SDL_WindowData
ln2_hi	libm/e_log.c	/^  ln2_hi = 6.93147180369123816490e-01,  \/* 3fe62e42 fee00000 *\/$/;"	v	file:
ln2_lo	libm/e_log.c	/^    ln2_lo = 1.90821492927058770002e-10,        \/* 3dea39ef 35793c76 *\/$/;"	v	file:
load_acpi_file	power/linux/SDL_syspower.c	/^load_acpi_file(const char *base, const char *node, const char *key,$/;"	f	file:
load_alsa_sym	audio/alsa/SDL_alsa_audio.c	/^load_alsa_sym(const char *fn, void **addr)$/;"	f	file:
load_alsa_syms	audio/alsa/SDL_alsa_audio.c	/^load_alsa_syms(void)$/;"	f	file:
load_dbus_sym	video/x11/SDL_x11video.c	/^load_dbus_sym(const char *fn, void **addr)$/;"	f	file:
load_dbus_syms	video/x11/SDL_x11video.c	/^load_dbus_syms(void)$/;"	f	file:
load_nas_sym	audio/nas/SDL_nasaudio.c	/^load_nas_sym(const char *fn, void **addr)$/;"	f	file:
load_nas_syms	audio/nas/SDL_nasaudio.c	/^load_nas_syms(void)$/;"	f	file:
load_pulseaudio_sym	audio/pulseaudio/SDL_pulseaudio.c	/^load_pulseaudio_sym(const char *fn, void **addr)$/;"	f	file:
load_pulseaudio_syms	audio/pulseaudio/SDL_pulseaudio.c	/^load_pulseaudio_syms(void)$/;"	f	file:
load_sndio_sym	audio/sndio/SDL_sndioaudio.c	/^load_sndio_sym(const char *fn, void **addr)$/;"	f	file:
load_sndio_syms	audio/sndio/SDL_sndioaudio.c	/^load_sndio_syms(void)$/;"	f	file:
load_udev_sym	joystick/linux/SDL_sysjoystick.c	/^load_udev_sym(const char *fn, void **addr)$/;"	f	file:
load_udev_syms	joystick/linux/SDL_sysjoystick.c	/^load_udev_syms(void)$/;"	f	file:
loaded_xinput	haptic/windows/SDL_syshaptic.c	/^static SDL_bool loaded_xinput = SDL_FALSE;$/;"	v	file:
lock	events/SDL_events.c	/^    SDL_mutex *lock;$/;"	m	struct:__anon60	file:
lock	thread/generic/SDL_syscond.c	/^    SDL_mutex *lock;$/;"	m	struct:SDL_cond	file:
lock	thread/psp/SDL_syscond.c	/^    SDL_mutex *lock;$/;"	m	struct:SDL_cond	file:
lock	timer/SDL_timer.c	/^    SDL_SpinLock lock;$/;"	m	struct:__anon114	file:
locked_buf	audio/directsound/SDL_directsound.h	/^    Uint8 *locked_buf;$/;"	m	struct:SDL_PrivateAudioData
locked_rect	render/SDL_sysrender.h	/^    SDL_Rect locked_rect;$/;"	m	struct:SDL_Texture
locked_rect	render/direct3d/SDL_render_d3d.c	/^    SDL_Rect locked_rect;$/;"	m	struct:__anon95	file:
locked_rect	render/opengl/SDL_render_gl.c	/^    SDL_Rect locked_rect;$/;"	m	struct:__anon92	file:
locks	atomic/SDL_atomic.c	/^static SDL_SpinLock locks[32];$/;"	v	file:
logical_h	render/SDL_sysrender.h	/^    int logical_h;$/;"	m	struct:SDL_Renderer
logical_h_backup	render/SDL_sysrender.h	/^    int logical_h_backup;$/;"	m	struct:SDL_Renderer
logical_w	render/SDL_sysrender.h	/^    int logical_w;$/;"	m	struct:SDL_Renderer
logical_w_backup	render/SDL_sysrender.h	/^    int logical_w_backup;$/;"	m	struct:SDL_Renderer
lookup_0	video/SDL_pixels.c	/^static Uint8 lookup_0[] = {$/;"	v	file:
lookup_1	video/SDL_pixels.c	/^static Uint8 lookup_1[] = {$/;"	v	file:
lookup_2	video/SDL_pixels.c	/^static Uint8 lookup_2[] = {$/;"	v	file:
lookup_3	video/SDL_pixels.c	/^static Uint8 lookup_3[] = {$/;"	v	file:
lookup_4	video/SDL_pixels.c	/^static Uint8 lookup_4[] = {$/;"	v	file:
lookup_5	video/SDL_pixels.c	/^static Uint8 lookup_5[] = {$/;"	v	file:
lookup_6	video/SDL_pixels.c	/^static Uint8 lookup_6[] = {$/;"	v	file:
lookup_7	video/SDL_pixels.c	/^static Uint8 lookup_7[] = {$/;"	v	file:
lookup_8	video/SDL_pixels.c	/^static Uint8 lookup_8[] = {$/;"	v	file:
lpDialog	video/windows/SDL_windowsmessagebox.c	/^    DLGTEMPLATEEX* lpDialog;$/;"	m	struct:__anon54	file:
lpVtbl	joystick/windows/SDL_dxjoystick.c	/^  CONST_VTBL struct IWbemLocatorVtbl *lpVtbl;$/;"	m	struct:IWbemLocator	typeref:struct:IWbemLocator::IWbemLocatorVtbl	file:
lpVtbl	video/windows/SDL_msctf.h	/^    const struct ITfCandidateListUIElementVtbl *lpVtbl;$/;"	m	struct:ITfCandidateListUIElement	typeref:struct:ITfCandidateListUIElement::ITfCandidateListUIElementVtbl
lpVtbl	video/windows/SDL_msctf.h	/^    const struct ITfDocumentMgrVtbl *lpVtbl;$/;"	m	struct:ITfDocumentMgr	typeref:struct:ITfDocumentMgr::ITfDocumentMgrVtbl
lpVtbl	video/windows/SDL_msctf.h	/^    const struct ITfInputProcessorProfileActivationSinkVtbl *lpVtbl;$/;"	m	struct:ITfInputProcessorProfileActivationSink	typeref:struct:ITfInputProcessorProfileActivationSink::ITfInputProcessorProfileActivationSinkVtbl
lpVtbl	video/windows/SDL_msctf.h	/^    const struct ITfReadingInformationUIElementVtbl *lpVtbl;$/;"	m	struct:ITfReadingInformationUIElement	typeref:struct:ITfReadingInformationUIElement::ITfReadingInformationUIElementVtbl
lpVtbl	video/windows/SDL_msctf.h	/^    const struct ITfSourceVtbl *lpVtbl;$/;"	m	struct:ITfSource	typeref:struct:ITfSource::ITfSourceVtbl
lpVtbl	video/windows/SDL_msctf.h	/^    const struct ITfThreadMgrExVtbl *lpVtbl;$/;"	m	struct:ITfThreadMgrEx	typeref:struct:ITfThreadMgrEx::ITfThreadMgrExVtbl
lpVtbl	video/windows/SDL_msctf.h	/^    const struct ITfThreadMgrVtbl *lpVtbl;$/;"	m	struct:ITfThreadMgr	typeref:struct:ITfThreadMgr::ITfThreadMgrVtbl
lpVtbl	video/windows/SDL_msctf.h	/^    const struct ITfUIElementMgrVtbl *lpVtbl;$/;"	m	struct:ITfUIElementMgr	typeref:struct:ITfUIElementMgr::ITfUIElementMgrVtbl
lpVtbl	video/windows/SDL_msctf.h	/^    const struct ITfUIElementSinkVtbl *lpVtbl;$/;"	m	struct:ITfUIElementSink	typeref:struct:ITfUIElementSink::ITfUIElementSinkVtbl
lpVtbl	video/windows/SDL_msctf.h	/^    const struct ITfUIElementVtbl *lpVtbl;$/;"	m	struct:ITfUIElement	typeref:struct:ITfUIElement::ITfUIElementVtbl
lpVtbl	video/windows/SDL_windowsvideo.h	/^    void **lpVtbl;$/;"	m	struct:__anon55
lsw	libm/math_private.h	/^        u_int32_t lsw;$/;"	m	struct:__anon102::__anon103
lsw	libm/math_private.h	/^        u_int32_t lsw;$/;"	m	struct:__anon104::__anon105
mActivityClass	core/android/SDL_android.c	/^static jclass mActivityClass;$/;"	v	file:
mJavaVM	core/android/SDL_android.c	/^static JavaVM* mJavaVM;$/;"	v	file:
mThreadKey	core/android/SDL_android.c	/^static pthread_key_t mThreadKey;$/;"	v	file:
m_env	core/android/SDL_android.c	/^    JNIEnv *m_env;$/;"	m	struct:LocalReferenceHolder	file:
m_func	core/android/SDL_android.c	/^    const char *m_func;$/;"	m	struct:LocalReferenceHolder	file:
mach_base_info	timer/unix/SDL_systimer.c	/^mach_timebase_info_data_t mach_base_info;$/;"	v
magic	audio/SDL_wave.h	/^    Uint32 magic;$/;"	m	struct:Chunk
magic	render/SDL_sysrender.h	/^    const void *magic;$/;"	m	struct:SDL_Renderer
magic	render/SDL_sysrender.h	/^    const void *magic;$/;"	m	struct:SDL_Texture
magic	stdlib/SDL_malloc.c	/^    size_t magic;$/;"	m	struct:malloc_params	file:
magic	stdlib/SDL_malloc.c	/^    size_t magic;$/;"	m	struct:malloc_state	file:
magic	video/SDL_sysvideo.h	/^    const void *magic;$/;"	m	struct:SDL_Window
magic_init_mutex	stdlib/SDL_malloc.c	/^static MLOCK_T magic_init_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
magic_init_mutex	stdlib/SDL_malloc.c	/^static MLOCK_T magic_init_mutex;$/;"	v	file:
main	SDL_error.c	/^main(int argc, char *argv[])$/;"	f
main	cpuinfo/SDL_cpuinfo.c	/^main()$/;"	f
main	main/dummy/SDL_dummy_main.c	/^main(int argc, char *argv[])$/;"	f
main	main/dummy/SDL_dummy_main.c	7;"	d	file:
main	main/psp/SDL_psp_main.c	/^int main(int argc, char *argv[])$/;"	f
main	main/windows/SDL_windows_main.c	21;"	d	file:
main	stdlib/SDL_getenv.c	/^main(int argc, char *argv[])$/;"	f
mainloop	audio/pulseaudio/SDL_pulseaudio.h	/^    pa_mainloop *mainloop;$/;"	m	struct:SDL_PrivateAudioData
mainloop_api	audio/pulseaudio/SDL_pulseaudio.h	/^    pa_mainloop_api *mainloop_api;$/;"	m	struct:SDL_PrivateAudioData
major_version	video/SDL_sysvideo.h	/^        int major_version;$/;"	m	struct:SDL_VideoDevice::__anon27
major_version	video/x11/edid.h	/^    int			major_version;$/;"	m	struct:MonitorInfo
make_proc_acpi_key_val	power/linux/SDL_syspower.c	/^make_proc_acpi_key_val(char **_ptr, char **_key, char **_val)$/;"	f	file:
mallinfo	stdlib/SDL_malloc.c	/^struct mallinfo$/;"	s	file:
malloc	stdlib/SDL_malloc.c	635;"	d	file:
malloc	stdlib/SDL_qsort.c	67;"	d	file:
malloc	stdlib/SDL_qsort.c	69;"	d	file:
malloc_chunk	stdlib/SDL_malloc.c	/^struct malloc_chunk$/;"	s	file:
malloc_corruption_error_count	stdlib/SDL_malloc.c	/^int malloc_corruption_error_count;$/;"	v
malloc_getpagesize	stdlib/SDL_malloc.c	1270;"	d	file:
malloc_getpagesize	stdlib/SDL_malloc.c	1274;"	d	file:
malloc_getpagesize	stdlib/SDL_malloc.c	1277;"	d	file:
malloc_getpagesize	stdlib/SDL_malloc.c	1283;"	d	file:
malloc_getpagesize	stdlib/SDL_malloc.c	1287;"	d	file:
malloc_getpagesize	stdlib/SDL_malloc.c	1289;"	d	file:
malloc_getpagesize	stdlib/SDL_malloc.c	1293;"	d	file:
malloc_getpagesize	stdlib/SDL_malloc.c	1296;"	d	file:
malloc_getpagesize	stdlib/SDL_malloc.c	1298;"	d	file:
malloc_params	stdlib/SDL_malloc.c	/^struct malloc_params$/;"	s	file:
malloc_segment	stdlib/SDL_malloc.c	/^struct malloc_segment$/;"	s	file:
malloc_state	stdlib/SDL_malloc.c	/^struct malloc_state$/;"	s	file:
malloc_tree_chunk	stdlib/SDL_malloc.c	/^struct malloc_tree_chunk$/;"	s	file:
manufacturer_code	video/x11/edid.h	/^    char		manufacturer_code[4];$/;"	m	struct:MonitorInfo
map	video/directfb/SDL_DirectFB_video.h	/^    const SDL_Scancode  *map;       \/* keyboard scancode map *\/$/;"	m	struct:_DFB_KeyboardData
map_StringForControllerAxis	joystick/SDL_gamecontroller.c	/^static const char* map_StringForControllerAxis[] = {$/;"	v	file:
map_StringForControllerButton	joystick/SDL_gamecontroller.c	/^static const char* map_StringForControllerButton[] = {$/;"	v	file:
map_adjust	video/directfb/SDL_DirectFB_video.h	/^    int             map_adjust; \/* index adjust *\/$/;"	m	struct:_DFB_KeyboardData
map_size	video/directfb/SDL_DirectFB_video.h	/^    int             map_size;   \/* size of map *\/$/;"	m	struct:_DFB_KeyboardData
mapping	joystick/SDL_gamecontroller.c	/^    char *mapping;$/;"	m	struct:_ControllerMapping_t	file:
mapping	joystick/SDL_gamecontroller.c	/^    struct _SDL_ControllerMapping mapping; \/* the mapping object for this controller *\/$/;"	m	struct:_SDL_GameController	typeref:struct:_SDL_GameController::_SDL_ControllerMapping	file:
mark_inuse_foot	stdlib/SDL_malloc.c	2460;"	d	file:
mark_inuse_foot	stdlib/SDL_malloc.c	2479;"	d	file:
mark_smallmap	stdlib/SDL_malloc.c	2345;"	d	file:
mark_treemap	stdlib/SDL_malloc.c	2349;"	d	file:
mask	joystick/SDL_gamecontroller.c	/^    Uint8 mask;$/;"	m	struct:_SDL_HatMapping	file:
mask_tree	video/windows/SDL_windowsshape.h	/^    SDL_ShapeTree *mask_tree;$/;"	m	struct:__anon58
mastering	audio/xaudio2/SDL_xaudio2.c	/^    IXAudio2MasteringVoice *mastering;$/;"	m	struct:SDL_PrivateAudioData	file:
matrixStack	render/direct3d/SDL_render_d3d.c	/^    ID3DXMatrixStack *matrixStack;$/;"	m	struct:__anon94	file:
max	joystick/darwin/SDL_sysjoystick_c.h	/^    long max;                   \/* reported max value possible *\/$/;"	m	struct:recElement
maxIntVal	audio/sdlgenaudiocvt.pl	/^sub maxIntVal {$/;"	s
maxReport	joystick/darwin/SDL_sysjoystick_c.h	/^    long maxReport;             \/* max returned value *\/$/;"	m	struct:recElement
max_color	video/directfb/SDL_DirectFB_WM.h	/^    DFBColor max_color;$/;"	m	struct:_DFB_Theme
max_display_modes	video/SDL_sysvideo.h	/^    int max_display_modes;$/;"	m	struct:SDL_VideoDisplay
max_fingers	events/SDL_touch_c.h	/^    int max_fingers;$/;"	m	struct:SDL_Touch
max_footprint	stdlib/SDL_malloc.c	/^    size_t max_footprint;$/;"	m	struct:malloc_state	file:
max_h	video/SDL_sysvideo.h	/^    int max_w, max_h;$/;"	m	struct:SDL_Window
max_len	audio/SDL_sysaudio.h	/^    int max_len;                \/* the maximum length in bytes *\/$/;"	m	struct:__anon107
max_w	video/SDL_sysvideo.h	/^    int max_w, max_h;$/;"	m	struct:SDL_Window
mchunk	stdlib/SDL_malloc.c	/^typedef struct malloc_chunk mchunk;$/;"	t	typeref:struct:malloc_chunk	file:
mchunkptr	stdlib/SDL_malloc.c	/^typedef struct malloc_chunk *mchunkptr;$/;"	t	typeref:struct:malloc_chunk	file:
mdc	video/windows/SDL_windowswindow.h	/^    HDC mdc;$/;"	m	struct:__anon57
mem2chunk	stdlib/SDL_malloc.c	1713;"	d	file:
mem_close	file/SDL_rwops.c	/^mem_close(SDL_RWops * context)$/;"	f	file:
mem_read	file/SDL_rwops.c	/^mem_read(SDL_RWops * context, void *ptr, size_t size, size_t maxnum)$/;"	f	file:
mem_seek	file/SDL_rwops.c	/^mem_seek(SDL_RWops * context, Sint64 offset, int whence)$/;"	f	file:
mem_size	file/SDL_rwops.c	/^mem_size(SDL_RWops * context)$/;"	f	file:
mem_write	file/SDL_rwops.c	/^mem_write(SDL_RWops * context, const void *ptr, size_t size, size_t num)$/;"	f	file:
mem_writeconst	file/SDL_rwops.c	/^mem_writeconst(SDL_RWops * context, const void *ptr, size_t size, size_t num)$/;"	f	file:
memcpy	stdlib/SDL_malloc.c	634;"	d	file:
memcpy	stdlib/SDL_qsort.c	75;"	d	file:
memcpy	stdlib/SDL_qsort.c	77;"	d	file:
memcpy	stdlib/SDL_stdlib.c	/^void * memcpy ( void * destination, const void * source, size_t num )$/;"	f
memmove	stdlib/SDL_qsort.c	79;"	d	file:
memmove	stdlib/SDL_qsort.c	81;"	d	file:
memset	stdlib/SDL_malloc.c	633;"	d	file:
messageboxdata	video/x11/SDL_x11messagebox.c	/^    const SDL_MessageBoxData *messageboxdata;$/;"	m	struct:SDL_MessageBoxDataX11	file:
mflags	stdlib/SDL_malloc.c	/^    flag_t mflags;$/;"	m	struct:malloc_state	file:
midAudioInit	core/android/SDL_android.c	/^static jmethodID midAudioInit;$/;"	v	file:
midAudioQuit	core/android/SDL_android.c	/^static jmethodID midAudioQuit;$/;"	v	file:
midAudioWriteByteBuffer	core/android/SDL_android.c	/^static jmethodID midAudioWriteByteBuffer;$/;"	v	file:
midAudioWriteShortBuffer	core/android/SDL_android.c	/^static jmethodID midAudioWriteShortBuffer;$/;"	v	file:
midCreateGLContext	core/android/SDL_android.c	/^static jmethodID midCreateGLContext;$/;"	v	file:
midDeleteGLContext	core/android/SDL_android.c	/^static jmethodID midDeleteGLContext;$/;"	v	file:
midFlipBuffers	core/android/SDL_android.c	/^static jmethodID midFlipBuffers;$/;"	v	file:
min	joystick/darwin/SDL_sysjoystick_c.h	/^    long min;                   \/* reported min value possible *\/$/;"	m	struct:recElement
minReport	joystick/darwin/SDL_sysjoystick_c.h	/^    long minReport;             \/* min returned value *\/$/;"	m	struct:recElement
min_h	video/SDL_sysvideo.h	/^    int min_w, min_h;$/;"	m	struct:SDL_Window
min_w	video/SDL_sysvideo.h	/^    int min_w, min_h;$/;"	m	struct:SDL_Window
minor_version	video/SDL_sysvideo.h	/^        int minor_version;$/;"	m	struct:SDL_VideoDevice::__anon27
minor_version	video/x11/edid.h	/^    int			minor_version;$/;"	m	struct:MonitorInfo
minsize_for_tree_index	stdlib/SDL_malloc.c	2334;"	d	file:
mix8	audio/SDL_mixer.c	/^static const Uint8 mix8[] = {$/;"	v	file:
mixbuf	audio/alsa/SDL_alsa_audio.h	/^    Uint8 *mixbuf;$/;"	m	struct:SDL_PrivateAudioData
mixbuf	audio/arts/SDL_artsaudio.h	/^    Uint8 *mixbuf;$/;"	m	struct:SDL_PrivateAudioData
mixbuf	audio/bsd/SDL_bsdaudio.h	/^    Uint8 *mixbuf;$/;"	m	struct:SDL_PrivateAudioData
mixbuf	audio/directsound/SDL_directsound.h	/^    LPDIRECTSOUNDBUFFER mixbuf;$/;"	m	struct:SDL_PrivateAudioData
mixbuf	audio/disk/SDL_diskaudio.h	/^    Uint8 *mixbuf;$/;"	m	struct:SDL_PrivateAudioData
mixbuf	audio/dsp/SDL_dspaudio.h	/^    Uint8 *mixbuf;$/;"	m	struct:SDL_PrivateAudioData
mixbuf	audio/dummy/SDL_dummyaudio.h	/^    Uint8 *mixbuf;$/;"	m	struct:SDL_PrivateAudioData
mixbuf	audio/esd/SDL_esdaudio.h	/^    Uint8 *mixbuf;$/;"	m	struct:SDL_PrivateAudioData
mixbuf	audio/fusionsound/SDL_fsaudio.h	/^    Uint8 *mixbuf;$/;"	m	struct:SDL_PrivateAudioData
mixbuf	audio/nas/SDL_nasaudio.h	/^    Uint8 *mixbuf;$/;"	m	struct:SDL_PrivateAudioData
mixbuf	audio/paudio/SDL_paudio.h	/^    Uint8 *mixbuf;$/;"	m	struct:SDL_PrivateAudioData
mixbuf	audio/pulseaudio/SDL_pulseaudio.h	/^    Uint8 *mixbuf;$/;"	m	struct:SDL_PrivateAudioData
mixbuf	audio/sndio/SDL_sndioaudio.h	/^    Uint8 *mixbuf;$/;"	m	struct:SDL_PrivateAudioData
mixbuf	audio/sun/SDL_sunaudio.h	/^    Uint8 *mixbuf;              \/* The app mixing buffer *\/$/;"	m	struct:SDL_PrivateAudioData
mixbuf	audio/winmm/SDL_winmm.h	/^    Uint8 *mixbuf;              \/* The raw allocated mixing buffer *\/$/;"	m	struct:SDL_PrivateAudioData
mixbuf	audio/xaudio2/SDL_xaudio2.c	/^    Uint8 *mixbuf;$/;"	m	struct:SDL_PrivateAudioData	file:
mixbufs	audio/psp/SDL_pspaudio.h	/^    Uint8   *mixbufs[NUM_BUFFERS];$/;"	m	struct:SDL_PrivateAudioData
mixer_lock	audio/SDL_sysaudio.h	/^    SDL_mutex *mixer_lock;$/;"	m	struct:SDL_AudioDevice
mixlen	audio/alsa/SDL_alsa_audio.h	/^    int mixlen;$/;"	m	struct:SDL_PrivateAudioData
mixlen	audio/arts/SDL_artsaudio.h	/^    int mixlen;$/;"	m	struct:SDL_PrivateAudioData
mixlen	audio/bsd/SDL_bsdaudio.h	/^    int mixlen;$/;"	m	struct:SDL_PrivateAudioData
mixlen	audio/directsound/SDL_directsound.h	/^    int mixlen;$/;"	m	struct:SDL_PrivateAudioData
mixlen	audio/disk/SDL_diskaudio.h	/^    Uint32 mixlen;$/;"	m	struct:SDL_PrivateAudioData
mixlen	audio/dsp/SDL_dspaudio.h	/^    int mixlen;$/;"	m	struct:SDL_PrivateAudioData
mixlen	audio/dummy/SDL_dummyaudio.h	/^    Uint32 mixlen;$/;"	m	struct:SDL_PrivateAudioData
mixlen	audio/esd/SDL_esdaudio.h	/^    int mixlen;$/;"	m	struct:SDL_PrivateAudioData
mixlen	audio/fusionsound/SDL_fsaudio.h	/^    int mixlen;$/;"	m	struct:SDL_PrivateAudioData
mixlen	audio/nas/SDL_nasaudio.h	/^    int mixlen;$/;"	m	struct:SDL_PrivateAudioData
mixlen	audio/paudio/SDL_paudio.h	/^    int mixlen;$/;"	m	struct:SDL_PrivateAudioData
mixlen	audio/pulseaudio/SDL_pulseaudio.h	/^    int mixlen;$/;"	m	struct:SDL_PrivateAudioData
mixlen	audio/sndio/SDL_sndioaudio.h	/^    int mixlen;$/;"	m	struct:SDL_PrivateAudioData
mixlen	audio/xaudio2/SDL_xaudio2.c	/^    int mixlen;$/;"	m	struct:SDL_PrivateAudioData	file:
mixsamples	audio/fusionsound/SDL_fsaudio.h	/^    int mixsamples;$/;"	m	struct:SDL_PrivateAudioData
mmap_alloc	stdlib/SDL_malloc.c	/^mmap_alloc(mstate m, size_t nb)$/;"	f	file:
mmap_resize	stdlib/SDL_malloc.c	/^mmap_resize(mstate m, mchunkptr oldp, size_t nb)$/;"	f	file:
mmap_threshold	stdlib/SDL_malloc.c	/^    size_t mmap_threshold;$/;"	m	struct:malloc_params	file:
mmx_i2r	render/mmx.h	178;"	d
mmx_i2r	render/mmx.h	284;"	d
mmx_m2m	render/mmx.h	260;"	d
mmx_m2m	render/mmx.h	302;"	d
mmx_m2r	render/mmx.h	199;"	d
mmx_m2r	render/mmx.h	289;"	d
mmx_r2m	render/mmx.h	220;"	d
mmx_r2m	render/mmx.h	294;"	d
mmx_r2r	render/mmx.h	239;"	d
mmx_r2r	render/mmx.h	299;"	d
mmx_t	render/mmx.h	/^} __attribute__ ((aligned(8))) mmx_t;   \/* On an 8-byte (64-bit) boundary *\/$/;"	t	typeref:union:__anon97
mod	video/uikit/keyinfotable.h	/^    Uint16 mod;$/;"	m	struct:__anon28
modMode	render/SDL_sysrender.h	/^    int modMode;                \/**< The texture modulation mode *\/$/;"	m	struct:SDL_Texture
mode	video/SDL_sysvideo.h	/^    SDL_WindowShapeMode mode;$/;"	m	struct:SDL_WindowShaper
model_year	video/x11/edid.h	/^    int			model_year;		\/* -1 if not specified *\/$/;"	m	struct:MonitorInfo
modelist	video/directfb/SDL_DirectFB_modes.c	/^    SDL_DisplayMode *modelist;$/;"	m	struct:modes_callback_t	file:
moderef	video/cocoa/SDL_cocoamodes.h	/^    const void *moderef;$/;"	m	struct:__anon42
modes_callback_t	video/directfb/SDL_DirectFB_modes.c	/^struct modes_callback_t$/;"	s	file:
modifierFlags	video/cocoa/SDL_cocoavideo.h	/^    unsigned int modifierFlags;$/;"	m	struct:SDL_VideoData
modstate	events/SDL_keyboard.c	/^    Uint16 modstate;$/;"	m	struct:SDL_Keyboard	file:
morecore_mutex	stdlib/SDL_malloc.c	/^static MLOCK_T morecore_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
morecore_mutex	stdlib/SDL_malloc.c	/^static MLOCK_T morecore_mutex;$/;"	v	file:
mouseID	events/SDL_mouse_c.h	/^    SDL_MouseID mouseID;$/;"	m	struct:__anon65
mouse_button_flags	video/windows/SDL_windowswindow.h	/^    WPARAM mouse_button_flags;$/;"	m	struct:__anon57
mouse_id	video/directfb/SDL_DirectFB_video.h	/^    int                 mouse_id[0x100];$/;"	m	struct:_DFB_DeviceData
mouse_over_index	video/x11/SDL_x11messagebox.c	/^    int mouse_over_index;               \/* Index into buttondata\/buttonpos for button mouse is over (or -1). *\/$/;"	m	struct:SDL_MessageBoxDataX11	file:
movd	render/mmx.h	334;"	d
movd_m2r	render/mmx.h	331;"	d
movd_r2m	render/mmx.h	332;"	d
movd_r2r	render/mmx.h	333;"	d
movq	render/mmx.h	319;"	d
movq_m2r	render/mmx.h	316;"	d
movq_r2m	render/mmx.h	317;"	d
movq_r2r	render/mmx.h	318;"	d
mparams	stdlib/SDL_malloc.c	/^static struct malloc_params mparams;$/;"	v	typeref:struct:malloc_params	file:
msegment	stdlib/SDL_malloc.c	/^typedef struct malloc_segment msegment;$/;"	t	typeref:struct:malloc_segment	file:
msegmentptr	stdlib/SDL_malloc.c	/^typedef struct malloc_segment *msegmentptr;$/;"	t	typeref:struct:malloc_segment	file:
msg	events/SDL_events.c	/^    SDL_SysWMmsg msg;$/;"	m	struct:_SDL_EventEntry	file:
msg	events/SDL_events.c	/^    SDL_SysWMmsg msg;$/;"	m	struct:_SDL_SysWMEntry	file:
mspace	stdlib/SDL_malloc.c	/^    typedef void *mspace;$/;"	t	file:
mspace_calloc	stdlib/SDL_malloc.c	/^mspace_calloc(mspace msp, size_t n_elements, size_t elem_size)$/;"	f
mspace_footprint	stdlib/SDL_malloc.c	/^mspace_footprint(mspace msp)$/;"	f
mspace_free	stdlib/SDL_malloc.c	/^mspace_free(mspace msp, void *mem)$/;"	f
mspace_independent_calloc	stdlib/SDL_malloc.c	/^mspace_independent_calloc(mspace msp, size_t n_elements,$/;"	f
mspace_independent_comalloc	stdlib/SDL_malloc.c	/^mspace_independent_comalloc(mspace msp, size_t n_elements,$/;"	f
mspace_mallinfo	stdlib/SDL_malloc.c	/^mspace_mallinfo(mspace msp)$/;"	f
mspace_malloc	stdlib/SDL_malloc.c	/^mspace_malloc(mspace msp, size_t bytes)$/;"	f
mspace_malloc_stats	stdlib/SDL_malloc.c	/^mspace_malloc_stats(mspace msp)$/;"	f
mspace_mallopt	stdlib/SDL_malloc.c	/^mspace_mallopt(int param_number, int value)$/;"	f
mspace_max_footprint	stdlib/SDL_malloc.c	/^mspace_max_footprint(mspace msp)$/;"	f
mspace_memalign	stdlib/SDL_malloc.c	/^mspace_memalign(mspace msp, size_t alignment, size_t bytes)$/;"	f
mspace_realloc	stdlib/SDL_malloc.c	/^mspace_realloc(mspace msp, void *oldmem, size_t bytes)$/;"	f
mspace_trim	stdlib/SDL_malloc.c	/^mspace_trim(mspace msp, size_t pad)$/;"	f
mstate	stdlib/SDL_malloc.c	/^typedef struct malloc_state *mstate;$/;"	t	typeref:struct:malloc_state	file:
msw	libm/math_private.h	/^        u_int32_t msw;$/;"	m	struct:__anon102::__anon103
msw	libm/math_private.h	/^        u_int32_t msw;$/;"	m	struct:__anon104::__anon105
multiple	audio/SDL_audio_c.h	/^    int multiple;$/;"	m	struct:__anon113
multisamplebuffers	video/SDL_sysvideo.h	/^        int multisamplebuffers;$/;"	m	struct:SDL_VideoDevice::__anon27
multisamplesamples	video/SDL_sysvideo.h	/^        int multisamplesamples;$/;"	m	struct:SDL_VideoDevice::__anon27
mutex	haptic/windows/SDL_syshaptic.c	/^    SDL_mutex *mutex;$/;"	m	struct:haptic_hwdata	file:
mutex	stdlib/SDL_malloc.c	/^    MLOCK_T mutex;              \/* locate lock among fields that rarely change *\/$/;"	m	struct:malloc_state	file:
nInstanceID	joystick/windows/SDL_dxjoystick.c	/^    SDL_JoystickID nInstanceID;$/;"	m	struct:JoyStick_DeviceData_	file:
n_detailed_timings	video/x11/edid.h	/^    int			n_detailed_timings;$/;"	m	struct:MonitorInfo
name	SDL_hints.c	/^    char *name;$/;"	m	struct:SDL_Hint	file:
name	audio/SDL_sysaudio.h	/^    const char *name;$/;"	m	struct:AudioBootStrap
name	audio/SDL_sysaudio.h	/^    const char *name;$/;"	m	struct:SDL_AudioDriver
name	audio/arts/SDL_artsaudio.c	/^    const char *name;$/;"	m	struct:__anon111	file:
name	audio/esd/SDL_esdaudio.c	/^    const char *name;$/;"	m	struct:__anon110	file:
name	audio/fusionsound/SDL_fsaudio.c	/^    const char *name;$/;"	m	struct:__anon108	file:
name	audio/qsa/SDL_qsa_audio.c	/^    char name[QSA_MAX_NAME_LENGTH];     \/* Long audio device name for SDL  *\/$/;"	m	struct:_QSA_Device	file:
name	haptic/darwin/SDL_syshaptic.c	/^    char name[256];             \/* Name of the device. *\/$/;"	m	struct:__anon99	file:
name	haptic/windows/SDL_syshaptic.c	/^    char *name;$/;"	m	struct:__anon100	file:
name	joystick/SDL_gamecontroller.c	/^    char *name;$/;"	m	struct:_ControllerMapping_t	file:
name	joystick/SDL_gamecontroller.c	/^    const char *name;$/;"	m	struct:_SDL_ControllerMapping	file:
name	joystick/SDL_sysjoystick.h	/^    char *name;                 \/* Joystick name - system dependent *\/$/;"	m	struct:_SDL_Joystick
name	joystick/bsd/SDL_sysjoystick.c	/^    const char *name;$/;"	m	struct:__anon68	file:
name	joystick/linux/SDL_sysjoystick.c	/^    char *name;   \/* "SideWinder 3D Pro" or whatever *\/$/;"	m	struct:SDL_joylist_item	file:
name	stdlib/SDL_iconv.c	/^    const char *name;$/;"	m	struct:__anon7	file:
name	thread/SDL_thread_c.h	/^    char *name;$/;"	m	struct:SDL_Thread
name	video/SDL_sysvideo.h	/^    char *name;$/;"	m	struct:SDL_VideoDisplay
name	video/SDL_sysvideo.h	/^    char *name;$/;"	m	struct:SDL_WindowUserData
name	video/SDL_sysvideo.h	/^    const char *name;$/;"	m	struct:SDL_VideoDevice
name	video/SDL_sysvideo.h	/^    const char *name;$/;"	m	struct:VideoBootStrap
nas_handle	audio/nas/SDL_nasaudio.c	/^static void *nas_handle = NULL;$/;"	v	file:
nas_library	audio/nas/SDL_nasaudio.c	/^static const char *nas_library = SDL_AUDIO_DRIVER_NAS_DYNAMIC;$/;"	v	file:
native	render/SDL_sysrender.h	/^    SDL_Texture *native;$/;"	m	struct:SDL_Texture
naxes	haptic/SDL_syshaptic.h	/^    int naxes;                  \/* Number of axes on the device. *\/$/;"	m	struct:_SDL_Haptic
naxes	joystick/SDL_sysjoystick.h	/^    int naxes;                  \/* Number of axis controls on the joystick *\/$/;"	m	struct:_SDL_Joystick
nballs	joystick/SDL_sysjoystick.h	/^    int nballs;                 \/* Number of trackballs on the joystick *\/$/;"	m	struct:_SDL_Joystick
nbuttons	joystick/SDL_sysjoystick.h	/^    int nbuttons;               \/* Number of buttons on the joystick *\/$/;"	m	struct:_SDL_Joystick
neffects	haptic/SDL_syshaptic.h	/^    int neffects;               \/* Maximum amount of effects *\/$/;"	m	struct:_SDL_Haptic
negative_hsync	video/x11/edid.h	/^	    int negative_hsync;$/;"	m	struct:DetailedTiming::__anon12::__anon14
negative_vsync	video/x11/edid.h	/^	    int negative_vsync;$/;"	m	struct:DetailedTiming::__anon12::__anon14
net_wm	video/x11/SDL_x11video.h	/^    SDL_bool net_wm;$/;"	m	struct:SDL_VideoData
new_axes	joystick/beos/SDL_bejoystick.cc	/^        int16 *new_axes;$/;"	m	struct:joystick_hwdata	file:
new_hats	joystick/beos/SDL_bejoystick.cc	/^        uint8 *new_hats;$/;"	m	struct:joystick_hwdata	file:
next	SDL_hints.c	/^    struct SDL_Hint *next;$/;"	m	struct:SDL_Hint	typeref:struct:SDL_Hint::SDL_Hint	file:
next	SDL_hints.c	/^    struct SDL_HintWatch *next;$/;"	m	struct:SDL_HintWatch	typeref:struct:SDL_HintWatch::SDL_HintWatch	file:
next	SDL_log.c	/^    struct SDL_LogLevel *next;$/;"	m	struct:SDL_LogLevel	typeref:struct:SDL_LogLevel::SDL_LogLevel	file:
next	events/SDL_events.c	/^    struct SDL_EventWatcher *next;$/;"	m	struct:SDL_EventWatcher	typeref:struct:SDL_EventWatcher::SDL_EventWatcher	file:
next	events/SDL_events.c	/^    struct _SDL_EventEntry *next;$/;"	m	struct:_SDL_EventEntry	typeref:struct:_SDL_EventEntry::_SDL_EventEntry	file:
next	events/SDL_events.c	/^    struct _SDL_SysWMEntry *next;$/;"	m	struct:_SDL_SysWMEntry	typeref:struct:_SDL_SysWMEntry::_SDL_SysWMEntry	file:
next	events/SDL_mouse_c.h	/^    struct SDL_Cursor *next;$/;"	m	struct:SDL_Cursor	typeref:struct:SDL_Cursor::SDL_Cursor
next	joystick/SDL_gamecontroller.c	/^    struct _ControllerMapping_t *next;$/;"	m	struct:_ControllerMapping_t	typeref:struct:_ControllerMapping_t::_ControllerMapping_t	file:
next	joystick/SDL_gamecontroller.c	/^    struct _SDL_GameController *next; \/* pointer to next game controller we have allocated *\/$/;"	m	struct:_SDL_GameController	typeref:struct:_SDL_GameController::_SDL_GameController	file:
next	joystick/SDL_sysjoystick.h	/^    struct _SDL_Joystick *next; \/* pointer to next joystick we have allocated *\/$/;"	m	struct:_SDL_Joystick	typeref:struct:_SDL_Joystick::_SDL_Joystick
next	joystick/linux/SDL_sysjoystick.c	/^    struct SDL_joylist_item *next;$/;"	m	struct:SDL_joylist_item	typeref:struct:SDL_joylist_item::SDL_joylist_item	file:
next	render/SDL_sysrender.h	/^    SDL_Texture *next;$/;"	m	struct:SDL_Texture
next	render/opengl/SDL_render_gl.c	/^    GL_FBOList *next;$/;"	m	struct:GL_FBOList	file:
next	render/opengles/SDL_render_gles.c	/^   GLES_FBOList *next;$/;"	m	struct:GLES_FBOList	file:
next	render/opengles2/SDL_render_gles2.c	/^    struct GLES2_ProgramCacheEntry *next;$/;"	m	struct:GLES2_ProgramCacheEntry	typeref:struct:GLES2_ProgramCacheEntry::GLES2_ProgramCacheEntry	file:
next	render/opengles2/SDL_render_gles2.c	/^    struct GLES2_ShaderCacheEntry *next;$/;"	m	struct:GLES2_ShaderCacheEntry	typeref:struct:GLES2_ShaderCacheEntry::GLES2_ShaderCacheEntry	file:
next	render/opengles2/SDL_render_gles2.c	/^   GLES2_FBOList *next;$/;"	m	struct:GLES2_FBOList	file:
next	stdlib/SDL_malloc.c	/^    struct malloc_segment *next;        \/* ptr to next segment *\/$/;"	m	struct:malloc_segment	typeref:struct:malloc_segment::malloc_segment	file:
next	thread/SDL_thread.c	/^    struct SDL_TLSEntry *next;$/;"	m	struct:SDL_TLSEntry	typeref:struct:SDL_TLSEntry::SDL_TLSEntry	file:
next	timer/SDL_timer.c	/^    struct _SDL_Timer *next;$/;"	m	struct:_SDL_Timer	typeref:struct:_SDL_Timer::_SDL_Timer	file:
next	timer/SDL_timer.c	/^    struct _SDL_TimerMap *next;$/;"	m	struct:_SDL_TimerMap	typeref:struct:_SDL_TimerMap::_SDL_TimerMap	file:
next	video/SDL_sysvideo.h	/^    SDL_Window *next;$/;"	m	struct:SDL_Window
next	video/SDL_sysvideo.h	/^    struct SDL_WindowUserData *next;$/;"	m	struct:SDL_WindowUserData	typeref:struct:SDL_WindowUserData::SDL_WindowUserData
next	video/directfb/SDL_DirectFB_opengl.h	/^    DirectFB_GLContext  *next;$/;"	m	struct:_DirectFB_GLContext
next	video/directfb/SDL_DirectFB_window.h	/^    SDL_Window              *next;$/;"	m	struct:_DFB_WindowData
nextID	timer/SDL_timer.c	/^    SDL_atomic_t nextID;$/;"	m	struct:__anon114	file:
next_buffer	audio/psp/SDL_pspaudio.h	/^    int     next_buffer;$/;"	m	struct:SDL_PrivateAudioData
next_buffer	audio/winmm/SDL_winmm.h	/^    int next_buffer;$/;"	m	struct:SDL_PrivateAudioData
next_chunk	stdlib/SDL_malloc.c	1760;"	d	file:
next_error_callback	render/opengl/SDL_render_gl.c	/^    GLDEBUGPROCARB next_error_callback;$/;"	m	struct:__anon90	file:
next_error_userparam	render/opengl/SDL_render_gl.c	/^    GLvoid *next_error_userparam;$/;"	m	struct:__anon90	file:
next_frame	audio/arts/SDL_artsaudio.h	/^    float next_frame;$/;"	m	struct:SDL_PrivateAudioData
next_frame	audio/bsd/SDL_bsdaudio.h	/^    float next_frame;$/;"	m	struct:SDL_PrivateAudioData
next_frame	audio/esd/SDL_esdaudio.h	/^    float next_frame;$/;"	m	struct:SDL_PrivateAudioData
next_frame	audio/paudio/SDL_paudio.h	/^    float next_frame;$/;"	m	struct:SDL_PrivateAudioData
next_object_id	video/SDL_sysvideo.h	/^    Uint32 next_object_id;$/;"	m	struct:SDL_VideoDevice
next_pinuse	stdlib/SDL_malloc.c	1764;"	d	file:
next_string	power/linux/SDL_syspower.c	/^next_string(char **_ptr, char **_str)$/;"	f	file:
nextbuf	audio/xaudio2/SDL_xaudio2.c	/^    Uint8 *nextbuf;$/;"	m	struct:SDL_PrivateAudioData	file:
nhats	joystick/SDL_sysjoystick.h	/^    int nhats;                  \/* Number of hats on the joystick *\/$/;"	m	struct:_SDL_Joystick
nibble	joystick/SDL_joystick.c	/^static unsigned char nibble( char c )$/;"	f	file:
normal_blit	video/SDL_blit_N.c	/^static const struct blit_table *const normal_blit[] = {$/;"	v	file:
normal_blit_1	video/SDL_blit_N.c	/^static const struct blit_table normal_blit_1[] = {$/;"	v	typeref:struct:blit_table	file:
normal_blit_2	video/SDL_blit_N.c	/^static const struct blit_table normal_blit_2[] = {$/;"	v	typeref:struct:blit_table	file:
normal_blit_3	video/SDL_blit_N.c	/^static const struct blit_table normal_blit_3[] = {$/;"	v	typeref:struct:blit_table	file:
normal_blit_4	video/SDL_blit_N.c	/^static const struct blit_table normal_blit_4[] = {$/;"	v	typeref:struct:blit_table	file:
notificationPort	joystick/darwin/SDL_sysjoystick.c	/^IONotificationPortRef notificationPort = 0;$/;"	v
notificationPort	joystick/darwin/SDL_sysjoystick_c.h	/^    IONotificationPortRef notificationPort; \/* port to be notified on joystick removal *\/$/;"	m	struct:joystick_hwdata
npio2_hw	libm/e_rem_pio2.c	/^static const int32_t npio2_hw[] = {$/;"	v	file:
nplaying	haptic/SDL_syshaptic.h	/^    int nplaying;               \/* Maximum amount of effects to play at the same time *\/$/;"	m	struct:_SDL_Haptic
nscontexts	video/cocoa/SDL_cocoawindow.h	/^    NSMutableArray *nscontexts;$/;"	m	struct:SDL_WindowData
nswindow	video/cocoa/SDL_cocoawindow.h	/^    NSWindow *nswindow;$/;"	m	struct:SDL_WindowData
ntoa_table	stdlib/SDL_string.c	/^static const char ntoa_table[] = {$/;"	v	file:
num	joystick/windows/SDL_dxjoystick_c.h	/^    Uint8 num;$/;"	m	struct:input_t
numDollarTemplates	events/SDL_gesture.c	/^    int numDollarTemplates;$/;"	m	struct:__anon64	file:
numDownFingers	events/SDL_gesture.c	/^    Uint16 numDownFingers;$/;"	m	struct:__anon64	file:
numPoints	events/SDL_gesture.c	/^    int numPoints;$/;"	m	struct:__anon62	file:
num_buffers	audio/directsound/SDL_directsound.h	/^    int num_buffers;$/;"	m	struct:SDL_PrivateAudioData
num_display_modes	video/SDL_sysvideo.h	/^    int num_display_modes;$/;"	m	struct:SDL_VideoDisplay
num_displays	video/SDL_sysvideo.h	/^    int num_displays;$/;"	m	struct:SDL_VideoDevice
num_fingers	events/SDL_touch_c.h	/^    int num_fingers;$/;"	m	struct:SDL_Touch
num_keyboard	video/directfb/SDL_DirectFB_video.h	/^    int                 num_keyboard;$/;"	m	struct:_DFB_DeviceData
num_mice	video/directfb/SDL_DirectFB_video.h	/^    int                 num_mice;$/;"	m	struct:_DFB_DeviceData
num_texture_units	render/opengl/SDL_render_gl.c	/^    GLint num_texture_units;$/;"	m	struct:__anon90	file:
number_of_bits_set	render/SDL_yuv_sw.c	/^number_of_bits_set(Uint32 a)$/;"	f	file:
numbuttons	video/x11/SDL_x11messagebox.c	/^    int numbuttons;                     \/* Count of buttons. *\/$/;"	m	struct:SDL_MessageBoxDataX11	file:
numjoysticks	joystick/linux/SDL_sysjoystick.c	/^static int numjoysticks = 0;$/;"	v	file:
numlines	video/x11/SDL_x11messagebox.c	/^    int numlines;                       \/* Count of Text lines. *\/$/;"	m	struct:SDL_MessageBoxDataX11	file:
nummodes	video/directfb/SDL_DirectFB_modes.c	/^    int nummodes;$/;"	m	struct:modes_callback_t	file:
numscreens	video/directfb/SDL_DirectFB_modes.c	/^    int numscreens;$/;"	m	struct:screen_callback_t	file:
numwindows	video/x11/SDL_x11video.h	/^    int numwindows;$/;"	m	struct:SDL_VideoData
offset	joystick/windows/SDL_mmjoystick.c	/^        int offset;$/;"	m	struct:joystick_hwdata::_transaxis	file:
ofs	joystick/windows/SDL_dxjoystick_c.h	/^    DWORD ofs;$/;"	m	struct:input_t
ok_address	stdlib/SDL_malloc.c	2422;"	d	file:
ok_address	stdlib/SDL_malloc.c	2431;"	d	file:
ok_cinuse	stdlib/SDL_malloc.c	2426;"	d	file:
ok_cinuse	stdlib/SDL_malloc.c	2433;"	d	file:
ok_magic	stdlib/SDL_malloc.c	2439;"	d	file:
ok_magic	stdlib/SDL_malloc.c	2441;"	d	file:
ok_next	stdlib/SDL_malloc.c	2424;"	d	file:
ok_next	stdlib/SDL_malloc.c	2432;"	d	file:
ok_pinuse	stdlib/SDL_malloc.c	2428;"	d	file:
ok_pinuse	stdlib/SDL_malloc.c	2434;"	d	file:
one	libm/e_pow.c	/^         zero = 0.0, one = 1.0, two = 2.0, two53 = 9007199254740992.0,  \/* 0x43400000, 0x00000000 *\/$/;"	v	file:
one	libm/e_sqrt.c	/^static const double one = 1.0, tiny = 1.0e-300;$/;"	v	file:
one	libm/e_sqrt.c	/^static double one = 1.0, tiny = 1.0e-300;$/;"	v	file:
one	libm/k_cos.c	/^  one = 1.00000000000000000000e+00,     \/* 0x3FF00000, 0x00000000 *\/$/;"	v	file:
one	libm/k_rem_pio2.c	/^  zero = 0.0, one = 1.0, two24 = 1.67772160000000000000e+07,    \/* 0x41700000, 0x00000000 *\/$/;"	v	file:
one	libm/s_atan.c	/^one   = 1.0,$/;"	v	file:
one_blit	video/SDL_blit_1.c	/^static const SDL_BlitFunc one_blit[] = {$/;"	v	file:
one_blitkey	video/SDL_blit_1.c	/^static const SDL_BlitFunc one_blitkey[] = {$/;"	v	file:
opacity	video/directfb/SDL_DirectFB_window.h	/^    Uint8                   opacity;$/;"	m	struct:_DFB_WindowData
open_acpi_file	power/linux/SDL_syspower.c	/^static int open_acpi_file(const char *base, const char *node, const char *key)$/;"	f	file:
open_audio_device	audio/SDL_audio.c	/^open_audio_device(const char *devname, int iscapture,$/;"	f	file:
open_devices	audio/SDL_audio.c	/^static SDL_AudioDevice *open_devices[16];$/;"	v	file:
open_file	video/sdlgenblit.pl	/^sub open_file {$/;"	s
opened	audio/SDL_sysaudio.h	/^    int opened;$/;"	m	struct:SDL_AudioDevice
ordblks	stdlib/SDL_malloc.c	/^    MALLINFO_FIELD_TYPE ordblks;        \/* number of free chunks *\/$/;"	m	struct:mallinfo	file:
orig_x11_errhandler	video/x11/SDL_x11video.c	/^static int (*orig_x11_errhandler) (Display *, XErrorEvent *) = NULL;$/;"	v	file:
original_x	events/SDL_mouse_c.h	/^    int original_x, original_y;$/;"	m	struct:__anon65
original_y	events/SDL_mouse_c.h	/^    int original_x, original_y;$/;"	m	struct:__anon65
oskeymap	video/directfb/SDL_DirectFB_events.c	/^static SDL_Scancode oskeymap[256];$/;"	v	file:
osversion	video/cocoa/SDL_cocoavideo.h	/^    SInt32 osversion;$/;"	m	struct:SDL_VideoData
output	audio/disk/SDL_diskaudio.h	/^    SDL_RWops *output;$/;"	m	struct:SDL_PrivateAudioData
output	joystick/sort_controllers.py	/^output = open(filename + ".new", "w")$/;"	v
outputCallback	audio/coreaudio/SDL_coreaudio.c	/^outputCallback(void *inRefCon,$/;"	f	file:
outputDeviceCount	audio/SDL_sysaudio.h	/^    int outputDeviceCount;$/;"	m	struct:SDL_AudioDriver
outputDevices	audio/SDL_sysaudio.h	/^    char **outputDevices;$/;"	m	struct:SDL_AudioDriver
outputFooter	audio/sdlgenaudiocvt.pl	/^sub outputFooter {$/;"	s
outputHeader	audio/sdlgenaudiocvt.pl	/^sub outputHeader {$/;"	s
output_copycore	video/sdlgenblit.pl	/^sub output_copycore$/;"	s
output_copydefs	video/sdlgenblit.pl	/^sub output_copydefs$/;"	s
output_copyfunc	video/sdlgenblit.pl	/^sub output_copyfunc$/;"	s
output_copyfunc_c	video/sdlgenblit.pl	/^sub output_copyfunc_c$/;"	s
output_copyfunc_h	video/sdlgenblit.pl	/^sub output_copyfunc_h$/;"	s
output_copyfuncname	video/sdlgenblit.pl	/^sub output_copyfuncname$/;"	s
output_copyfunctable	video/sdlgenblit.pl	/^sub output_copyfunctable$/;"	s
output_copyinc	video/sdlgenblit.pl	/^sub output_copyinc$/;"	s
overhead_for	stdlib/SDL_malloc.c	1782;"	d	file:
ovt	libm/e_pow.c	/^         ovt = 8.0085662595372944372e-0017,     \/* -(1024-log2(ovfl+.5ulp)) *\/$/;"	v	file:
owner	thread/generic/SDL_sysmutex.c	/^    SDL_threadID owner;$/;"	m	struct:SDL_mutex	file:
owner	thread/psp/SDL_sysmutex.c	/^    SDL_threadID owner;$/;"	m	struct:SDL_mutex	file:
owner	thread/pthread/SDL_sysmutex.c	/^    pthread_t owner;$/;"	m	struct:SDL_mutex	file:
p	events/SDL_gesture.c	/^    SDL_FloatPoint p[MAXPATHSIZE];$/;"	m	struct:__anon62	file:
pDirectSoundCaptureEnumerateW	audio/directsound/SDL_directsound.c	/^static fnDirectSoundCaptureEnumerateW pDirectSoundCaptureEnumerateW = NULL;$/;"	v	file:
pDirectSoundCreate8	audio/directsound/SDL_directsound.c	/^static fnDirectSoundCreate8 pDirectSoundCreate8 = NULL;$/;"	v	file:
pDirectSoundEnumerateW	audio/directsound/SDL_directsound.c	/^static fnDirectSoundEnumerateW pDirectSoundEnumerateW = NULL;$/;"	v	file:
pNext	joystick/darwin/SDL_sysjoystick_c.h	/^    struct joystick_hwdata *pNext;      \/* next device *\/$/;"	m	struct:joystick_hwdata	typeref:struct:joystick_hwdata::joystick_hwdata
pNext	joystick/darwin/SDL_sysjoystick_c.h	/^    struct recElement *pNext;   \/* next element in list *\/$/;"	m	struct:recElement	typeref:struct:recElement::recElement
pNext	joystick/windows/SDL_dxjoystick.c	/^    struct JoyStick_DeviceData_ *pNext;$/;"	m	struct:JoyStick_DeviceData_	typeref:struct:JoyStick_DeviceData_::JoyStick_DeviceData_	file:
pThreadStartParms	thread/windows/SDL_systhread.c	/^} tThreadStartParms, *pThreadStartParms;$/;"	t	typeref:struct:ThreadStartParms	file:
pVerFixedInfo	video/windows/SDL_windowskeyboard.c	551;"	d	file:
pVerFixedInfo	video/windows/SDL_windowskeyboard.c	573;"	d	file:
pXCreateIC	video/x11/SDL_x11dyn.c	/^SDL_DYNX11FN_XCreateIC pXCreateIC = NULL;$/;"	v
pXGetICValues	video/x11/SDL_x11dyn.c	/^SDL_DYNX11FN_XGetICValues pXGetICValues = NULL;$/;"	v
packssdw	render/mmx.h	572;"	d
packssdw_m2r	render/mmx.h	570;"	d
packssdw_r2r	render/mmx.h	571;"	d
packsswb	render/mmx.h	576;"	d
packsswb_m2r	render/mmx.h	574;"	d
packsswb_r2r	render/mmx.h	575;"	d
packuswb	render/mmx.h	584;"	d
packuswb_m2r	render/mmx.h	582;"	d
packuswb_r2r	render/mmx.h	583;"	d
pad	joystick/psp/SDL_sysjoystick.c	/^static SceCtrlData pad = { .Lx = 0, .Ly = 0, .Buttons = 0 };$/;"	v	file:
pad_request	stdlib/SDL_malloc.c	1722;"	d	file:
pad_sem	joystick/psp/SDL_sysjoystick.c	/^static SDL_sem *pad_sem = NULL;$/;"	v	file:
pad_zeroes	stdlib/SDL_string.c	/^    SDL_bool pad_zeroes;$/;"	m	struct:__anon4	file:
paddb	render/mmx.h	353;"	d
paddb_m2r	render/mmx.h	351;"	d
paddb_r2r	render/mmx.h	352;"	d
paddd	render/mmx.h	345;"	d
paddd_m2r	render/mmx.h	343;"	d
paddd_r2r	render/mmx.h	344;"	d
padding	video/SDL_RLEaccel.c	/^    Uint8 padding[3];$/;"	m	struct:__anon36	file:
paddsb	render/mmx.h	364;"	d
paddsb_m2r	render/mmx.h	362;"	d
paddsb_r2r	render/mmx.h	363;"	d
paddsw	render/mmx.h	360;"	d
paddsw_m2r	render/mmx.h	358;"	d
paddsw_r2r	render/mmx.h	359;"	d
paddusb	render/mmx.h	375;"	d
paddusb_m2r	render/mmx.h	373;"	d
paddusb_r2r	render/mmx.h	374;"	d
paddusw	render/mmx.h	371;"	d
paddusw_m2r	render/mmx.h	369;"	d
paddusw_r2r	render/mmx.h	370;"	d
paddw	render/mmx.h	349;"	d
paddw_m2r	render/mmx.h	347;"	d
paddw_r2r	render/mmx.h	348;"	d
page_align	stdlib/SDL_malloc.c	2130;"	d	file:
page_size	stdlib/SDL_malloc.c	/^    size_t page_size;$/;"	m	struct:malloc_params	file:
palette	video/directfb/SDL_DirectFB_render.c	/^    IDirectFBPalette *palette;$/;"	m	struct:__anon49	file:
pand	render/mmx.h	451;"	d
pand	render/mmx.h	461;"	d
pand_m2r	render/mmx.h	441;"	d
pand_m2r	render/mmx.h	459;"	d
pand_r2r	render/mmx.h	446;"	d
pand_r2r	render/mmx.h	460;"	d
pandn	render/mmx.h	469;"	d
pandn_m2r	render/mmx.h	467;"	d
pandn_r2r	render/mmx.h	468;"	d
param	timer/SDL_timer.c	/^    void *param;$/;"	m	struct:_SDL_Timer	file:
parent	audio/arts/SDL_artsaudio.h	/^    pid_t parent;$/;"	m	struct:SDL_PrivateAudioData
parent	audio/bsd/SDL_bsdaudio.h	/^    pid_t parent;$/;"	m	struct:SDL_PrivateAudioData
parent	audio/esd/SDL_esdaudio.h	/^    pid_t parent;$/;"	m	struct:SDL_PrivateAudioData
parent	stdlib/SDL_malloc.c	/^    struct malloc_tree_chunk *parent;$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
parse_valuators	video/x11/SDL_x11xinput2.c	/^static void parse_valuators(const double *input_values,unsigned char *mask,int mask_len,$/;"	f	file:
parsing_controllers	joystick/sort_controllers.py	/^            parsing_controllers = False$/;"	v
parsing_controllers	joystick/sort_controllers.py	/^            parsing_controllers = True$/;"	v
parsing_controllers	joystick/sort_controllers.py	/^parsing_controllers = False$/;"	v
parts	libm/math_private.h	/^    } parts;$/;"	m	union:__anon102	typeref:struct:__anon102::__anon103
parts	libm/math_private.h	/^    } parts;$/;"	m	union:__anon104	typeref:struct:__anon104::__anon105
path	events/SDL_gesture.c	/^    SDL_FloatPoint path[DOLLARNPOINTS];$/;"	m	struct:__anon63	file:
path	joystick/bsd/SDL_sysjoystick.c	/^    char *path;$/;"	m	struct:joystick_hwdata	file:
path	joystick/linux/SDL_sysjoystick.c	/^    char *path;   \/* "\/dev\/input\/event2" or whatever *\/$/;"	m	struct:SDL_joylist_item	file:
paused	audio/SDL_sysaudio.h	/^    int paused;$/;"	m	struct:SDL_AudioDevice
pbuttonid	video/x11/SDL_x11messagebox.c	/^    int *pbuttonid;                     \/* Pointer to user return buttonid value. *\/$/;"	m	struct:SDL_MessageBoxDataX11	file:
pcm_buf	audio/qsa/SDL_qsa_audio.h	/^    Uint8 *pcm_buf;$/;"	m	struct:SDL_PrivateAudioData
pcm_handle	audio/alsa/SDL_alsa_audio.h	/^    snd_pcm_t *pcm_handle;$/;"	m	struct:SDL_PrivateAudioData
pcm_len	audio/qsa/SDL_qsa_audio.h	/^    Uint32 pcm_len;$/;"	m	struct:SDL_PrivateAudioData
pcmpeqb	render/mmx.h	499;"	d
pcmpeqb_m2r	render/mmx.h	497;"	d
pcmpeqb_r2r	render/mmx.h	498;"	d
pcmpeqd	render/mmx.h	491;"	d
pcmpeqd_m2r	render/mmx.h	489;"	d
pcmpeqd_r2r	render/mmx.h	490;"	d
pcmpeqw	render/mmx.h	495;"	d
pcmpeqw_m2r	render/mmx.h	493;"	d
pcmpeqw_r2r	render/mmx.h	494;"	d
pcmpgtb	render/mmx.h	515;"	d
pcmpgtb_m2r	render/mmx.h	513;"	d
pcmpgtb_r2r	render/mmx.h	514;"	d
pcmpgtd	render/mmx.h	507;"	d
pcmpgtd_m2r	render/mmx.h	505;"	d
pcmpgtd_r2r	render/mmx.h	506;"	d
pcmpgtw	render/mmx.h	511;"	d
pcmpgtw_m2r	render/mmx.h	509;"	d
pcmpgtw_r2r	render/mmx.h	510;"	d
pending	timer/SDL_timer.c	/^    SDL_Timer * volatile pending;$/;"	m	struct:__anon114	file:
pending_focus	video/x11/SDL_x11window.h	/^    PendingFocusEnum pending_focus;$/;"	m	struct:__anon25
pending_focus_time	video/x11/SDL_x11window.h	/^    Uint32 pending_focus_time;$/;"	m	struct:__anon25
pfnCurrentEndThread	thread/windows/SDL_systhread.c	/^    pfnSDL_CurrentEndThread pfnCurrentEndThread;$/;"	m	struct:ThreadStartParms	file:
pfnSDL_CurrentBeginThread	thread/windows/SDL_systhread.c	/^typedef uintptr_t(__cdecl * pfnSDL_CurrentBeginThread) (void *, unsigned,$/;"	t	file:
pfnSDL_CurrentBeginThread	thread/windows/SDL_systhread.c	/^typedef unsigned long (__cdecl *pfnSDL_CurrentBeginThread) (void *, unsigned,$/;"	t	file:
pfnSDL_CurrentBeginThread	thread/windows/SDL_systhread.c	/^typedef unsigned long (__watcall * pfnSDL_CurrentBeginThread) (void *,$/;"	t	file:
pfnSDL_CurrentEndThread	thread/windows/SDL_systhread.c	/^typedef void (__cdecl * pfnSDL_CurrentEndThread) (unsigned code);$/;"	t	file:
pfnSDL_CurrentEndThread	thread/windows/SDL_systhread.c	/^typedef void (__cdecl *pfnSDL_CurrentEndThread)(unsigned code);$/;"	t	file:
pfnSDL_CurrentEndThread	thread/windows/SDL_systhread.c	/^typedef void (__watcall * pfnSDL_CurrentEndThread) (unsigned code);$/;"	t	file:
pi	libm/e_atan2.c	/^pi      = 3.1415926535897931160E+00, \/* 0x400921FB, 0x54442D18 *\/$/;"	v	file:
pi_lo	libm/e_atan2.c	/^pi_lo   = 1.2246467991473531772E-16; \/* 0x3CA1A626, 0x33145C07 *\/$/;"	v	file:
pi_o_2	libm/e_atan2.c	/^pi_o_2  = 1.5707963267948965580E+00, \/* 0x3FF921FB, 0x54442D18 *\/$/;"	v	file:
pi_o_4	libm/e_atan2.c	/^pi_o_4  = 7.8539816339744827900E-01, \/* 0x3FE921FB, 0x54442D18 *\/$/;"	v	file:
pid	video/x11/SDL_x11video.h	/^    pid_t pid;$/;"	m	struct:SDL_VideoData
pinuse	stdlib/SDL_malloc.c	1749;"	d	file:
pio2_1	libm/e_rem_pio2.c	/^    pio2_1 = 1.57079632673412561417e+00,        \/* 0x3FF921FB, 0x54400000 *\/$/;"	v	file:
pio2_1t	libm/e_rem_pio2.c	/^    pio2_1t = 6.07710050650619224932e-11,       \/* 0x3DD0B461, 0x1A626331 *\/$/;"	v	file:
pio2_2	libm/e_rem_pio2.c	/^    pio2_2 = 6.07710050630396597660e-11,        \/* 0x3DD0B461, 0x1A600000 *\/$/;"	v	file:
pio2_2t	libm/e_rem_pio2.c	/^    pio2_2t = 2.02226624879595063154e-21,       \/* 0x3BA3198A, 0x2E037073 *\/$/;"	v	file:
pio2_3	libm/e_rem_pio2.c	/^    pio2_3 = 2.02226624871116645580e-21,        \/* 0x3BA3198A, 0x2E000000 *\/$/;"	v	file:
pio2_3t	libm/e_rem_pio2.c	/^    pio2_3t = 8.47842766036889956997e-32;       \/* 0x397B839A, 0x252049C1 *\/$/;"	v	file:
pitch	render/SDL_sysrender.h	/^    int pitch;$/;"	m	struct:SDL_Texture
pitch	render/direct3d/SDL_render_d3d.c	/^    int pitch;$/;"	m	struct:__anon95	file:
pitch	render/opengl/SDL_render_gl.c	/^    int pitch;$/;"	m	struct:__anon92	file:
pitch	render/opengles/SDL_render_gles.c	/^    int pitch;$/;"	m	struct:__anon82	file:
pitch	render/opengles2/SDL_render_gles2.c	/^    size_t pitch;$/;"	m	struct:GLES2_TextureData	file:
pitch	render/psp/SDL_render_psp.c	/^    unsigned int        pitch;$/;"	m	struct:__anon77	file:
pitch	video/SDL_video.c	/^    int pitch;$/;"	m	struct:__anon44	file:
pitch	video/directfb/SDL_DirectFB_render.c	/^    int pitch;$/;"	m	struct:__anon49	file:
pitches	render/SDL_yuv_sw_c.h	/^    Uint16 pitches[3];$/;"	m	struct:SDL_SW_YUVTexture
pivot_big	stdlib/SDL_qsort.c	/^pivot_big(char *first, char *mid, char *last, size_t size,$/;"	f	file:
pixel_clock	video/x11/edid.h	/^    int		pixel_clock;$/;"	m	struct:DetailedTiming
pixel_data	render/opengles2/SDL_render_gles2.c	/^    void *pixel_data;$/;"	m	struct:GLES2_TextureData	file:
pixel_format	render/opengles2/SDL_render_gles2.c	/^    GLenum pixel_format;$/;"	m	struct:GLES2_TextureData	file:
pixel_type	render/opengles2/SDL_render_gles2.c	/^    GLenum pixel_type;$/;"	m	struct:GLES2_TextureData	file:
pixelformat	video/directfb/SDL_DirectFB_modes.h	/^    DFBSurfacePixelFormat   pixelformat;$/;"	m	struct:_DFB_DisplayData
pixelformat_tab	video/directfb/SDL_DirectFB_video.c	/^} pixelformat_tab[] =$/;"	v	typeref:struct:__anon46	file:
pixels	render/SDL_sysrender.h	/^    void *pixels;$/;"	m	struct:SDL_Texture
pixels	render/SDL_yuv_sw_c.h	/^    Uint8 *pixels;$/;"	m	struct:SDL_SW_YUVTexture
pixels	render/direct3d/SDL_render_d3d.c	/^    Uint8 *pixels;$/;"	m	struct:__anon95	file:
pixels	render/opengl/SDL_render_gl.c	/^    void *pixels;$/;"	m	struct:__anon92	file:
pixels	render/opengles/SDL_render_gles.c	/^    void *pixels;$/;"	m	struct:__anon82	file:
pixels	video/SDL_video.c	/^    void *pixels;$/;"	m	struct:__anon44	file:
pixels	video/directfb/SDL_DirectFB_render.c	/^    void *pixels;$/;"	m	struct:__anon49	file:
planes	render/SDL_yuv_sw_c.h	/^    Uint8 *planes[3];$/;"	m	struct:SDL_SW_YUVTexture
pmaddwd	render/mmx.h	435;"	d
pmaddwd_m2r	render/mmx.h	433;"	d
pmaddwd_r2r	render/mmx.h	434;"	d
pmulhw	render/mmx.h	426;"	d
pmulhw_m2r	render/mmx.h	424;"	d
pmulhw_r2r	render/mmx.h	425;"	d
pmullw	render/mmx.h	419;"	d
pmullw_m2r	render/mmx.h	417;"	d
pmullw_r2r	render/mmx.h	418;"	d
point	joystick/psp/SDL_sysjoystick.c	/^} point;$/;"	t	typeref:struct:__anon66	file:
pop	stdlib/SDL_qsort.c	125;"	d	file:
por	render/mmx.h	476;"	d
por_m2r	render/mmx.h	474;"	d
por_r2r	render/mmx.h	475;"	d
portIterator	joystick/darwin/SDL_sysjoystick_c.h	/^    io_iterator_t portIterator; \/* iterator for removal callback *\/$/;"	m	struct:joystick_hwdata
power_of_2	render/opengl/SDL_render_gl.c	/^power_of_2(int input)$/;"	f
power_of_2	render/opengles/SDL_render_gles.c	/^power_of_2(int input)$/;"	f	file:
pparams	render/direct3d/SDL_render_d3d.c	/^    D3DPRESENT_PARAMETERS pparams;$/;"	m	struct:__anon94	file:
ppthread_setname_np	thread/pthread/SDL_systhread.c	/^static int (*ppthread_setname_np)(const char*) = NULL;$/;"	v	file:
ppthread_setname_np	thread/pthread/SDL_systhread.c	/^static int (*ppthread_setname_np)(pthread_t, const char*) = NULL;$/;"	v	file:
precision	stdlib/SDL_string.c	/^    int precision;$/;"	m	struct:__anon4	file:
preferred_timing_includes_native	video/x11/edid.h	/^    int			preferred_timing_includes_native;$/;"	m	struct:MonitorInfo
prepare_audiospec	audio/SDL_audio.c	/^prepare_audiospec(const SDL_AudioSpec * orig, SDL_AudioSpec * prepared)$/;"	f	file:
prepare_audiounit	audio/coreaudio/SDL_coreaudio.c	/^prepare_audiounit(_THIS, const char *devname, int iscapture,$/;"	f	file:
prepend_alloc	stdlib/SDL_malloc.c	/^prepend_alloc(mstate m, char *newbase, char *oldbase, size_t nb)$/;"	f	file:
prev	events/SDL_events.c	/^    struct _SDL_EventEntry *prev;$/;"	m	struct:_SDL_EventEntry	typeref:struct:_SDL_EventEntry::_SDL_EventEntry	file:
prev	render/SDL_sysrender.h	/^    SDL_Texture *prev;$/;"	m	struct:SDL_Texture
prev	render/opengles2/SDL_render_gles2.c	/^    struct GLES2_ProgramCacheEntry *prev;$/;"	m	struct:GLES2_ProgramCacheEntry	typeref:struct:GLES2_ProgramCacheEntry::GLES2_ProgramCacheEntry	file:
prev	render/opengles2/SDL_render_gles2.c	/^    struct GLES2_ShaderCacheEntry *prev;$/;"	m	struct:GLES2_ShaderCacheEntry	typeref:struct:GLES2_ShaderCacheEntry::GLES2_ShaderCacheEntry	file:
prev	video/SDL_sysvideo.h	/^    SDL_Window *prev;$/;"	m	struct:SDL_Window
prev_chunk	stdlib/SDL_malloc.c	1761;"	d	file:
prev_foot	stdlib/SDL_malloc.c	/^    size_t prev_foot;           \/* Size of previous chunk (if free).  *\/$/;"	m	struct:malloc_chunk	file:
prev_foot	stdlib/SDL_malloc.c	/^    size_t prev_foot;$/;"	m	struct:malloc_tree_chunk	file:
priority	SDL_hints.c	/^    SDL_HintPriority priority;$/;"	m	struct:SDL_Hint	file:
priority	SDL_log.c	/^    SDL_LogPriority priority;$/;"	m	struct:SDL_LogLevel	file:
proc_acpi_ac_adapter_path	power/linux/SDL_syspower.c	/^static const char *proc_acpi_ac_adapter_path = "\/proc\/acpi\/ac_adapter";$/;"	v	file:
proc_acpi_battery_path	power/linux/SDL_syspower.c	/^static const char *proc_acpi_battery_path = "\/proc\/acpi\/battery";$/;"	v	file:
proc_apm_path	power/linux/SDL_syspower.c	/^static const char *proc_apm_path = "\/proc\/apm";$/;"	v	file:
product	joystick/darwin/SDL_sysjoystick_c.h	/^    char product[256];          \/* name of product *\/$/;"	m	struct:joystick_hwdata
product_code	video/x11/edid.h	/^    int			product_code;$/;"	m	struct:MonitorInfo
production_week	video/x11/edid.h	/^    int			production_week;	\/* -1 if not specified *\/$/;"	m	struct:MonitorInfo
production_year	video/x11/edid.h	/^    int			production_year;	\/* -1 if not specified *\/$/;"	m	struct:MonitorInfo
profile_mask	video/SDL_sysvideo.h	/^        int profile_mask;$/;"	m	struct:SDL_VideoDevice::__anon27
program	render/opengl/SDL_shaders_gl.c	/^    GLhandleARB program;$/;"	m	struct:__anon89	file:
program_cache	render/opengles2/SDL_render_gles2.c	/^    GLES2_ProgramCache program_cache;$/;"	m	struct:GLES2_DriverContext	file:
ps_yuv	render/direct3d/SDL_render_d3d.c	/^    LPDIRECT3DPIXELSHADER9 ps_yuv;$/;"	m	struct:__anon94	file:
pslld	render/mmx.h	528;"	d
pslld_i2r	render/mmx.h	525;"	d
pslld_m2r	render/mmx.h	526;"	d
pslld_r2r	render/mmx.h	527;"	d
psllq	render/mmx.h	523;"	d
psllq_i2r	render/mmx.h	520;"	d
psllq_m2r	render/mmx.h	521;"	d
psllq_r2r	render/mmx.h	522;"	d
psllw	render/mmx.h	533;"	d
psllw_i2r	render/mmx.h	530;"	d
psllw_m2r	render/mmx.h	531;"	d
psllw_r2r	render/mmx.h	532;"	d
psm	render/psp/SDL_render_psp.c	/^    unsigned int    psm ;$/;"	m	struct:__anon76	file:
psrad	render/mmx.h	559;"	d
psrad_i2r	render/mmx.h	556;"	d
psrad_m2r	render/mmx.h	557;"	d
psrad_r2r	render/mmx.h	558;"	d
psraw	render/mmx.h	564;"	d
psraw_i2r	render/mmx.h	561;"	d
psraw_m2r	render/mmx.h	562;"	d
psraw_r2r	render/mmx.h	563;"	d
psrld	render/mmx.h	546;"	d
psrld_i2r	render/mmx.h	543;"	d
psrld_m2r	render/mmx.h	544;"	d
psrld_r2r	render/mmx.h	545;"	d
psrlq	render/mmx.h	541;"	d
psrlq_i2r	render/mmx.h	538;"	d
psrlq_m2r	render/mmx.h	539;"	d
psrlq_r2r	render/mmx.h	540;"	d
psrlw	render/mmx.h	551;"	d
psrlw_i2r	render/mmx.h	548;"	d
psrlw_m2r	render/mmx.h	549;"	d
psrlw_r2r	render/mmx.h	550;"	d
psubb	render/mmx.h	390;"	d
psubb_m2r	render/mmx.h	388;"	d
psubb_r2r	render/mmx.h	389;"	d
psubd	render/mmx.h	382;"	d
psubd_m2r	render/mmx.h	380;"	d
psubd_r2r	render/mmx.h	381;"	d
psubsb	render/mmx.h	401;"	d
psubsb_m2r	render/mmx.h	399;"	d
psubsb_r2r	render/mmx.h	400;"	d
psubsw	render/mmx.h	397;"	d
psubsw_m2r	render/mmx.h	395;"	d
psubsw_r2r	render/mmx.h	396;"	d
psubusb	render/mmx.h	412;"	d
psubusb_m2r	render/mmx.h	410;"	d
psubusb_r2r	render/mmx.h	411;"	d
psubusw	render/mmx.h	408;"	d
psubusw_m2r	render/mmx.h	406;"	d
psubusw_r2r	render/mmx.h	407;"	d
psubw	render/mmx.h	386;"	d
psubw_m2r	render/mmx.h	384;"	d
psubw_r2r	render/mmx.h	385;"	d
ptSoftKbdPos	video/windows/SDL_windowsvideo.h	/^    POINT ptSoftKbdPos;$/;"	m	struct:tagINPUTCONTEXT2
ptStatusWndPos	video/windows/SDL_windowsvideo.h	/^    POINT ptStatusWndPos;$/;"	m	struct:tagINPUTCONTEXT2
pulseaudio_handle	audio/pulseaudio/SDL_pulseaudio.c	/^static void *pulseaudio_handle = NULL;$/;"	v	file:
pulseaudio_library	audio/pulseaudio/SDL_pulseaudio.c	/^static const char *pulseaudio_library = SDL_AUDIO_DRIVER_PULSEAUDIO_DYNAMIC;$/;"	v	file:
punpckhbw	render/mmx.h	618;"	d
punpckhbw_m2r	render/mmx.h	616;"	d
punpckhbw_r2r	render/mmx.h	617;"	d
punpckhdq	render/mmx.h	610;"	d
punpckhdq_m2r	render/mmx.h	608;"	d
punpckhdq_r2r	render/mmx.h	609;"	d
punpckhwd	render/mmx.h	614;"	d
punpckhwd_m2r	render/mmx.h	612;"	d
punpckhwd_r2r	render/mmx.h	613;"	d
punpcklbw	render/mmx.h	601;"	d
punpcklbw_m2r	render/mmx.h	599;"	d
punpcklbw_r2r	render/mmx.h	600;"	d
punpckldq	render/mmx.h	593;"	d
punpckldq_m2r	render/mmx.h	591;"	d
punpckldq_r2r	render/mmx.h	592;"	d
punpcklwd	render/mmx.h	597;"	d
punpcklwd_m2r	render/mmx.h	595;"	d
punpcklwd_r2r	render/mmx.h	596;"	d
pushLeft	stdlib/SDL_qsort.c	121;"	d	file:
pushRight	stdlib/SDL_qsort.c	122;"	d	file:
pxor	render/mmx.h	483;"	d
pxor_m2r	render/mmx.h	481;"	d
pxor_r2r	render/mmx.h	482;"	d
q	render/mmx.h	/^    long long q;                \/* Quadword (64-bit) value *\/$/;"	m	union:__anon97
qsa_capture_device	audio/qsa/SDL_qsa_audio.c	/^QSA_Device qsa_capture_device[QSA_MAX_DEVICES];$/;"	v
qsa_capture_devices	audio/qsa/SDL_qsa_audio.c	/^uint32_t qsa_capture_devices;$/;"	v
qsa_playback_device	audio/qsa/SDL_qsa_audio.c	/^QSA_Device qsa_playback_device[QSA_MAX_DEVICES];$/;"	v
qsa_playback_devices	audio/qsa/SDL_qsa_audio.c	/^uint32_t qsa_playback_devices;$/;"	v
qsort	stdlib/SDL_qsort.c	/^qsort(void *base, size_t nmemb, size_t size,$/;"	f
qsort	stdlib/SDL_qsort.c	83;"	d	file:
qsort	stdlib/SDL_qsort.c	85;"	d	file:
qsort_aligned	stdlib/SDL_qsort.c	/^qsort_aligned(void *base, size_t nmemb, size_t size,$/;"	f	file:
qsort_nonaligned	stdlib/SDL_qsort.c	/^qsort_nonaligned(void *base, size_t nmemb, size_t size,$/;"	f	file:
qsort_words	stdlib/SDL_qsort.c	/^qsort_words(void *base, size_t nmemb,$/;"	f	file:
r	render/SDL_sysrender.h	/^    Uint8 r, g, b, a;                   \/**< Color for drawing operations values *\/$/;"	m	struct:SDL_Renderer
r	render/SDL_sysrender.h	/^    Uint8 r, g, b, a;           \/**< Texture modulation values *\/$/;"	m	struct:SDL_Texture
r	render/software/SDL_rotate.c	/^    Uint8 r;$/;"	m	struct:tColorRGBA	file:
r	video/SDL_blit.h	/^    Uint8 r, g, b, a;$/;"	m	struct:__anon37
radToDeg	render/psp/SDL_render_psp.c	722;"	d	file:
radix	stdlib/SDL_string.c	/^    int radix;$/;"	m	struct:__anon4	file:
rawbuf	audio/psp/SDL_pspaudio.h	/^    Uint8   *rawbuf;$/;"	m	struct:SDL_PrivateAudioData
raxes	joystick/SDL_gamecontroller.c	/^    SDL_GameControllerAxis raxes[k_nMaxReverseEntries];$/;"	m	struct:_SDL_ControllerMapping	file:
raxesasbutton	joystick/SDL_gamecontroller.c	/^    SDL_GameControllerButton raxesasbutton[k_nMaxReverseEntries];$/;"	m	struct:_SDL_ControllerMapping	file:
rbuttonasaxis	joystick/SDL_gamecontroller.c	/^    SDL_GameControllerAxis rbuttonasaxis[k_nMaxReverseEntries];$/;"	m	struct:_SDL_ControllerMapping	file:
rbuttons	joystick/SDL_gamecontroller.c	/^    SDL_GameControllerButton rbuttons[k_nMaxReverseEntries];$/;"	m	struct:_SDL_ControllerMapping	file:
rcsid	libm/e_log.c	/^static const char rcsid[] =$/;"	v	file:
rcsid	libm/e_pow.c	/^static char rcsid[] = "$NetBSD: e_pow.c,v 1.9 1995\/05\/12 04:57:32 jtc Exp $";$/;"	v	file:
rcsid	libm/e_rem_pio2.c	/^static const char rcsid[] =$/;"	v	file:
rcsid	libm/e_sqrt.c	/^static const char rcsid[] =$/;"	v	file:
rcsid	libm/k_cos.c	/^static const char rcsid[] =$/;"	v	file:
rcsid	libm/k_rem_pio2.c	/^static const char rcsid[] =$/;"	v	file:
rcsid	libm/k_sin.c	/^static const char rcsid[] =$/;"	v	file:
rcsid	libm/s_copysign.c	/^static const char rcsid[] =$/;"	v	file:
rcsid	libm/s_cos.c	/^static const char rcsid[] =$/;"	v	file:
rcsid	libm/s_fabs.c	/^static const char rcsid[] =$/;"	v	file:
rcsid	libm/s_floor.c	/^static const char rcsid[] =$/;"	v	file:
rcsid	libm/s_scalbn.c	/^static const char rcsid[] =$/;"	v	file:
rcsid	libm/s_sin.c	/^static const char rcsid[] =$/;"	v	file:
re	joystick/sort_controllers.py	/^import re$/;"	i
readBoolEnv	video/directfb/SDL_DirectFB_video.c	/^static int readBoolEnv(const char *env_name, int def_val)$/;"	f	file:
read_pos	audio/SDL_sysaudio.h	/^    int read_pos, write_pos;    \/* the position of the write and read heads in bytes *\/$/;"	m	struct:__anon107
realloc	stdlib/SDL_malloc.c	637;"	d	file:
really	audio/nas/SDL_nasaudio.h	/^    int really;$/;"	m	struct:SDL_PrivateAudioData
recDevice	joystick/darwin/SDL_sysjoystick_c.h	/^typedef struct joystick_hwdata recDevice;$/;"	t	typeref:struct:joystick_hwdata
recElement	joystick/darwin/SDL_sysjoystick_c.h	/^struct recElement$/;"	s
recElement	joystick/darwin/SDL_sysjoystick_c.h	/^typedef struct recElement recElement;$/;"	t	typeref:struct:recElement
recordAll	events/SDL_gesture.c	/^SDL_bool recordAll;$/;"	v
recording	events/SDL_gesture.c	/^    SDL_bool recording;$/;"	m	struct:__anon64	file:
rect	video/x11/SDL_x11messagebox.c	/^    SDL_Rect rect;                      \/* Rectangle for entire button *\/$/;"	m	struct:SDL_MessageBoxButtonDataX11	file:
recursive	thread/generic/SDL_sysmutex.c	/^    int recursive;$/;"	m	struct:SDL_mutex	file:
recursive	thread/psp/SDL_sysmutex.c	/^    int recursive;$/;"	m	struct:SDL_mutex	file:
recursive	thread/pthread/SDL_sysmutex.c	/^    int recursive;$/;"	m	struct:SDL_mutex	file:
red_size	video/SDL_sysvideo.h	/^        int red_size;$/;"	m	struct:SDL_VideoDevice::__anon27
red_x	video/x11/edid.h	/^    double		red_x;$/;"	m	struct:MonitorInfo
red_y	video/x11/edid.h	/^    double		red_y;$/;"	m	struct:MonitorInfo
ref	haptic/darwin/SDL_syshaptic.c	/^    FFEffectObjectReference ref;        \/* Reference. *\/$/;"	m	struct:haptic_hweffect	file:
ref	haptic/windows/SDL_syshaptic.c	/^    LPDIRECTINPUTEFFECT ref;$/;"	m	struct:haptic_hweffect	file:
ref_count	haptic/SDL_syshaptic.h	/^    int ref_count;              \/* Count for multiple opens *\/$/;"	m	struct:_SDL_Haptic
ref_count	joystick/SDL_gamecontroller.c	/^    int ref_count;$/;"	m	struct:_SDL_GameController	file:
ref_count	joystick/SDL_sysjoystick.h	/^    int ref_count;              \/* Reference count for multiple opens *\/$/;"	m	struct:_SDL_Joystick
refcount	video/windows/SDL_windowsvideo.h	/^    int refcount;$/;"	m	struct:__anon55
references	render/opengles2/SDL_render_gles2.c	/^    int references;$/;"	m	struct:GLES2_ShaderCacheEntry	file:
relative_mode	events/SDL_mouse_c.h	/^    SDL_bool relative_mode;$/;"	m	struct:__anon65
release_unused_segments	stdlib/SDL_malloc.c	/^release_unused_segments(mstate m)$/;"	f	file:
removed	joystick/darwin/SDL_sysjoystick_c.h	/^    int removed;$/;"	m	struct:joystick_hwdata
removed	joystick/windows/SDL_dxjoystick_c.h	/^    Uint8 removed;$/;"	m	struct:joystick_hwdata
render	video/windows/SDL_windowsvideo.h	/^    int render;$/;"	m	struct:SDL_VideoData
render_drivers	render/SDL_render.c	/^static const SDL_RenderDriver *render_drivers[] = {$/;"	v	file:
render_options	video/directfb/SDL_DirectFB_render.c	/^    DFBSurfaceRenderOptions render_options;$/;"	m	struct:__anon49	file:
renderer	render/SDL_sysrender.h	/^    SDL_Renderer *renderer;$/;"	m	struct:SDL_Texture
renderer	video/SDL_video.c	/^    SDL_Renderer *renderer;$/;"	m	struct:__anon44	file:
renderer_magic	render/SDL_render.c	/^static char renderer_magic;$/;"	v	file:
repdesc	joystick/bsd/SDL_sysjoystick.c	/^    struct report_desc *repdesc;$/;"	m	struct:joystick_hwdata	typeref:struct:joystick_hwdata::report_desc	file:
repinfo	joystick/bsd/SDL_sysjoystick.c	/^} const repinfo[] = {$/;"	v	file:
replace_dv	stdlib/SDL_malloc.c	3042;"	d	file:
report	joystick/bsd/SDL_sysjoystick.c	/^struct report$/;"	s	file:
report_alloc	joystick/bsd/SDL_sysjoystick.c	/^report_alloc(struct report *r, struct report_desc *rd, int repind)$/;"	f	file:
report_free	joystick/bsd/SDL_sysjoystick.c	/^report_free(struct report *r)$/;"	f	file:
request2size	stdlib/SDL_malloc.c	1726;"	d	file:
reset_on_error	stdlib/SDL_malloc.c	/^reset_on_error(mstate m)$/;"	f	file:
restore	video/directfb/SDL_DirectFB_window.h	/^    DFBRectangle            restore;$/;"	m	struct:_DFB_WindowData
retained_backing	video/SDL_sysvideo.h	/^        int retained_backing;$/;"	m	struct:SDL_VideoDevice::__anon27
rgb444	video/x11/edid.h	/^	    int		rgb444;$/;"	m	struct:MonitorInfo::__anon15::__anon16
rgb_2_pix	render/SDL_yuv_sw_c.h	/^    Uint32 *rgb_2_pix;$/;"	m	struct:SDL_SW_YUVTexture
rhatasbutton	joystick/SDL_gamecontroller.c	/^    SDL_GameControllerButton rhatasbutton[k_nMaxHatEntries];$/;"	m	struct:_SDL_ControllerMapping	file:
rid	joystick/bsd/SDL_sysjoystick.c	/^    int rid;                    \/* Report ID *\/$/;"	m	struct:report	file:
right_border	video/x11/edid.h	/^    int		right_border;$/;"	m	struct:DetailedTiming
right_size	video/directfb/SDL_DirectFB_WM.h	/^    int right_size;$/;"	m	struct:_DFB_Theme
rndContext	test/SDL_test_fuzzer.c	/^static SDLTest_RandomContext rndContext;$/;"	v	file:
rumble_effect	haptic/SDL_syshaptic.h	/^    SDL_HapticEffect rumble_effect; \/* Rumble effect. *\/$/;"	m	struct:_SDL_Haptic
rumble_id	haptic/SDL_syshaptic.h	/^    int rumble_id;              \/* ID of rumble effect for simple rumble API. *\/$/;"	m	struct:_SDL_Haptic
running	joystick/psp/SDL_sysjoystick.c	/^static int running = 0;$/;"	v	file:
running	video/psp/SDL_pspevents.c	/^static int running = 0;$/;"	v	file:
s	render/mmx.h	/^    float s[2];                 \/* Single-precision (32-bit) value *\/$/;"	m	union:__anon97
sThumbLX	joystick/windows/SDL_dxjoystick_c.h	/^    SHORT sThumbLX;$/;"	m	struct:__anon72
sThumbLY	joystick/windows/SDL_dxjoystick_c.h	/^    SHORT sThumbLY;$/;"	m	struct:__anon72
sThumbRX	joystick/windows/SDL_dxjoystick_c.h	/^    SHORT sThumbRX;$/;"	m	struct:__anon72
sThumbRY	joystick/windows/SDL_dxjoystick_c.h	/^    SHORT sThumbRY;$/;"	m	struct:__anon72
s_BaseUnitsX	video/windows/SDL_windowsmessagebox.c	/^static int s_BaseUnitsX;$/;"	v	file:
s_BaseUnitsY	video/windows/SDL_windowsmessagebox.c	/^static int s_BaseUnitsY;$/;"	v	file:
s_ControllerMappings	joystick/SDL_gamecontrollerdb.h	/^static const char *s_ControllerMappings [] =$/;"	v
s_XInputDLLRefCount	joystick/windows/SDL_dxjoystick.c	/^static int s_XInputDLLRefCount = 0;$/;"	v	file:
s_active	core/android/SDL_android.c	/^static int s_active = 0;$/;"	v	file:
s_bDeviceAdded	joystick/darwin/SDL_sysjoystick.c	/^static SDL_bool s_bDeviceAdded = SDL_FALSE;$/;"	v	file:
s_bDeviceAdded	joystick/windows/SDL_dxjoystick.c	/^static SDL_bool s_bDeviceAdded = SDL_FALSE;$/;"	v	file:
s_bDeviceRemoved	joystick/darwin/SDL_sysjoystick.c	/^static SDL_bool s_bDeviceRemoved = SDL_FALSE;$/;"	v	file:
s_bDeviceRemoved	joystick/windows/SDL_dxjoystick.c	/^static SDL_bool s_bDeviceRemoved = SDL_FALSE;$/;"	v	file:
s_bJoystickThreadQuit	joystick/windows/SDL_dxjoystick.c	/^static SDL_bool s_bJoystickThreadQuit = SDL_FALSE;$/;"	v	file:
s_bWindowsDeviceChanged	joystick/windows/SDL_dxjoystick.c	/^static SDL_bool s_bWindowsDeviceChanged = SDL_FALSE;$/;"	v	file:
s_bXInputEnabled	joystick/windows/SDL_dxjoystick.c	/^static SDL_bool s_bXInputEnabled = SDL_TRUE;$/;"	v	file:
s_condJoystickThread	joystick/windows/SDL_dxjoystick.c	/^static SDL_cond *s_condJoystickThread = NULL;$/;"	v	file:
s_iNewGUID	joystick/windows/SDL_dxjoystick.c	/^static int s_iNewGUID = 0;$/;"	v	file:
s_joystick_instance_id	joystick/darwin/SDL_sysjoystick.c	/^static int s_joystick_instance_id = -1;$/;"	v	file:
s_mutexJoyStickEnum	joystick/windows/SDL_dxjoystick.c	/^static SDL_mutex *s_mutexJoyStickEnum = NULL;$/;"	v	file:
s_nInstanceID	joystick/windows/SDL_dxjoystick.c	/^static SDL_JoystickID s_nInstanceID = -1;$/;"	v	file:
s_pKnownJoystickGUIDs	joystick/windows/SDL_dxjoystick.c	/^static GUID *s_pKnownJoystickGUIDs = NULL;$/;"	v	file:
s_pSupportedControllers	joystick/SDL_gamecontroller.c	/^static ControllerMapping_t *s_pSupportedControllers = NULL;$/;"	v	file:
s_pXInputDLL	joystick/windows/SDL_dxjoystick.c	/^static HANDLE s_pXInputDLL = 0;$/;"	v	file:
s_pXInputMapping	joystick/SDL_gamecontroller.c	/^static ControllerMapping_t *s_pXInputMapping = NULL;$/;"	v	file:
s_threadJoystick	joystick/windows/SDL_dxjoystick.c	/^static SDL_Thread *s_threadJoystick = NULL;$/;"	v	file:
safety_net_triggered	video/x11/SDL_x11video.c	/^static SDL_bool safety_net_triggered = SDL_FALSE;$/;"	v	file:
same_or_left_bits	stdlib/SDL_malloc.c	2389;"	d	file:
sample	audio/SDL_wave.c	/^    Sint32 sample;$/;"	m	struct:IMA_ADPCM_decodestate	file:
save_controller	joystick/sort_controllers.py	/^def save_controller(line):$/;"	f
saved	video/cocoa/SDL_cocoashape.h	/^    SDL_bool saved;$/;"	m	struct:__anon39
saved_gamma	video/SDL_sysvideo.h	/^    Uint16 *saved_gamma;        \/* (just offset into gamma) *\/$/;"	m	struct:SDL_Window
sbinptr	stdlib/SDL_malloc.c	/^typedef struct malloc_chunk *sbinptr;   \/* The type of bins of chunks *\/$/;"	t	typeref:struct:malloc_chunk	file:
scalbn	libm/math_private.h	40;"	d
scale	joystick/windows/SDL_mmjoystick.c	/^        float scale;$/;"	m	struct:joystick_hwdata::_transaxis	file:
scale	render/SDL_sysrender.h	/^    SDL_FPoint scale;$/;"	m	struct:SDL_Renderer
scale	video/uikit/SDL_uikitmodes.h	/^    CGFloat scale;$/;"	m	struct:__anon29
scale	video/uikit/SDL_uikitmodes.h	/^    CGFloat scale;$/;"	m	struct:__anon30
scaleMode	render/direct3d/SDL_render_d3d.c	/^    D3DTEXTUREFILTERTYPE scaleMode;$/;"	m	struct:__anon95	file:
scaleMode	render/direct3d/SDL_render_d3d.c	/^    D3DTEXTUREFILTERTYPE scaleMode[8];$/;"	m	struct:__anon94	file:
scale_backup	render/SDL_sysrender.h	/^    SDL_FPoint scale_backup;$/;"	m	struct:SDL_Renderer
scancode	video/x11/SDL_x11keyboard.c	/^    SDL_Scancode scancode;$/;"	m	struct:__anon22	file:
scancode_set	video/x11/SDL_x11keyboard.c	/^} scancode_set[] = {$/;"	v	typeref:struct:__anon23	file:
scanline_pad	video/x11/SDL_x11modes.h	/^    int scanline_pad;$/;"	m	struct:__anon18
scheduled	timer/SDL_timer.c	/^    Uint32 scheduled;$/;"	m	struct:_SDL_Timer	file:
screen	video/x11/SDL_x11messagebox.c	/^    int screen;$/;"	m	struct:SDL_MessageBoxDataX11	file:
screen	video/x11/SDL_x11modes.h	/^    int screen;$/;"	m	struct:__anon18
screen_callback_t	video/directfb/SDL_DirectFB_modes.c	/^struct screen_callback_t$/;"	s	file:
screenid	video/directfb/SDL_DirectFB_modes.c	/^    DFBScreenID screenid[DFB_MAX_SCREENS];$/;"	m	struct:screen_callback_t	file:
screensaver_activity	video/cocoa/SDL_cocoavideo.h	/^    Uint32 screensaver_activity;$/;"	m	struct:SDL_VideoData
screensaver_activity	video/x11/SDL_x11video.h	/^    Uint32 screensaver_activity;$/;"	m	struct:SDL_VideoData
sdl	video/directfb/SDL_DirectFB_video.c	/^    Uint32 sdl;$/;"	m	struct:__anon46	file:
sdl_audio_rate_filters	audio/SDL_audiotypecvt.c	/^const SDL_AudioRateFilters sdl_audio_rate_filters[] =$/;"	v
sdl_audio_type_filters	audio/SDL_audiotypecvt.c	/^const SDL_AudioTypeFilters sdl_audio_type_filters[] =$/;"	v
sdl_dfb_check	video/directfb/SDL_DirectFB_video.h	/^static inline DFBResult sdl_dfb_check(DFBResult ret, const char *src_file, int src_line) {$/;"	f
sdl_psp_callback_thread	main/psp/SDL_psp_main.c	/^int sdl_psp_callback_thread(SceSize args, void *argp)$/;"	f
sdl_psp_exit_callback	main/psp/SDL_psp_main.c	/^int sdl_psp_exit_callback(int arg1, int arg2, void *common)$/;"	f
sdl_psp_setup_callbacks	main/psp/SDL_psp_main.c	/^int sdl_psp_setup_callbacks(void)$/;"	f
sdl_window	video/directfb/SDL_DirectFB_opengl.h	/^    SDL_Window          *sdl_window;$/;"	m	struct:_DirectFB_GLContext
sdlformat_to_auformat	audio/nas/SDL_nasaudio.c	/^sdlformat_to_auformat(unsigned int fmt)$/;"	f	file:
seg	stdlib/SDL_malloc.c	/^    msegment seg;$/;"	m	struct:malloc_state	file:
segment_holding	stdlib/SDL_malloc.c	/^segment_holding(mstate m, char *addr)$/;"	f	file:
segment_holds	stdlib/SDL_malloc.c	2143;"	d	file:
selection_waiting	video/x11/SDL_x11video.h	/^    SDL_bool selection_waiting;$/;"	m	struct:SDL_VideoData
sem	thread/generic/SDL_sysmutex.c	/^    SDL_sem *sem;$/;"	m	struct:SDL_mutex	file:
sem	thread/psp/SDL_sysmutex.c	/^    SDL_sem *sem;$/;"	m	struct:SDL_mutex	file:
sem	thread/pthread/SDL_syssem.c	/^    sem_t sem;$/;"	m	struct:SDL_semaphore	file:
sem	timer/SDL_timer.c	/^    SDL_sem *sem;$/;"	m	struct:__anon114	file:
semaphore	audio/xaudio2/SDL_xaudio2.c	/^    HANDLE semaphore;$/;"	m	struct:SDL_PrivateAudioData	file:
semid	thread/psp/SDL_syssem.c	/^    SceUID  semid;$/;"	m	struct:SDL_semaphore	file:
send_add_event	joystick/windows/SDL_dxjoystick.c	/^    Uint8 send_add_event;$/;"	m	struct:JoyStick_DeviceData_	file:
send_open_event	joystick/darwin/SDL_sysjoystick_c.h	/^    Uint8 send_open_event;      \/* 1 if we need to send an Added event for this device *\/$/;"	m	struct:joystick_hwdata
send_remove_event	joystick/windows/SDL_dxjoystick_c.h	/^    Uint8 send_remove_event;$/;"	m	struct:joystick_hwdata
separate_hv_sync	video/x11/edid.h	/^	    int		separate_hv_sync;$/;"	m	struct:MonitorInfo::__anon15::__anon17
serial_number	video/x11/edid.h	/^    unsigned int	serial_number;$/;"	m	struct:MonitorInfo
serration_on_vsync	video/x11/edid.h	/^	    int		serration_on_vsync;$/;"	m	struct:MonitorInfo::__anon15::__anon17
serrations	video/x11/edid.h	/^	    int serrations;$/;"	m	struct:DetailedTiming::__anon12::__anon13
serrations	video/x11/edid.h	/^	    int serrations;$/;"	m	struct:DetailedTiming::__anon12::__anon14
set_foot	stdlib/SDL_malloc.c	1768;"	d	file:
set_free_with_pinuse	stdlib/SDL_malloc.c	1775;"	d	file:
set_inuse	stdlib/SDL_malloc.c	2463;"	d	file:
set_inuse	stdlib/SDL_malloc.c	2486;"	d	file:
set_inuse_and_pinuse	stdlib/SDL_malloc.c	2468;"	d	file:
set_inuse_and_pinuse	stdlib/SDL_malloc.c	2491;"	d	file:
set_lock	stdlib/SDL_malloc.c	2124;"	d	file:
set_rgba	video/sdlgenblit.pl	/^sub set_rgba$/;"	s
set_size_and_pinuse_of_free_chunk	stdlib/SDL_malloc.c	1771;"	d	file:
set_size_and_pinuse_of_inuse_chunk	stdlib/SDL_malloc.c	2473;"	d	file:
set_size_and_pinuse_of_inuse_chunk	stdlib/SDL_malloc.c	2496;"	d	file:
sflags	stdlib/SDL_malloc.c	/^    flag_t sflags;              \/* mmap and extern flag *\/$/;"	m	struct:malloc_segment	file:
shader	render/opengl/SDL_render_gl.c	/^        GL_Shader shader;$/;"	m	struct:__anon90::__anon91	file:
shader_cache	render/opengles2/SDL_render_gles2.c	/^    GLES2_ShaderCache shader_cache;$/;"	m	struct:GLES2_DriverContext	file:
shader_format_count	render/opengles2/SDL_render_gles2.c	/^    int shader_format_count;$/;"	m	struct:GLES2_DriverContext	file:
shader_formats	render/opengles2/SDL_render_gles2.c	/^    GLenum *shader_formats;$/;"	m	struct:GLES2_DriverContext	file:
shader_source	render/opengl/SDL_shaders_gl.c	/^static const char *shader_source[NUM_SHADERS][2] =$/;"	v	file:
shaders	render/opengl/SDL_render_gl.c	/^    GL_ShaderContext *shaders;$/;"	m	struct:__anon90	file:
shaders	render/opengl/SDL_shaders_gl.c	/^    GL_ShaderData shaders[NUM_SHADERS];$/;"	m	struct:GL_ShaderContext	file:
shape	video/SDL_shape_internals.h	/^	SDL_Rect shape;$/;"	m	union:__anon32
shape	video/cocoa/SDL_cocoashape.h	/^    SDL_ShapeTree* shape;$/;"	m	struct:__anon39
shape_driver	video/SDL_sysvideo.h	/^    SDL_ShapeDriver shape_driver;$/;"	m	struct:SDL_VideoDevice
shaper	video/SDL_sysvideo.h	/^    SDL_WindowShaper *shaper;$/;"	m	struct:SDL_Window
share_with_current_context	video/SDL_sysvideo.h	/^        int share_with_current_context;$/;"	m	struct:SDL_VideoDevice::__anon27
sharedAppDelegate	video/uikit/SDL_uikitappdelegate.h	/^+ (id) sharedAppDelegate;$/;"	v
sharedDelegate	joystick/iphoneos/SDLUIAccelerationDelegate.h	/^+(SDLUIAccelerationDelegate *)sharedDelegate;$/;"	v
shm_errhandler	video/x11/SDL_x11framebuffer.c	/^static int shm_errhandler(Display *d, XErrorEvent *e)$/;"	f	file:
shm_error	video/x11/SDL_x11framebuffer.c	/^static int shm_error;$/;"	v	file:
shminfo	video/x11/SDL_x11window.h	/^    XShmSegmentInfo shminfo;$/;"	m	struct:__anon25
should_trim	stdlib/SDL_malloc.c	2173;"	d	file:
should_trim	stdlib/SDL_malloc.c	2175;"	d	file:
sig_list	thread/beos/SDL_systhread.c	/^static int sig_list[] = {$/;"	v	file:
sig_list	thread/pthread/SDL_systhread.c	/^static const int sig_list[] = {$/;"	v	file:
signals	thread/generic/SDL_syscond.c	/^    int signals;$/;"	m	struct:SDL_cond	file:
signals	thread/psp/SDL_syscond.c	/^    int signals;$/;"	m	struct:SDL_cond	file:
signature	video/windows/SDL_windowsmessagebox.c	/^    WORD signature;$/;"	m	struct:__anon52	file:
sin	libm/math_private.h	41;"	d
size	joystick/bsd/SDL_sysjoystick.c	/^    size_t size;                \/* Buffer size *\/$/;"	m	struct:report	file:
size	render/psp/SDL_render_psp.c	/^    unsigned int        size;                               \/**< Size of data in bytes. *\/$/;"	m	struct:__anon77	file:
size	stdlib/SDL_malloc.c	/^    size_t size;                \/* allocated size *\/$/;"	m	struct:malloc_segment	file:
size	video/directfb/SDL_DirectFB_window.h	/^    DFBDimension            size;$/;"	m	struct:_DFB_WindowData
size	video/windows/SDL_windowsmessagebox.c	/^    size_t size;$/;"	m	struct:__anon54	file:
size_changed	video/directfb/SDL_DirectFB_render.c	/^    int size_changed;$/;"	m	struct:__anon48	file:
small_index	stdlib/SDL_malloc.c	2281;"	d	file:
small_index2size	stdlib/SDL_malloc.c	2282;"	d	file:
smallbin_at	stdlib/SDL_malloc.c	2286;"	d	file:
smallbins	stdlib/SDL_malloc.c	/^    mchunkptr smallbins[(NSMALLBINS + 1) * 2];$/;"	m	struct:malloc_state	file:
smallmap	stdlib/SDL_malloc.c	/^    binmap_t smallmap;$/;"	m	struct:malloc_state	file:
smallmap_is_marked	stdlib/SDL_malloc.c	2347;"	d	file:
smblks	stdlib/SDL_malloc.c	/^    MALLINFO_FIELD_TYPE smblks; \/* always 0 *\/$/;"	m	struct:mallinfo	file:
snd2au	audio/sun/SDL_sunaudio.c	/^snd2au(int sample)$/;"	f	file:
snd_pcm_hw_params_sizeof	audio/alsa/SDL_alsa_audio.c	90;"	d	file:
snd_pcm_sw_params_sizeof	audio/alsa/SDL_alsa_audio.c	91;"	d	file:
sndio_handle	audio/sndio/SDL_sndioaudio.c	/^static void *sndio_handle = NULL;$/;"	v	file:
sndio_library	audio/sndio/SDL_sndioaudio.c	/^static const char *sndio_library = SDL_AUDIO_DRIVER_SNDIO_DYNAMIC;$/;"	v	file:
sound	audio/directsound/SDL_directsound.h	/^    LPDIRECTSOUND sound;$/;"	m	struct:SDL_PrivateAudioData
source	audio/xaudio2/SDL_xaudio2.c	/^    IXAudio2SourceVoice *source;$/;"	m	struct:SDL_PrivateAudioData	file:
spec	audio/SDL_sysaudio.h	/^    SDL_AudioSpec spec;$/;"	m	struct:SDL_AudioDevice
split_pattern	joystick/sort_controllers.py	/^split_pattern = re.compile(r'([^"]*")([^,]*,)([^,]*,)([^"]*)(".*)')$/;"	v
splittype	audio/sdlgenaudiocvt.pl	/^sub splittype {$/;"	s
squashVersion	audio/pulseaudio/SDL_pulseaudio.c	/^squashVersion(const int major, const int minor, const int patch)$/;"	f	file:
src	video/SDL_blit.h	/^    Uint8 *src;$/;"	m	struct:__anon37
srcB	video/SDL_blit_N.c	/^    Uint32 srcR, srcG, srcB;$/;"	m	struct:blit_table	file:
srcG	video/SDL_blit_N.c	/^    Uint32 srcR, srcG, srcB;$/;"	m	struct:blit_table	file:
srcR	video/SDL_blit_N.c	/^    Uint32 srcR, srcG, srcB;$/;"	m	struct:blit_table	file:
src_fmt	audio/SDL_audio_c.h	/^    SDL_AudioFormat src_fmt;$/;"	m	struct:__anon112
src_fmt	stdlib/SDL_iconv.c	/^    int src_fmt;$/;"	m	struct:_SDL_iconv_t	file:
src_fmt	video/SDL_blit.h	/^    SDL_PixelFormat *src_fmt;$/;"	m	struct:__anon37
src_format	video/SDL_blit.h	/^    Uint32 src_format;$/;"	m	struct:__anon38
src_h	video/SDL_blit.h	/^    int src_w, src_h;$/;"	m	struct:__anon37
src_palette_version	video/SDL_blit.h	/^    Uint32 src_palette_version;$/;"	m	struct:SDL_BlitMap
src_pitch	video/SDL_blit.h	/^    int src_pitch;$/;"	m	struct:__anon37
src_skip	video/SDL_blit.h	/^    int src_skip;$/;"	m	struct:__anon37
src_w	video/SDL_blit.h	/^    int src_w, src_h;$/;"	m	struct:__anon37
srgb_is_standard	video/x11/edid.h	/^    int			srgb_is_standard;$/;"	m	struct:MonitorInfo
stack_entry	stdlib/SDL_qsort.c	/^} stack_entry;$/;"	t	typeref:struct:__anon5	file:
standard	video/x11/edid.h	/^    Timing		standard[8];$/;"	m	struct:MonitorInfo
standby	video/x11/edid.h	/^    int			standby;$/;"	m	struct:MonitorInfo
start	timer/beos/SDL_systimer.c	/^static bigtime_t start;$/;"	v	file:
start	timer/psp/SDL_systimer.c	/^static struct timeval start;$/;"	v	typeref:struct:timeval	file:
start	timer/windows/SDL_systimer.c	/^static DWORD start;$/;"	v	file:
start_mach	timer/unix/SDL_systimer.c	/^static uint64_t start_mach;$/;"	v	file:
start_ts	timer/unix/SDL_systimer.c	/^static struct timespec start_ts;$/;"	v	typeref:struct:timespec	file:
start_tv	timer/unix/SDL_systimer.c	/^static struct timeval start_tv;$/;"	v	typeref:struct:timeval	file:
state	audio/SDL_wave.c	/^    struct IMA_ADPCM_decodestate state[2];$/;"	m	struct:IMA_ADPCM_decoder	typeref:struct:IMA_ADPCM_decoder::IMA_ADPCM_decodestate	file:
state	audio/SDL_wave.c	/^    struct MS_ADPCM_decodestate state[2];$/;"	m	struct:MS_ADPCM_decoder	typeref:struct:MS_ADPCM_decoder::MS_ADPCM_decodestate	file:
status	joystick/bsd/SDL_sysjoystick.c	/^    } status;$/;"	m	struct:report	typeref:enum:report::__anon67	file:
status	thread/SDL_thread_c.h	/^    int status;$/;"	m	struct:SDL_Thread
stderrHandle	SDL_log.c	/^static HANDLE stderrHandle = NULL;$/;"	v	file:
stdio_close	file/SDL_rwops.c	/^stdio_close(SDL_RWops * context)$/;"	f	file:
stdio_read	file/SDL_rwops.c	/^stdio_read(SDL_RWops * context, void *ptr, size_t size, size_t maxnum)$/;"	f	file:
stdio_seek	file/SDL_rwops.c	/^stdio_seek(SDL_RWops * context, Sint64 offset, int whence)$/;"	f	file:
stdio_size	file/SDL_rwops.c	/^stdio_size(SDL_RWops * context)$/;"	f	file:
stdio_write	file/SDL_rwops.c	/^stdio_write(SDL_RWops * context, const void *ptr, size_t size, size_t num)$/;"	f	file:
stencil_size	video/SDL_sysvideo.h	/^        int stencil_size;$/;"	m	struct:SDL_VideoDevice::__anon27
stereo	video/SDL_sysvideo.h	/^        int stereo;$/;"	m	struct:SDL_VideoDevice::__anon27
stereo	video/x11/edid.h	/^    StereoType	stereo;$/;"	m	struct:DetailedTiming
stick	joystick/beos/SDL_bejoystick.cc	/^        BJoystick *stick;$/;"	m	struct:joystick_hwdata	file:
stopThread	haptic/windows/SDL_syshaptic.c	/^    volatile int stopThread;$/;"	m	struct:haptic_hwdata	file:
stopTicks	haptic/windows/SDL_syshaptic.c	/^    volatile Uint32 stopTicks;$/;"	m	struct:haptic_hwdata	file:
storage	thread/SDL_thread.c	/^    SDL_TLSData *storage;$/;"	m	struct:SDL_TLSEntry	file:
stream	audio/arts/SDL_artsaudio.h	/^    arts_stream_t stream;$/;"	m	struct:SDL_PrivateAudioData
stream	audio/fusionsound/SDL_fsaudio.h	/^    IFusionSoundStream *stream;$/;"	m	struct:SDL_PrivateAudioData
stream	audio/pulseaudio/SDL_pulseaudio.h	/^    pa_stream *stream;$/;"	m	struct:SDL_PrivateAudioData
stream_drain_complete	audio/pulseaudio/SDL_pulseaudio.c	/^stream_drain_complete(pa_stream *s, int success, void *userdata)$/;"	f	file:
streamer	audio/SDL_sysaudio.h	/^    SDL_AudioStreamer streamer;$/;"	m	struct:SDL_AudioDevice
stretch	render/SDL_yuv_sw_c.h	/^    SDL_Surface *stretch;$/;"	m	struct:SDL_SW_YUVTexture
strip_chans_6_to_2	audio/SDL_audiocvt.c	201;"	d	file:
strip_chans_6_to_2	audio/SDL_audiocvt.c	226;"	d	file:
strip_chans_6_to_4	audio/SDL_audiocvt.c	245;"	d	file:
strip_chans_6_to_4	audio/SDL_audiocvt.c	272;"	d	file:
style	video/windows/SDL_windowsmessagebox.c	/^    DWORD style;$/;"	m	struct:__anon52	file:
style	video/windows/SDL_windowsmessagebox.c	/^    DWORD style;$/;"	m	struct:__anon53	file:
supported	haptic/SDL_syshaptic.h	/^    unsigned int supported;     \/* Supported effects *\/$/;"	m	struct:_SDL_Haptic
surf	video/directfb/SDL_DirectFB_mouse.h	/^    IDirectFBSurface *surf;$/;"	m	struct:_DFB_CursorData
surface	render/software/SDL_render_sw.c	/^    SDL_Surface *surface;$/;"	m	struct:__anon88	file:
surface	video/SDL_sysvideo.h	/^    SDL_Surface *surface;$/;"	m	struct:SDL_Window
surface	video/directfb/SDL_DirectFB_render.c	/^    IDirectFBSurface *surface;$/;"	m	struct:__anon49	file:
surface	video/directfb/SDL_DirectFB_shape.h	/^    IDirectFBSurface *surface;$/;"	m	struct:__anon47
surface	video/directfb/SDL_DirectFB_window.h	/^    IDirectFBSurface        *surface;           \/* client drawing surface *\/$/;"	m	struct:_DFB_WindowData
surface	video/psp/SDL_pspgl_c.h	/^        EGLSurface surface;$/;"	m	struct:SDL_GLDriverData
surface_valid	video/SDL_sysvideo.h	/^    SDL_bool surface_valid;$/;"	m	struct:SDL_Window
suspend	video/x11/edid.h	/^    int			suspend;$/;"	m	struct:MonitorInfo
suspend_screensaver	video/SDL_sysvideo.h	/^    SDL_bool suspend_screensaver;$/;"	m	struct:SDL_VideoDevice
swapinterval	video/pandora/SDL_pandora.h	/^    uint32_t swapinterval;      \/* OpenGL ES default swap interval        *\/$/;"	m	struct:SDL_VideoData
swapinterval	video/psp/SDL_pspgl_c.h	/^    uint32_t swapinterval;$/;"	m	struct:SDL_GLDriverData
swapinterval	video/x11/SDL_x11opengl.c	/^static int swapinterval = -1;$/;"	v	file:
swizzle_alsa_channels	audio/alsa/SDL_alsa_audio.c	/^swizzle_alsa_channels(_THIS)$/;"	f	file:
swizzle_alsa_channels_6_16bit	audio/alsa/SDL_alsa_audio.c	/^swizzle_alsa_channels_6_16bit(_THIS)$/;"	f	file:
swizzle_alsa_channels_6_32bit	audio/alsa/SDL_alsa_audio.c	/^swizzle_alsa_channels_6_32bit(_THIS)$/;"	f	file:
swizzle_alsa_channels_6_64bit	audio/alsa/SDL_alsa_audio.c	/^swizzle_alsa_channels_6_64bit(_THIS)$/;"	f	file:
swizzle_alsa_channels_6_8bit	audio/alsa/SDL_alsa_audio.c	/^swizzle_alsa_channels_6_8bit(_THIS)$/;"	f	file:
swizzled	render/psp/SDL_render_psp.c	/^    SDL_bool            swizzled;                           \/**< Is image swizzled. *\/$/;"	m	struct:__anon77	file:
sym	video/psp/SDL_pspevents.c	/^    SDL_Keycode sym;$/;"	m	struct:__anon8	file:
sync_on_green	video/x11/edid.h	/^	    int sync_on_green;$/;"	m	struct:DetailedTiming::__anon12::__anon13
sync_signal_level	video/x11/edid.h	/^	    double	sync_signal_level;$/;"	m	struct:MonitorInfo::__anon15::__anon17
sys_alloc	stdlib/SDL_malloc.c	/^sys_alloc(mstate m, size_t nb)$/;"	f	file:
sys_ids	video/directfb/SDL_DirectFB_events.c	/^    int sys_ids;$/;"	m	struct:_cb_data	file:
sys_kbd	video/directfb/SDL_DirectFB_events.c	/^    int sys_kbd;$/;"	m	struct:_cb_data	file:
sys_trim	stdlib/SDL_malloc.c	/^sys_trim(mstate m, size_t pad)$/;"	f	file:
szName	thread/windows/SDL_systhread.c	/^    LPCSTR szName; \/* pointer to name (in user addr space) *\/$/;"	m	struct:tagTHREADNAME_INFO	file:
tColorRGBA	render/software/SDL_rotate.c	/^typedef struct tColorRGBA {$/;"	s	file:
tColorRGBA	render/software/SDL_rotate.c	/^} tColorRGBA;$/;"	t	typeref:struct:tColorRGBA	file:
tColorY	render/software/SDL_rotate.c	/^typedef struct tColorY {$/;"	s	file:
tColorY	render/software/SDL_rotate.c	/^} tColorY;$/;"	t	typeref:struct:tColorY	file:
tThreadStartParms	thread/windows/SDL_systhread.c	/^} tThreadStartParms, *pThreadStartParms;$/;"	t	typeref:struct:ThreadStartParms	file:
table	video/SDL_blit.h	/^    Uint8 *table;$/;"	m	struct:__anon37
table	video/x11/SDL_x11keyboard.c	/^    const SDL_Scancode const *table;$/;"	m	struct:__anon23	file:
table_size	video/x11/SDL_x11keyboard.c	/^    int table_size;$/;"	m	struct:__anon23	file:
tagINPUTCONTEXT2	video/windows/SDL_windowsvideo.h	/^typedef struct tagINPUTCONTEXT2 {$/;"	s
tagTHREADNAME_INFO	thread/windows/SDL_systhread.c	/^typedef struct tagTHREADNAME_INFO$/;"	s	file:
tail	events/SDL_events.c	/^    SDL_EventEntry *tail;$/;"	m	struct:__anon60	file:
tail	render/opengles2/SDL_render_gles2.c	/^    GLES2_ProgramCacheEntry *tail;$/;"	m	struct:GLES2_ProgramCache	file:
tapdata	video/cocoa/SDL_cocoamouse.h	/^    void *tapdata;$/;"	m	struct:__anon40
target	render/SDL_sysrender.h	/^    SDL_Texture *target;$/;"	m	struct:SDL_Renderer
target	video/directfb/SDL_DirectFB_render.c	/^    IDirectFBSurface* target;$/;"	m	struct:__anon48	file:
target_format	render/SDL_yuv_sw_c.h	/^    Uint32 target_format;$/;"	m	struct:SDL_SW_YUVTexture
tbinptr	stdlib/SDL_malloc.c	/^typedef struct malloc_tree_chunk *tbinptr;      \/* The type of bins of trees *\/$/;"	t	typeref:struct:malloc_tree_chunk	file:
tchunk	stdlib/SDL_malloc.c	/^typedef struct malloc_tree_chunk tchunk;$/;"	t	typeref:struct:malloc_tree_chunk	file:
tchunkptr	stdlib/SDL_malloc.c	/^typedef struct malloc_tree_chunk *tchunkptr;$/;"	t	typeref:struct:malloc_tree_chunk	file:
test_bit	haptic/linux/SDL_syshaptic.c	78;"	d	file:
test_bit	joystick/linux/SDL_sysjoystick.c	192;"	d	file:
test_device	audio/SDL_audiodev.c	/^test_device(const char *fname, int flags, int (*test) (int fd),$/;"	f	file:
test_stub	audio/SDL_audiodev.c	/^test_stub(int fd)$/;"	f	file:
tex_coords	render/opengles/SDL_render_gles.c	/^        SDL_bool tex_coords;$/;"	m	struct:__anon80::__anon81	file:
tex_coords	render/opengles2/SDL_render_gles2.c	/^        SDL_bool tex_coords;$/;"	m	struct:GLES2_DriverContext::__anon86	file:
texh	render/opengl/SDL_render_gl.c	/^    GLfloat texh;$/;"	m	struct:__anon92	file:
texh	render/opengles/SDL_render_gles.c	/^    GLfloat texh;$/;"	m	struct:__anon82	file:
text	video/x11/SDL_x11messagebox.c	/^    const char *text;                   \/* Text for this line *\/$/;"	m	struct:TextLineData	file:
textRect	video/android/SDL_androidvideo.h	/^    SDL_Rect        textRect;$/;"	m	struct:SDL_VideoData
text_height	video/x11/SDL_x11messagebox.c	/^    int text_height;                    \/* Height for text lines. *\/$/;"	m	struct:SDL_MessageBoxDataX11	file:
text_width	video/x11/SDL_x11messagebox.c	/^    int text_width;                     \/* Text width *\/$/;"	m	struct:SDL_MessageBoxButtonDataX11	file:
texture	render/direct3d/SDL_render_d3d.c	/^    IDirect3DTexture9 *texture;$/;"	m	struct:__anon95	file:
texture	render/opengl/SDL_render_gl.c	/^    GLuint texture;$/;"	m	struct:__anon92	file:
texture	render/opengles/SDL_render_gles.c	/^    GLuint texture;$/;"	m	struct:__anon82	file:
texture	render/opengles2/SDL_render_gles2.c	/^    GLenum texture;$/;"	m	struct:GLES2_TextureData	file:
texture	video/SDL_video.c	/^    SDL_Texture *texture;$/;"	m	struct:__anon44	file:
textureHeight	render/psp/SDL_render_psp.c	/^    unsigned int        textureHeight;                      \/**< Texture height (power of two). *\/$/;"	m	struct:__anon77	file:
textureWidth	render/psp/SDL_render_psp.c	/^    unsigned int        textureWidth;                       \/**< Texture width (power of two). *\/$/;"	m	struct:__anon77	file:
texture_magic	render/SDL_render.c	/^static char texture_magic;$/;"	v	file:
texture_type	render/opengles2/SDL_render_gles2.c	/^    GLenum texture_type;$/;"	m	struct:GLES2_TextureData	file:
textures	render/SDL_sysrender.h	/^    SDL_Texture *textures;$/;"	m	struct:SDL_Renderer
texw	render/opengl/SDL_render_gl.c	/^    GLfloat texw;$/;"	m	struct:__anon92	file:
texw	render/opengles/SDL_render_gles.c	/^    GLfloat texw;$/;"	m	struct:__anon82	file:
theme	video/directfb/SDL_DirectFB_window.h	/^    DFB_Theme               theme;$/;"	m	struct:_DFB_WindowData
theme_none	video/directfb/SDL_DirectFB_WM.c	/^static DFB_Theme theme_none = {$/;"	v	file:
theme_std	video/directfb/SDL_DirectFB_WM.c	/^static DFB_Theme theme_std = {$/;"	v	file:
this2	audio/nas/SDL_nasaudio.c	/^static struct SDL_PrivateAudioData *this2 = NULL;$/;"	v	typeref:struct:SDL_PrivateAudioData	file:
thread	audio/SDL_sysaudio.h	/^    SDL_Thread *thread;$/;"	m	struct:SDL_AudioDevice
thread	haptic/windows/SDL_syshaptic.c	/^    SDL_Thread *thread;$/;"	m	struct:haptic_hwdata	file:
thread	joystick/psp/SDL_sysjoystick.c	/^static SDL_Thread *thread = NULL;$/;"	v	file:
thread	thread/SDL_thread.c	/^    SDL_threadID thread;$/;"	m	struct:SDL_TLSEntry	file:
thread	timer/SDL_timer.c	/^    SDL_Thread *thread;$/;"	m	struct:__anon114	file:
thread	video/psp/SDL_pspevents.c	/^static SDL_Thread *thread = NULL;$/;"	v	file:
thread_args	thread/SDL_thread.c	/^} thread_args;$/;"	t	typeref:struct:__anon3	file:
thread_local_storage	thread/beos/SDL_systls.c	/^static int32 thread_local_storage = B_NO_MEMORY;$/;"	v	file:
thread_local_storage	thread/pthread/SDL_systls.c	/^static pthread_key_t thread_local_storage = INVALID_PTHREAD_KEY;$/;"	v	file:
thread_local_storage	thread/windows/SDL_systls.c	/^static DWORD thread_local_storage = TLS_OUT_OF_INDEXES;$/;"	v	file:
threadid	audio/SDL_sysaudio.h	/^    SDL_threadID threadid;$/;"	m	struct:SDL_AudioDevice
threadid	thread/SDL_thread_c.h	/^    SDL_threadID threadid;$/;"	m	struct:SDL_Thread
ticks_started	timer/SDL_timer.c	/^static Uint32 ticks_started = 0;$/;"	v	file:
timeSetPeriod	timer/windows/SDL_systimer.c	/^timeSetPeriod(UINT uPeriod)$/;"	f	file:
timeout_on_wait	audio/qsa/SDL_qsa_audio.h	/^    uint32_t timeout_on_wait;$/;"	m	struct:SDL_PrivateAudioData
timer	timer/SDL_timer.c	/^    SDL_Timer *timer;$/;"	m	struct:_SDL_TimerMap	file:
timerID	timer/SDL_timer.c	/^    int timerID;$/;"	m	struct:_SDL_Timer	file:
timerID	timer/SDL_timer.c	/^    int timerID;$/;"	m	struct:_SDL_TimerMap	file:
timermap	timer/SDL_timer.c	/^    SDL_TimerMap *timermap;$/;"	m	struct:__anon114	file:
timermap_lock	timer/SDL_timer.c	/^    SDL_mutex *timermap_lock;$/;"	m	struct:__anon114	file:
timers	timer/SDL_timer.c	/^    SDL_Timer *timers;$/;"	m	struct:__anon114	file:
tiny	libm/e_atan2.c	/^tiny  = 1.0e-300,$/;"	v	file:
tiny	libm/e_pow.c	/^         huge_val = 1.0e300, tiny = 1.0e-300,$/;"	v	file:
tiny	libm/e_sqrt.c	/^static const double one = 1.0, tiny = 1.0e-300;$/;"	v	file:
tiny	libm/e_sqrt.c	/^static double one = 1.0, tiny = 1.0e-300;$/;"	v	file:
tiny	libm/s_scalbn.c	/^         huge_val = 1.0e+300, tiny = 1.0e-300;$/;"	v	file:
title	video/SDL_sysvideo.h	/^    char *title;$/;"	m	struct:SDL_Window
tmalloc_large	stdlib/SDL_malloc.c	/^tmalloc_large(mstate m, size_t nb)$/;"	f	file:
tmalloc_small	stdlib/SDL_malloc.c	/^tmalloc_small(mstate m, size_t nb)$/;"	f	file:
top	stdlib/SDL_malloc.c	/^    mchunkptr top;$/;"	m	struct:malloc_state	file:
top_border	video/x11/edid.h	/^    int		top_border;$/;"	m	struct:DetailedTiming
top_size	video/directfb/SDL_DirectFB_WM.h	/^    int top_size;$/;"	m	struct:_DFB_Theme
topsize	stdlib/SDL_malloc.c	/^    size_t topsize;$/;"	m	struct:malloc_state	file:
total_signal_level	video/x11/edid.h	/^	    double	total_signal_level;$/;"	m	struct:MonitorInfo::__anon15::__anon17
transaxis	joystick/windows/SDL_mmjoystick.c	/^    } transaxis[6];$/;"	m	struct:joystick_hwdata	typeref:struct:joystick_hwdata::_transaxis	file:
transformSurfaceY	render/software/SDL_rotate.c	/^void transformSurfaceY(SDL_Surface * src, SDL_Surface * dst, int cx, int cy, int isin, int icos, int flipx, int flipy)$/;"	f
traverse_and_check	stdlib/SDL_malloc.c	/^traverse_and_check(mstate m)$/;"	f	file:
treebin_at	stdlib/SDL_malloc.c	2287;"	d	file:
treebins	stdlib/SDL_malloc.c	/^    tbinptr treebins[NTREEBINS];$/;"	m	struct:malloc_state	file:
treemap	stdlib/SDL_malloc.c	/^    binmap_t treemap;$/;"	m	struct:malloc_state	file:
treemap_is_marked	stdlib/SDL_malloc.c	2351;"	d	file:
triggered_assertions	SDL_assert.c	/^static SDL_assert_data *triggered_assertions = NULL;$/;"	v	file:
trim_check	stdlib/SDL_malloc.c	/^    size_t trim_check;$/;"	m	struct:malloc_state	file:
trim_threshold	stdlib/SDL_malloc.c	/^    size_t trim_threshold;$/;"	m	struct:malloc_params	file:
two	libm/e_pow.c	/^         zero = 0.0, one = 1.0, two = 2.0, two53 = 9007199254740992.0,  \/* 0x43400000, 0x00000000 *\/$/;"	v	file:
two24	libm/e_rem_pio2.c	/^    two24 = 1.67772160000000000000e+07, \/* 0x41700000, 0x00000000 *\/$/;"	v	file:
two24	libm/k_rem_pio2.c	/^  zero = 0.0, one = 1.0, two24 = 1.67772160000000000000e+07,    \/* 0x41700000, 0x00000000 *\/$/;"	v	file:
two53	libm/e_pow.c	/^         zero = 0.0, one = 1.0, two = 2.0, two53 = 9007199254740992.0,  \/* 0x43400000, 0x00000000 *\/$/;"	v	file:
two54	libm/e_log.c	/^    two54 = 1.80143985094819840000e+16, \/* 43500000 00000000 *\/$/;"	v	file:
two54	libm/s_scalbn.c	/^       two54 = 1.80143985094819840000e+16,      \/* 0x43500000, 0x00000000 *\/$/;"	v	file:
two_over_pi	libm/e_rem_pio2.c	/^     static const int32_t two_over_pi[] = {$/;"	v	file:
twom54	libm/s_scalbn.c	/^         twom54 = 5.55111512312578270212e-17,   \/* 0x3C900000, 0x00000000 *\/$/;"	v	file:
twon24	libm/k_rem_pio2.c	/^    twon24 = 5.96046447753906250000e-08;        \/* 0x3E700000, 0x00000000 *\/$/;"	v	file:
type	joystick/bsd/SDL_sysjoystick.c	/^    } type;$/;"	m	struct:joystick_hwdata	typeref:enum:joystick_hwdata::__anon71	file:
type	joystick/windows/SDL_dxjoystick_c.h	/^    Type type;$/;"	m	struct:input_t
type	render/opengl/SDL_render_gl.c	/^    GLenum type;$/;"	m	struct:__anon92	file:
type	render/opengles/SDL_render_gles.c	/^    GLenum type;$/;"	m	struct:__anon82	file:
type	render/opengles2/SDL_render_gles2.c	/^    GLES2_ShaderType type;$/;"	m	struct:GLES2_ShaderCacheEntry	file:
type	render/opengles2/SDL_shaders_gles2.h	/^    GLenum type;$/;"	m	struct:GLES2_ShaderInstance
type	video/x11/SDL_x11events.c	/^    Atom type;$/;"	m	struct:__anon20	file:
u	render/direct3d/SDL_render_d3d.c	/^    float u, v;$/;"	m	struct:__anon96	file:
u	render/psp/SDL_render_psp.c	/^    float   u, v;$/;"	m	struct:__anon79	file:
u_int32_t	libm/math_private.h	/^typedef unsigned int u_int32_t;$/;"	t
ub	render/mmx.h	/^    unsigned char ub[8];        \/* 8 Unsigned Byte *\/$/;"	m	union:__anon97
uchar	video/x11/edid.h	/^typedef unsigned char uchar;$/;"	t
ud	render/mmx.h	/^    unsigned int ud[2];         \/* 2 Unsigned Doubleword *\/$/;"	m	union:__anon97
udev	joystick/linux/SDL_sysjoystick.c	/^static struct udev *udev = NULL;$/;"	v	typeref:struct:udev	file:
udev_handle	joystick/linux/SDL_sysjoystick.c	/^static void *udev_handle = NULL;$/;"	v	file:
udev_library	joystick/linux/SDL_sysjoystick.c	/^static const char *udev_library = "libudev.so.0";$/;"	v	file:
udev_mon	joystick/linux/SDL_sysjoystick.c	/^static struct udev_monitor *udev_mon = NULL;$/;"	v	typeref:struct:udev_monitor	file:
uhid_report	joystick/bsd/SDL_sysjoystick.c	/^    int uhid_report;$/;"	m	struct:__anon68	file:
uiscreen	video/uikit/SDL_uikitmodes.h	/^    UIScreen *uiscreen;$/;"	m	struct:__anon29
uiscreenmode	video/uikit/SDL_uikitmodes.h	/^    UIScreenMode *uiscreenmode;$/;"	m	struct:__anon30
uiwindow	video/uikit/SDL_uikitwindow.h	/^    UIWindow *uiwindow;$/;"	m	struct:SDL_WindowData
ulaw_buf	audio/sun/SDL_sunaudio.h	/^    Uint8 *ulaw_buf;            \/* The U-law mixing buffer *\/$/;"	m	struct:SDL_PrivateAudioData
ulaw_only	audio/sun/SDL_sunaudio.h	/^    int ulaw_only;              \/* Flag -- does hardware only output U-law? *\/$/;"	m	struct:SDL_PrivateAudioData
uncentered	joystick/SDL_sysjoystick.h	/^    Uint8 uncentered;           \/* 1 if this device needs to have its state reset to 0 *\/$/;"	m	struct:_SDL_Joystick
uncentered	joystick/darwin/SDL_sysjoystick_c.h	/^    int uncentered;$/;"	m	struct:joystick_hwdata
uncopy_32	video/SDL_RLEaccel.c	/^uncopy_32(Uint32 * dst, void *src, int n,$/;"	f	file:
uncopy_opaque_16	video/SDL_RLEaccel.c	/^uncopy_opaque_16(Uint32 * dst, void *src, int n,$/;"	f	file:
uncopy_transl_16	video/SDL_RLEaccel.c	/^uncopy_transl_16(Uint32 * dst, void *src, int n,$/;"	f	file:
unicharToUIKeyInfoTable	video/uikit/keyinfotable.h	/^static UIKitKeyInfo unicharToUIKeyInfoTable[] = {$/;"	v
uniform_locations	render/opengles2/SDL_render_gles2.c	/^    GLuint uniform_locations[16];$/;"	m	struct:GLES2_ProgramCacheEntry	file:
unlink_chunk	stdlib/SDL_malloc.c	3201;"	d	file:
unlink_first_small_chunk	stdlib/SDL_malloc.c	3024;"	d	file:
unlink_large_chunk	stdlib/SDL_malloc.c	3124;"	d	file:
unlink_small_chunk	stdlib/SDL_malloc.c	3004;"	d	file:
unused	video/psp/SDL_pspmouse.c	/^    int unused;$/;"	m	struct:WMcursor	file:
uordblks	stdlib/SDL_malloc.c	/^    MALLINFO_FIELD_TYPE uordblks;       \/* total allocated space *\/$/;"	m	struct:mallinfo	file:
updateSize	render/direct3d/SDL_render_d3d.c	/^    SDL_bool updateSize;$/;"	m	struct:__anon94	file:
upleft	video/SDL_shape_internals.h	/^	struct SDL_ShapeTree *upleft,*upright,*downleft,*downright;$/;"	m	struct:__anon31	typeref:struct:__anon31::SDL_ShapeTree
upright	video/SDL_shape_internals.h	/^	struct SDL_ShapeTree *upleft,*upright,*downleft,*downright;$/;"	m	struct:__anon31	typeref:struct:__anon31::
upsample	audio/SDL_audio_c.h	/^    int upsample;$/;"	m	struct:__anon113
uq	render/mmx.h	/^    unsigned long long uq;      \/* Unsigned Quadword *\/$/;"	m	union:__anon97
usage	haptic/darwin/SDL_syshaptic.c	/^    long usage;$/;"	m	struct:__anon99	file:
usage	joystick/darwin/SDL_sysjoystick_c.h	/^    long usage;                 \/* usage page from IOUSBHID Parser.h which defines general usage *\/$/;"	m	struct:joystick_hwdata
usage	joystick/darwin/SDL_sysjoystick_c.h	/^    long usagePage, usage;      \/* HID usage *\/$/;"	m	struct:recElement
usagePage	haptic/darwin/SDL_syshaptic.c	/^    long usagePage;$/;"	m	struct:__anon99	file:
usagePage	joystick/darwin/SDL_sysjoystick_c.h	/^    long usagePage, usage;      \/* HID usage *\/$/;"	m	struct:recElement
usagePage	joystick/darwin/SDL_sysjoystick_c.h	/^    long usagePage;             \/* usage within above page from IOUSBHID Parser.h which defines specific usage *\/$/;"	m	struct:joystick_hwdata
usage_to_joyaxe	joystick/bsd/SDL_sysjoystick.c	/^usage_to_joyaxe(unsigned usage)$/;"	f	file:
useDrawTexture	render/opengles/SDL_render_gles.c	/^    SDL_bool useDrawTexture;$/;"	m	struct:__anon80	file:
use_egl	video/SDL_sysvideo.h	/^        int use_egl;$/;"	m	struct:SDL_VideoDevice::__anon27
use_linux_input	video/directfb/SDL_DirectFB_video.h	/^    int                 use_linux_input;$/;"	m	struct:_DFB_DeviceData
use_lock	stdlib/SDL_malloc.c	2113;"	d	file:
use_mitshm	video/x11/SDL_x11window.h	/^    SDL_bool use_mitshm;$/;"	m	struct:__anon25
use_mmap	stdlib/SDL_malloc.c	2117;"	d	file:
use_noncontiguous	stdlib/SDL_malloc.c	2121;"	d	file:
use_streamer	audio/SDL_sysaudio.h	/^    int use_streamer;$/;"	m	struct:SDL_AudioDevice
use_vidmode	video/x11/SDL_x11modes.h	/^    int use_vidmode;$/;"	m	struct:__anon18
use_xinerama	video/x11/SDL_x11modes.h	/^    int use_xinerama;$/;"	m	struct:__anon18
use_xrandr	video/x11/SDL_x11modes.h	/^    int use_xrandr;$/;"	m	struct:__anon18
use_yuv_direct	video/directfb/SDL_DirectFB_video.h	/^    int                 use_yuv_direct;$/;"	m	struct:_DFB_DeviceData
use_yuv_underlays	video/directfb/SDL_DirectFB_video.h	/^    int                 use_yuv_underlays;$/;"	m	struct:_DFB_DeviceData
used	joystick/linux/SDL_sysjoystick_c.h	/^        int used;$/;"	m	struct:joystick_hwdata::axis_correct
used	video/windows/SDL_windowsmessagebox.c	/^    size_t used;$/;"	m	struct:__anon54	file:
userDLL	video/windows/SDL_windowsvideo.h	/^    void* userDLL;$/;"	m	struct:SDL_VideoData
userdata	SDL_hints.c	/^    void *userdata;$/;"	m	struct:SDL_HintWatch	file:
userdata	events/SDL_events.c	/^    void *userdata;$/;"	m	struct:SDL_EventWatcher	file:
userid	haptic/windows/SDL_syshaptic.c	/^    Uint8 userid; \/* XInput userid index for this joystick *\/$/;"	m	struct:__anon100	file:
userid	haptic/windows/SDL_syshaptic.c	/^    Uint8 userid; \/* XInput userid index for this joystick *\/$/;"	m	struct:haptic_hwdata	file:
userid	joystick/windows/SDL_dxjoystick_c.h	/^    Uint8 userid; \/* XInput userid index for this joystick *\/$/;"	m	struct:joystick_hwdata
userx	video/SDL_sysvideo.h	/^    Uint32 userx,usery;$/;"	m	struct:SDL_WindowShaper
usery	video/SDL_sysvideo.h	/^    Uint32 userx,usery;$/;"	m	struct:SDL_WindowShaper
uses_gles	video/pandora/SDL_pandora.h	/^    SDL_bool uses_gles;         \/* if true window must support OpenGL ES *\/$/;"	m	struct:SDL_WindowData
uses_gles	video/psp/SDL_pspvideo.h	/^    SDL_bool uses_gles;         \/* if true window must support OpenGL ES *\/$/;"	m	struct:SDL_WindowData
usmblks	stdlib/SDL_malloc.c	/^    MALLINFO_FIELD_TYPE usmblks;        \/* maximum total allocated space *\/$/;"	m	struct:mallinfo	file:
utexture	render/direct3d/SDL_render_d3d.c	/^    IDirect3DTexture9 *utexture;$/;"	m	struct:__anon95	file:
utexture	render/opengl/SDL_render_gl.c	/^    GLuint utexture;$/;"	m	struct:__anon92	file:
utf16_to_utf8	audio/directsound/SDL_directsound.c	/^utf16_to_utf8(const WCHAR *S)$/;"	f	file:
utf16_to_utf8	audio/xaudio2/SDL_xaudio2.c	/^utf16_to_utf8(const WCHAR *S)$/;"	f	file:
uw	render/mmx.h	/^    unsigned short uw[4];       \/* 4 Unsigned Word *\/$/;"	m	union:__anon97
v	render/direct3d/SDL_render_d3d.c	/^    float u, v;$/;"	m	struct:__anon96	file:
v	render/psp/SDL_render_psp.c	/^    float   u, v;$/;"	m	struct:__anon79	file:
v_addr	video/x11/edid.h	/^    int		v_addr;$/;"	m	struct:DetailedTiming
v_blank	video/x11/edid.h	/^    int		v_blank;$/;"	m	struct:DetailedTiming
v_front_porch	video/x11/edid.h	/^    int		v_front_porch;$/;"	m	struct:DetailedTiming
v_sync	video/x11/edid.h	/^    int		v_sync;$/;"	m	struct:DetailedTiming
value	SDL_hints.c	/^    char *value;$/;"	m	struct:SDL_Hint	file:
value	libm/math_private.h	/^    double value;$/;"	m	union:__anon102
value	libm/math_private.h	/^    double value;$/;"	m	union:__anon104
value	libm/math_private.h	/^    float value;$/;"	m	union:__anon106
value_f	SDL_error_c.h	/^        double value_f;$/;"	m	union:SDL_error::__anon101
value_i	SDL_error_c.h	/^        int value_i;$/;"	m	union:SDL_error::__anon101
value_ptr	SDL_error_c.h	/^        void *value_ptr;$/;"	m	union:SDL_error::__anon101
vert_shader	render/opengl/SDL_shaders_gl.c	/^    GLhandleARB vert_shader;$/;"	m	struct:__anon89	file:
vertex_shader	render/opengles2/SDL_render_gles2.c	/^    GLES2_ShaderCacheEntry *vertex_shader;$/;"	m	struct:GLES2_ProgramCacheEntry	file:
vibration	haptic/windows/SDL_syshaptic.c	/^    XINPUT_VIBRATION vibration;$/;"	m	struct:haptic_hweffect	file:
vidID	video/directfb/SDL_DirectFB_modes.h	/^    DFBDisplayLayerID       vidID;$/;"	m	struct:_DFB_DisplayData
vidIDinuse	video/directfb/SDL_DirectFB_modes.h	/^    int                     vidIDinuse;$/;"	m	struct:_DFB_DisplayData
video_signal_level	video/x11/edid.h	/^	    double	video_signal_level;$/;"	m	struct:MonitorInfo::__anon15::__anon17
videodata	video/cocoa/SDL_cocoawindow.h	/^    struct SDL_VideoData *videodata;$/;"	m	struct:SDL_WindowData	typeref:struct:SDL_WindowData::SDL_VideoData
videodata	video/windows/SDL_windowswindow.h	/^    struct SDL_VideoData *videodata;$/;"	m	struct:__anon57	typeref:struct:__anon57::SDL_VideoData
videodata	video/x11/SDL_x11window.h	/^    struct SDL_VideoData *videodata;$/;"	m	struct:__anon25	typeref:struct:__anon25::SDL_VideoData
vidlayer	video/directfb/SDL_DirectFB_modes.c	/^    DFBDisplayLayerID vidlayer[DFB_MAX_SCREENS];$/;"	m	struct:screen_callback_t	file:
vidlayer	video/directfb/SDL_DirectFB_modes.h	/^    IDirectFBDisplayLayer   *vidlayer;$/;"	m	struct:_DFB_DisplayData
vidmode_screen	video/x11/SDL_x11modes.h	/^    int vidmode_screen;$/;"	m	struct:__anon18
view	video/uikit/SDL_uikitwindow.h	/^    SDL_uikitopenglview *view;$/;"	m	struct:SDL_WindowData
viewcontroller	video/uikit/SDL_uikitwindow.h	/^    SDL_uikitviewcontroller *viewcontroller;$/;"	m	struct:SDL_WindowData
viewport	render/SDL_sysrender.h	/^    SDL_Rect viewport;$/;"	m	struct:SDL_Renderer
viewport_backup	render/SDL_sysrender.h	/^    SDL_Rect viewport_backup;$/;"	m	struct:SDL_Renderer
visual	video/x11/SDL_x11modes.h	/^    Visual *visual;$/;"	m	struct:__anon18
visual	video/x11/SDL_x11window.h	/^    Visual *visual;$/;"	m	struct:__anon25
vm_error	video/x11/SDL_x11modes.c	/^int vm_event, vm_error = -1;$/;"	v
vm_event	video/x11/SDL_x11modes.c	/^int vm_event, vm_error = -1;$/;"	v
vm_mode	video/x11/SDL_x11modes.h	/^    XF86VidModeModeInfo vm_mode;$/;"	m	struct:__anon19
vsync	render/psp/SDL_render_psp.c	/^    SDL_bool        vsync;$/;"	m	struct:__anon76	file:
vtIPPASink	video/windows/SDL_windowskeyboard.c	/^static void *vtIPPASink[] = {$/;"	v	file:
vtUIElementSink	video/windows/SDL_windowskeyboard.c	/^static void *vtUIElementSink[] = {$/;"	v	file:
vtexture	render/direct3d/SDL_render_d3d.c	/^    IDirect3DTexture9 *vtexture;$/;"	m	struct:__anon95	file:
vtexture	render/opengl/SDL_render_gl.c	/^    GLuint vtexture;$/;"	m	struct:__anon92	file:
w	render/SDL_sysrender.h	/^    float w;$/;"	m	struct:__anon75
w	render/SDL_sysrender.h	/^    int w;                      \/**< The width of the texture *\/$/;"	m	struct:SDL_Texture
w	render/SDL_yuv_sw_c.h	/^    int w, h;$/;"	m	struct:SDL_SW_YUVTexture
w	render/mmx.h	/^    short w[4];                 \/* 4 Word (16-bit) values *\/$/;"	m	union:__anon97
w	render/opengl/SDL_render_gl.c	/^    Uint32 w, h;$/;"	m	struct:GL_FBOList	file:
w	render/opengles/SDL_render_gles.c	/^   Uint32 w, h;$/;"	m	struct:GLES_FBOList	file:
w	render/opengles2/SDL_render_gles2.c	/^   Uint32 w, h;$/;"	m	struct:GLES2_FBOList	file:
w	video/SDL_sysvideo.h	/^    int w, h;$/;"	m	struct:SDL_Window
wButtons	joystick/windows/SDL_dxjoystick_c.h	/^    WORD wButtons;$/;"	m	struct:__anon72
wNumCoef	audio/SDL_wave.c	/^    Uint16 wNumCoef;$/;"	m	struct:MS_ADPCM_decoder	file:
wSamplesPerBlock	audio/SDL_wave.c	/^    Uint16 wSamplesPerBlock;$/;"	m	struct:IMA_ADPCM_decoder	file:
wSamplesPerBlock	audio/SDL_wave.c	/^    Uint16 wSamplesPerBlock;$/;"	m	struct:MS_ADPCM_decoder	file:
wait	thread/SDL_thread.c	/^    SDL_sem *wait;$/;"	m	struct:__anon3	file:
wait_done	thread/generic/SDL_syscond.c	/^    SDL_sem *wait_done;$/;"	m	struct:SDL_cond	file:
wait_done	thread/psp/SDL_syscond.c	/^    SDL_sem *wait_done;$/;"	m	struct:SDL_cond	file:
wait_sem	thread/generic/SDL_syscond.c	/^    SDL_sem *wait_sem;$/;"	m	struct:SDL_cond	file:
wait_sem	thread/psp/SDL_syscond.c	/^    SDL_sem *wait_sem;$/;"	m	struct:SDL_cond	file:
waiters_count	thread/generic/SDL_syssem.c	/^    Uint32 waiters_count;$/;"	m	struct:SDL_semaphore	file:
waiting	thread/generic/SDL_syscond.c	/^    int waiting;$/;"	m	struct:SDL_cond	file:
waiting	thread/psp/SDL_syscond.c	/^    int waiting;$/;"	m	struct:SDL_cond	file:
wavebuf	audio/winmm/SDL_winmm.h	/^    WAVEHDR wavebuf[NUM_BUFFERS];       \/* Wave audio fragments *\/$/;"	m	struct:SDL_PrivateAudioData
wavefmt	audio/SDL_wave.c	/^    WaveFMT wavefmt;$/;"	m	struct:IMA_ADPCM_decoder	file:
wavefmt	audio/SDL_wave.c	/^    WaveFMT wavefmt;$/;"	m	struct:MS_ADPCM_decoder	file:
wglChoosePixelFormatARB	video/windows/SDL_windowsopengl.h	/^      BOOL(WINAPI * wglChoosePixelFormatARB) (HDC hdc,$/;"	m	struct:SDL_GLDriverData
wglCreateContext	video/windows/SDL_windowsopengl.h	/^      HGLRC(WINAPI * wglCreateContext) (HDC hdc);$/;"	m	struct:SDL_GLDriverData
wglDeleteContext	video/windows/SDL_windowsopengl.h	/^      BOOL(WINAPI * wglDeleteContext) (HGLRC hglrc);$/;"	m	struct:SDL_GLDriverData
wglGetPixelFormatAttribivARB	video/windows/SDL_windowsopengl.h	/^      BOOL(WINAPI * wglGetPixelFormatAttribivARB) (HDC hdc, int iPixelFormat,$/;"	m	struct:SDL_GLDriverData
wglGetProcAddress	video/windows/SDL_windowsopengl.h	/^    void *(WINAPI * wglGetProcAddress) (const char *proc);$/;"	m	struct:SDL_GLDriverData
wglGetSwapIntervalEXT	video/windows/SDL_windowsopengl.h	/^    int (WINAPI * wglGetSwapIntervalEXT) (void);$/;"	m	struct:SDL_GLDriverData
wglMakeCurrent	video/windows/SDL_windowsopengl.h	/^      BOOL(WINAPI * wglMakeCurrent) (HDC hdc, HGLRC hglrc);$/;"	m	struct:SDL_GLDriverData
wglShareLists	video/windows/SDL_windowsopengl.h	/^      BOOL(WINAPI * wglShareLists) (HGLRC hglrc1, HGLRC hglrc2);$/;"	m	struct:SDL_GLDriverData
wglSwapIntervalEXT	video/windows/SDL_windowsopengl.h	/^    BOOL (WINAPI * wglSwapIntervalEXT) (int interval);$/;"	m	struct:SDL_GLDriverData
white_x	video/x11/edid.h	/^    double		white_x;$/;"	m	struct:MonitorInfo
white_y	video/x11/edid.h	/^    double		white_y;$/;"	m	struct:MonitorInfo
width	render/psp/SDL_render_psp.c	/^    unsigned int        width;                              \/**< Image width. *\/$/;"	m	struct:__anon77	file:
width	stdlib/SDL_string.c	/^    int width;$/;"	m	struct:__anon4	file:
width	video/psp/SDL_pspgl.c	/^static EGLint width = 480;$/;"	v	file:
width	video/x11/SDL_x11messagebox.c	/^    int width;                          \/* Width of this text line *\/$/;"	m	struct:TextLineData	file:
width	video/x11/edid.h	/^    int width;$/;"	m	struct:Timing
width_mm	video/x11/edid.h	/^    int			width_mm;		\/* -1 if not specified *\/$/;"	m	struct:MonitorInfo
width_mm	video/x11/edid.h	/^    int		width_mm;$/;"	m	struct:DetailedTiming
win32_acquire_lock	stdlib/SDL_malloc.c	/^win32_acquire_lock(MLOCK_T * sl)$/;"	f	file:
win32_release_lock	stdlib/SDL_malloc.c	/^win32_release_lock(MLOCK_T * sl)$/;"	f	file:
win32direct_mmap	stdlib/SDL_malloc.c	/^win32direct_mmap(size_t size)$/;"	f	file:
win32mmap	stdlib/SDL_malloc.c	/^win32mmap(size_t size)$/;"	f	file:
win32munmap	stdlib/SDL_malloc.c	/^win32munmap(void *ptr, size_t size)$/;"	f	file:
window	render/SDL_sysrender.h	/^    SDL_Window *window;$/;"	m	struct:SDL_Renderer
window	render/software/SDL_render_sw.c	/^    SDL_Surface *window;$/;"	m	struct:__anon88	file:
window	video/SDL_sysvideo.h	/^    SDL_Window *window;$/;"	m	struct:SDL_WindowShaper
window	video/cocoa/SDL_cocoawindow.h	/^    SDL_Window *window;$/;"	m	struct:SDL_WindowData
window	video/directfb/SDL_DirectFB_render.c	/^    SDL_Window *window;$/;"	m	struct:__anon48	file:
window	video/uikit/SDL_uikitviewcontroller.h	/^@property (readwrite) SDL_Window *window;$/;"	v
window	video/windows/SDL_windowswindow.h	/^    SDL_Window *window;$/;"	m	struct:__anon57
window	video/x11/SDL_x11messagebox.c	/^    Window window;$/;"	m	struct:SDL_MessageBoxDataX11	file:
window	video/x11/SDL_x11window.h	/^    SDL_Window *window;$/;"	m	struct:__anon25
window_framebuffer	render/opengles/SDL_render_gles.c	/^    GLuint window_framebuffer;$/;"	m	struct:__anon80	file:
window_framebuffer	render/opengles2/SDL_render_gles2.c	/^    GLuint window_framebuffer;$/;"	m	struct:GLES2_DriverContext	file:
window_magic	video/SDL_sysvideo.h	/^    Uint8 window_magic;$/;"	m	struct:SDL_VideoDevice
window_surface	video/directfb/SDL_DirectFB_window.h	/^    IDirectFBSurface        *window_surface;    \/* window surface *\/$/;"	m	struct:_DFB_WindowData
windowed	video/SDL_sysvideo.h	/^    SDL_Rect windowed;$/;"	m	struct:SDL_Window
windowlist	video/x11/SDL_x11video.h	/^    SDL_WindowData **windowlist;$/;"	m	struct:SDL_VideoData
windowlistlength	video/x11/SDL_x11video.h	/^    int windowlistlength;$/;"	m	struct:SDL_VideoData
windows	video/SDL_sysvideo.h	/^    SDL_Window *windows;$/;"	m	struct:SDL_VideoDevice
windows_file_close	file/SDL_rwops.c	/^windows_file_close(SDL_RWops * context)$/;"	f	file:
windows_file_open	file/SDL_rwops.c	/^windows_file_open(SDL_RWops * context, const char *filename, const char *mode)$/;"	f	file:
windows_file_read	file/SDL_rwops.c	/^windows_file_read(SDL_RWops * context, void *ptr, size_t size, size_t maxnum)$/;"	f	file:
windows_file_seek	file/SDL_rwops.c	/^windows_file_seek(SDL_RWops * context, Sint64 offset, int whence)$/;"	f	file:
windows_file_size	file/SDL_rwops.c	/^windows_file_size(SDL_RWops * context)$/;"	f	file:
windows_file_write	file/SDL_rwops.c	/^windows_file_write(SDL_RWops * context, const void *ptr, size_t size,$/;"	f	file:
windows_scancode_table	events/scancodes_windows.h	/^static const SDL_Scancode windows_scancode_table[] = $/;"	v
wm_delete_message	video/x11/SDL_x11messagebox.c	/^    Atom wm_delete_message;$/;"	m	struct:SDL_MessageBoxDataX11	file:
wm_grab	video/directfb/SDL_DirectFB_window.h	/^    int                     wm_grab;$/;"	m	struct:_DFB_WindowData
wm_lastx	video/directfb/SDL_DirectFB_window.h	/^    int                     wm_lastx;$/;"	m	struct:_DFB_WindowData
wm_lasty	video/directfb/SDL_DirectFB_window.h	/^    int                     wm_lasty;$/;"	m	struct:_DFB_WindowData
wm_needs_redraw	video/directfb/SDL_DirectFB_window.h	/^    int                     wm_needs_redraw;$/;"	m	struct:_DFB_WindowData
wm_protocols	video/x11/SDL_x11messagebox.c	/^    Atom wm_protocols;$/;"	m	struct:SDL_MessageBoxDataX11	file:
wmmsg_free	events/SDL_events.c	/^    SDL_SysWMEntry *wmmsg_free;$/;"	m	struct:__anon60	file:
wmmsg_used	events/SDL_events.c	/^    SDL_SysWMEntry *wmmsg_used;$/;"	m	struct:__anon60	file:
wmtab	video/windows/wmmsg.h	/^char *wmtab[] = {$/;"	v
wndproc	video/windows/SDL_windowswindow.h	/^    WNDPROC wndproc;$/;"	m	struct:__anon57
word	libm/math_private.h	/^    u_int32_t word;$/;"	m	union:__anon106
write_controllers	joystick/sort_controllers.py	/^def write_controllers():$/;"	f
write_delay	audio/disk/SDL_diskaudio.h	/^    Uint32 write_delay;$/;"	m	struct:SDL_PrivateAudioData
write_delay	audio/dummy/SDL_dummyaudio.h	/^    Uint32 write_delay;$/;"	m	struct:SDL_PrivateAudioData
write_pos	audio/SDL_sysaudio.h	/^    int read_pos, write_pos;    \/* the position of the write and read heads in bytes *\/$/;"	m	struct:__anon107
written	audio/nas/SDL_nasaudio.h	/^    int written;$/;"	m	struct:SDL_PrivateAudioData
written	audio/sun/SDL_sunaudio.h	/^    Sint32 written;             \/* The number of samples written *\/$/;"	m	struct:SDL_PrivateAudioData
x	events/SDL_gesture.c	/^    float x,y;$/;"	m	struct:__anon61	file:
x	events/SDL_mouse_c.h	/^    int x;$/;"	m	struct:__anon65
x	joystick/psp/SDL_sysjoystick.c	/^  int x;$/;"	m	struct:__anon66	file:
x	render/SDL_sysrender.h	/^    float x;$/;"	m	struct:__anon74
x	render/SDL_sysrender.h	/^    float x;$/;"	m	struct:__anon75
x	render/direct3d/SDL_render_d3d.c	/^    float x, y, z;$/;"	m	struct:__anon96	file:
x	render/psp/SDL_render_psp.c	/^    float   x, y, z;$/;"	m	struct:__anon78	file:
x	render/psp/SDL_render_psp.c	/^    float   x, y, z;$/;"	m	struct:__anon79	file:
x	video/SDL_sysvideo.h	/^    int x, y;$/;"	m	struct:SDL_Window
x	video/windows/SDL_windowsmessagebox.c	/^    short x;$/;"	m	struct:__anon52	file:
x	video/windows/SDL_windowsmessagebox.c	/^    short x;$/;"	m	struct:__anon53	file:
x	video/windows/SDL_windowsvideo.h	/^    LONG      x;$/;"	m	struct:_TOUCHINPUT
x	video/x11/SDL_x11messagebox.c	/^    int x, y;                           \/* Text position *\/$/;"	m	struct:SDL_MessageBoxButtonDataX11	file:
x	video/x11/SDL_x11modes.h	/^    int x;$/;"	m	struct:__anon18
x11_empty_cursor	video/x11/SDL_x11mouse.c	/^static Cursor x11_empty_cursor = None;$/;"	v	file:
x11_load_refcount	video/x11/SDL_x11dyn.c	/^static int x11_load_refcount = 0;$/;"	v	file:
x11dynlib	video/x11/SDL_x11dyn.c	/^} x11dynlib;$/;"	t	typeref:struct:__anon26	file:
x11libs	video/x11/SDL_x11dyn.c	/^static x11dynlib x11libs[] = {$/;"	v	file:
xdelta	events/SDL_mouse_c.h	/^    int xdelta;$/;"	m	struct:__anon65
xdnd_req	video/x11/SDL_x11window.h	/^    Atom xdnd_req;$/;"	m	struct:__anon25
xdnd_source	video/x11/SDL_x11window.h	/^    Window xdnd_source;$/;"	m	struct:__anon25
xfree86_scancode_table	events/scancodes_xfree86.h	/^static const SDL_Scancode xfree86_scancode_table[] = {$/;"	v
xfree86_scancode_table2	events/scancodes_xfree86.h	/^static const SDL_Scancode xfree86_scancode_table2[] = {$/;"	v
ximage	video/x11/SDL_x11window.h	/^    XImage *ximage;$/;"	m	struct:__anon25
xinerama_info	video/x11/SDL_x11modes.h	/^    XineramaScreenInfo xinerama_info;$/;"	m	struct:__anon18
xinerama_screen	video/x11/SDL_x11modes.h	/^    int xinerama_screen;$/;"	m	struct:__anon18
xinput2_initialized	video/x11/SDL_x11xinput2.c	/^static int xinput2_initialized = 0;$/;"	v	file:
xinput2_multitouch_supported	video/x11/SDL_x11xinput2.c	/^static int xinput2_multitouch_supported = 0;$/;"	v	file:
xinput2_opcode	video/x11/SDL_x11xinput2.c	/^static int xinput2_opcode;$/;"	v	file:
xrandr_mode	video/x11/SDL_x11modes.h	/^    RRMode xrandr_mode;$/;"	m	struct:__anon19
xrandr_output	video/x11/SDL_x11modes.h	/^    RROutput xrandr_output;$/;"	m	struct:__anon18
xtext	video/x11/SDL_x11messagebox.c	/^    int xtext, ytext;                   \/* Text position to start drawing at. *\/$/;"	m	struct:SDL_MessageBoxDataX11	file:
xwindow	video/x11/SDL_x11window.h	/^    Window xwindow;$/;"	m	struct:__anon25
y	events/SDL_gesture.c	/^    float x,y;$/;"	m	struct:__anon61	file:
y	events/SDL_mouse_c.h	/^    int y;$/;"	m	struct:__anon65
y	joystick/psp/SDL_sysjoystick.c	/^  int y;$/;"	m	struct:__anon66	file:
y	render/SDL_sysrender.h	/^    float y;$/;"	m	struct:__anon74
y	render/SDL_sysrender.h	/^    float y;$/;"	m	struct:__anon75
y	render/direct3d/SDL_render_d3d.c	/^    float x, y, z;$/;"	m	struct:__anon96	file:
y	render/psp/SDL_render_psp.c	/^    float   x, y, z;$/;"	m	struct:__anon78	file:
y	render/psp/SDL_render_psp.c	/^    float   x, y, z;$/;"	m	struct:__anon79	file:
y	render/software/SDL_rotate.c	/^    Uint8 y;$/;"	m	struct:tColorY	file:
y	video/SDL_sysvideo.h	/^    int x, y;$/;"	m	struct:SDL_Window
y	video/windows/SDL_windowsmessagebox.c	/^    short y;$/;"	m	struct:__anon52	file:
y	video/windows/SDL_windowsmessagebox.c	/^    short y;$/;"	m	struct:__anon53	file:
y	video/windows/SDL_windowsvideo.h	/^    LONG      y;$/;"	m	struct:_TOUCHINPUT
y	video/x11/SDL_x11messagebox.c	/^    int x, y;                           \/* Text position *\/$/;"	m	struct:SDL_MessageBoxButtonDataX11	file:
y	video/x11/SDL_x11modes.h	/^    int y;$/;"	m	struct:__anon18
ycrcb422	video/x11/edid.h	/^	    int		ycrcb422;$/;"	m	struct:MonitorInfo::__anon15::__anon16
ycrcb444	video/x11/edid.h	/^	    int		ycrcb444;$/;"	m	struct:MonitorInfo::__anon15::__anon16
ydelta	events/SDL_mouse_c.h	/^    int ydelta;$/;"	m	struct:__anon65
yesno	video/x11/edid-parse.c	/^yesno (int v)$/;"	f	file:
ytext	video/x11/SDL_x11messagebox.c	/^    int xtext, ytext;                   \/* Text position to start drawing at. *\/$/;"	m	struct:SDL_MessageBoxDataX11	file:
yuv	render/SDL_sysrender.h	/^    SDL_SW_YUVTexture *yuv;$/;"	m	struct:SDL_Texture
yuv	render/direct3d/SDL_render_d3d.c	/^    SDL_bool yuv;$/;"	m	struct:__anon95	file:
yuv	render/opengl/SDL_render_gl.c	/^    SDL_bool yuv;$/;"	m	struct:__anon92	file:
z	render/direct3d/SDL_render_d3d.c	/^    float x, y, z;$/;"	m	struct:__anon96	file:
z	render/psp/SDL_render_psp.c	/^    float   x, y, z;$/;"	m	struct:__anon78	file:
z	render/psp/SDL_render_psp.c	/^    float   x, y, z;$/;"	m	struct:__anon79	file:
zero	libm/e_atan2.c	/^zero  = 0.0,$/;"	v	file:
zero	libm/e_log.c	/^static const double zero = 0.0;$/;"	v	file:
zero	libm/e_log.c	/^static double zero = 0.0;$/;"	v	file:
zero	libm/e_pow.c	/^         zero = 0.0, one = 1.0, two = 2.0, two53 = 9007199254740992.0,  \/* 0x43400000, 0x00000000 *\/$/;"	v	file:
zero	libm/e_rem_pio2.c	/^  zero = 0.00000000000000000000e+00,    \/* 0x00000000, 0x00000000 *\/$/;"	v	file:
zero	libm/k_rem_pio2.c	/^  zero = 0.0, one = 1.0, two24 = 1.67772160000000000000e+07,    \/* 0x41700000, 0x00000000 *\/$/;"	v	file:
~SDL_BApp	main/beos/SDL_BApp.h	/^    virtual ~SDL_BApp() {$/;"	f	class:SDL_BApp
~SDL_BWin	video/bwindow/SDL_BWin.h	/^    virtual ~ SDL_BWin()$/;"	f	class:SDL_BWin
